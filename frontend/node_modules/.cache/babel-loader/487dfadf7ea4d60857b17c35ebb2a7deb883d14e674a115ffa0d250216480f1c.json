{"ast":null,"code":"function zipWith(arr1) {\n  for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    rest[_key - 1] = arguments[_key];\n  }\n  const arrs = [arr1, ...rest.slice(0, -1)];\n  const combine = rest[rest.length - 1];\n  const maxIndex = Math.max(...arrs.map(arr => arr.length));\n  const result = Array(maxIndex);\n  for (let i = 0; i < maxIndex; i++) {\n    const elements = arrs.map(arr => arr[i]);\n    result[i] = combine(...elements);\n  }\n  return result;\n}\nexport { zipWith };","map":{"version":3,"names":["zipWith","arr1","_len","arguments","length","rest","Array","_key","arrs","slice","combine","maxIndex","Math","max","map","arr","result","i","elements"],"sources":["/Users/amanrana/Desktop/sangeet_restaurant_fresh/node_modules/es-toolkit/dist/array/zipWith.mjs"],"sourcesContent":["function zipWith(arr1, ...rest) {\n    const arrs = [arr1, ...rest.slice(0, -1)];\n    const combine = rest[rest.length - 1];\n    const maxIndex = Math.max(...arrs.map(arr => arr.length));\n    const result = Array(maxIndex);\n    for (let i = 0; i < maxIndex; i++) {\n        const elements = arrs.map(arr => arr[i]);\n        result[i] = combine(...elements);\n    }\n    return result;\n}\n\nexport { zipWith };\n"],"mappings":"AAAA,SAASA,OAAOA,CAACC,IAAI,EAAW;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EAC1B,MAAMC,IAAI,GAAG,CAACP,IAAI,EAAE,GAAGI,IAAI,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACzC,MAAMC,OAAO,GAAGL,IAAI,CAACA,IAAI,CAACD,MAAM,GAAG,CAAC,CAAC;EACrC,MAAMO,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGL,IAAI,CAACM,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACX,MAAM,CAAC,CAAC;EACzD,MAAMY,MAAM,GAAGV,KAAK,CAACK,QAAQ,CAAC;EAC9B,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,QAAQ,EAAEM,CAAC,EAAE,EAAE;IAC/B,MAAMC,QAAQ,GAAGV,IAAI,CAACM,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACE,CAAC,CAAC,CAAC;IACxCD,MAAM,CAACC,CAAC,CAAC,GAAGP,OAAO,CAAC,GAAGQ,QAAQ,CAAC;EACpC;EACA,OAAOF,MAAM;AACjB;AAEA,SAAShB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}