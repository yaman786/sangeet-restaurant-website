{"ast":null,"code":"import _objectSpread from\"/Users/amanrana/Desktop/sangeet_restaurant_fresh/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import{motion,AnimatePresence}from'framer-motion';import{Clock,CheckCircle,AlertCircle,Package,Timer}from'lucide-react';import socketService from'../services/socketService';import{fetchAllOrders,updateOrderStatus}from'../services/api';import toast from'react-hot-toast';import CustomDropdown from'./CustomDropdown';import{isNewItem,sortItemsByNewness,hasMultipleSessions}from'../utils/itemUtils';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const OrderQueue=_ref=>{let{onStatsUpdate,soundEnabled=true,kitchenMode=false,activeFilter='all',sortBy='priority'}=_ref;const[orders,setOrders]=useState([]);const[loading,setLoading]=useState(true);const[completedOrders,setCompletedOrders]=useState([]);const statusOptions=[{value:'pending',label:'Pending'},{value:'preparing',label:'Preparing'},{value:'ready',label:'Ready'},{value:'completed',label:'Completed'},{value:'cancelled',label:'Cancelled'}];const getStatusPriority=status=>{const priorities={'pending':1,'preparing':2,'ready':3,'completed':4};return priorities[status]||0;};const sortOrders=useCallback(ordersList=>{return ordersList.sort((a,b)=>{// If filtering by specific status, only sort by time\nif(activeFilter!=='all'){return new Date(b.created_at)-new Date(a.created_at);}// For \"All Orders\" view, use the selected sort option\nswitch(sortBy){case'priority':// First sort by status priority, then by time\nconst statusDiff=getStatusPriority(a.status)-getStatusPriority(b.status);if(statusDiff!==0)return statusDiff;return new Date(b.created_at)-new Date(a.created_at);case'time':return new Date(b.created_at)-new Date(a.created_at);case'time-oldest':return new Date(a.created_at)-new Date(b.created_at);case'table':// Sort by table number (numeric)\nconst tableA=parseInt(a.table_number)||0;const tableB=parseInt(b.table_number)||0;if(tableA!==tableB)return tableA-tableB;// If same table, sort by time (newest first)\nreturn new Date(b.created_at)-new Date(a.created_at);case'customer':// Sort by customer name alphabetically\nconst nameA=(a.customer_name||'').toLowerCase();const nameB=(b.customer_name||'').toLowerCase();if(nameA!==nameB)return nameA.localeCompare(nameB);// If same name, sort by time (newest first)\nreturn new Date(b.created_at)-new Date(a.created_at);case'amount':// Sort by total amount (high to low)\nconst amountA=parseFloat(a.total_amount)||0;const amountB=parseFloat(b.total_amount)||0;if(amountA!==amountB)return amountB-amountA;// If same amount, sort by time (newest first)\nreturn new Date(b.created_at)-new Date(a.created_at);case'amount-low':// Sort by total amount (low to high)\nconst amountLowA=parseFloat(a.total_amount)||0;const amountLowB=parseFloat(b.total_amount)||0;if(amountLowA!==amountLowB)return amountLowA-amountLowB;// If same amount, sort by time (newest first)\nreturn new Date(b.created_at)-new Date(a.created_at);default:// Default to priority sorting\nconst defaultStatusDiff=getStatusPriority(a.status)-getStatusPriority(b.status);if(defaultStatusDiff!==0)return defaultStatusDiff;return new Date(b.created_at)-new Date(a.created_at);}});},[activeFilter,sortBy]);const loadOrders=useCallback(async()=>{try{const response=await fetchAllOrders();// Separate completed orders from active orders\nconst activeOrders=response.filter(order=>order.status!=='completed');const completedOrders=response.filter(order=>order.status==='completed');setOrders(sortOrders(activeOrders));setCompletedOrders(sortOrders(completedOrders));}catch(error){console.error('Error loading orders:',error);// Show error message instead of demo data\ntoast.error('Failed to load orders. Please check your connection and try again.');// Set empty arrays instead of demo data\nsetOrders([]);setCompletedOrders([]);}finally{setLoading(false);}},[sortOrders]);const setupSocketListeners=useCallback(()=>{try{// Ensure socket is connected before setting up listeners\nif(!socketService.isConnected){socketService.connect();}// Join kitchen room to receive notifications\nsocketService.joinKitchen();// Listen for new orders → minimal: reload\nsocketService.onNewOrder(()=>{if(soundEnabled)socketService.playNotificationSound('notification');loadOrders();});// Listen for status updates → minimal: reload\nsocketService.onOrderStatusUpdate(data=>{if(data.status==='ready'&&soundEnabled)socketService.playNotificationSound('completion');loadOrders();});// Listen for order deletions → minimal: reload\nsocketService.onOrderDeleted(data=>{loadOrders();});// Listen for new items added to existing orders\nsocketService.onNewItemsAdded(data=>{// Show notification for kitchen\ntoast.success(\"New items added to Order #\".concat(data.orderId,\"!\"),{duration:4000,icon:'➕'});loadOrders();});}catch(error){console.error('Error setting up socket listeners:',error);}},[soundEnabled,sortOrders]);useEffect(()=>{loadOrders();},[]);useEffect(()=>{setupSocketListeners();return()=>{socketService.removeListener('new-order');socketService.removeListener('order-status-update');socketService.removeListener('order-deleted');};},[setupSocketListeners]);// Validate status transitions to prevent backward movement\nconst isValidStatusTransition=(currentStatus,newStatus)=>{var _statusFlow$currentSt;const statusFlow={'pending':['preparing','cancelled'],'preparing':['ready','cancelled'],'ready':['completed','cancelled'],'completed':[],// No further transitions allowed\n'cancelled':[]// No further transitions allowed\n};return((_statusFlow$currentSt=statusFlow[currentStatus])===null||_statusFlow$currentSt===void 0?void 0:_statusFlow$currentSt.includes(newStatus))||false;};const handleStatusUpdate=async(orderId,newStatus)=>{try{// Find the current order to get its status\nconst currentOrder=orders.find(order=>order.id===orderId)||completedOrders.find(order=>order.id===orderId);if(!currentOrder){toast.error('Order not found');return;}// Validate status transition\nif(!isValidStatusTransition(currentOrder.status,newStatus)){toast.error(\"Cannot change status from \\\"\".concat(currentOrder.status,\"\\\" to \\\"\").concat(newStatus,\"\\\". Invalid transition.\"));return;}await updateOrderStatus(orderId,newStatus);if(newStatus==='completed'){// Move to completed orders and remove from active queue after delay\nconst completedOrder=orders.find(order=>order.id===orderId);if(completedOrder){// Update the order status first\nconst updatedOrder=_objectSpread(_objectSpread({},completedOrder),{},{status:newStatus});setCompletedOrders(prev=>sortOrders([updatedOrder,...prev]));// Remove from active orders after 5 seconds\nsetTimeout(()=>{setOrders(prev=>prev.filter(order=>order.id!==orderId));},5000);toast.success(\"Order #\".concat(orderId,\" completed! Will be removed in 5 seconds.\"));}}else{// Update status normally\nsetOrders(prev=>{const updatedOrders=prev.map(order=>order.id===orderId?_objectSpread(_objectSpread({},order),{},{status:newStatus}):order);return sortOrders(updatedOrders);});toast.success(\"Order #\".concat(orderId,\" status updated to \").concat(newStatus));}}catch(error){console.error('Error updating order status:',error);toast.error('Failed to update order status');}};const getStatusColor=status=>{switch(status){case'pending':return'text-yellow-500 bg-yellow-500/10 border-yellow-500/20';case'confirmed':return'text-blue-500 bg-blue-500/10 border-blue-500/20';case'preparing':return'text-orange-500 bg-orange-500/10 border-orange-500/20';case'ready':return'text-green-500 bg-green-500/10 border-green-500/20';case'completed':return'text-gray-500 bg-gray-500/10 border-gray-500/20';default:return'text-gray-500 bg-gray-500/10 border-gray-500/20';}};const getStatusIcon=status=>{switch(status){case'pending':return/*#__PURE__*/_jsx(Clock,{className:\"h-5 w-5\"});case'confirmed':return/*#__PURE__*/_jsx(Package,{className:\"h-5 w-5\"});case'preparing':return/*#__PURE__*/_jsx(Timer,{className:\"h-5 w-5\"});case'ready':return/*#__PURE__*/_jsx(CheckCircle,{className:\"h-5 w-5\"});case'completed':return/*#__PURE__*/_jsx(CheckCircle,{className:\"h-5 w-5\"});default:return/*#__PURE__*/_jsx(AlertCircle,{className:\"h-5 w-5\"});}};const filteredOrders=activeFilter==='all'?sortOrders([...orders]):activeFilter==='completed'?sortOrders([...completedOrders]):sortOrders(orders.filter(order=>order.status===activeFilter));// eslint-disable-next-line no-unused-vars\nconst clearCompletedOrders=()=>{setCompletedOrders([]);toast.success('Completed orders cleared');};const calculateStats=useCallback(()=>{const stats={total:orders.length,pending:orders.filter(order=>order.status==='pending').length,preparing:orders.filter(order=>order.status==='preparing').length,ready:orders.filter(order=>order.status==='ready').length,completed:completedOrders.length};if(onStatsUpdate){onStatsUpdate(stats);}},[orders,completedOrders,onStatsUpdate]);useEffect(()=>{calculateStats();},[calculateStats]);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-64\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-sangeet-400\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\",children:/*#__PURE__*/_jsx(AnimatePresence,{children:filteredOrders.map(order=>/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},exit:{opacity:0,y:-20},className:\"bg-sangeet-neutral-800 rounded-lg p-4 border \".concat(order.status==='ready'?'border-green-500 bg-green-500/10 shadow-lg shadow-green-500/20':'border-sangeet-neutral-700',\" \").concat(order.status==='completed'?'opacity-60':'',\" flex flex-col h-full min-h-[320px]\"),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-base font-bold text-sangeet-neutral-100\",children:[order.status==='ready'&&/*#__PURE__*/_jsx(\"span\",{className:\"text-green-400 mr-1\",children:\"\\uD83C\\uDF7D\\uFE0F\"}),\"#\",order.order_number]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-sangeet-neutral-400\",children:[\"Table \",order.table_number,\" \\u2022 \",(()=>{try{const date=new Date(order.created_at);return isNaN(date.getTime())?'Just now':date.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'});}catch(error){return'Just now';}})(),order.updated_at&&order.updated_at!==order.created_at&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-green-400 ml-1\",children:[\"\\u2022 Updated: \",(()=>{try{const date=new Date(order.updated_at);return isNaN(date.getTime())?'Just now':date.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'});}catch(error){return'Just now';}})()]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-1 px-2 py-1 rounded-full border text-xs \".concat(getStatusColor(order.status)),children:[getStatusIcon(order.status),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:order.status}),/*#__PURE__*/_jsx(\"div\",{className:\"w-1.5 h-1.5 bg-green-400 rounded-full animate-pulse\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-sangeet-neutral-100 font-medium\",children:order.customer_name}),order.special_instructions&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-1 p-2 bg-yellow-500/10 border border-yellow-500/20 rounded text-xs\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-yellow-400\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Note:\"}),\" \",order.special_instructions]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3 flex-grow\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-xs font-medium text-sangeet-neutral-400 mb-1\",children:\"Items:\"}),hasMultipleSessions(order.items)&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-2 p-1 bg-orange-900/20 border border-orange-500/30 rounded text-xs\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-orange-400\",children:\"\\u26A0\\uFE0F Merged Order\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-1\",children:order.items&&sortItemsByNewness(order.items).map(item=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-xs py-0.5\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-1\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-sangeet-neutral-300\",children:[item.quantity,\"x \",item.menu_item_name||item.name]}),isNewItem(item.created_at)&&/*#__PURE__*/_jsx(\"span\",{className:\"bg-green-500 text-white px-1 py-0.5 rounded text-xs font-medium animate-pulse\",children:\"NEW\"})]}),item.special_instructions&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-orange-400\",children:[\"(\",item.special_instructions,\")\"]})]},item.id))})]}),order.status!=='completed'&&order.status!=='cancelled'&&/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-1 mt-auto pt-3\",children:kitchenMode?/*#__PURE__*/// Kitchen Mode: Smart touch-friendly buttons with logical flow\n_jsxs(_Fragment,{children:[order.status==='pending'&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleStatusUpdate(order.id,'preparing'),className:\"flex-1 px-4 py-2 bg-orange-600 text-white rounded-md font-medium hover:bg-orange-700 transition-colors text-sm\",children:\"\\uD83C\\uDF73 Start Cooking\"}),order.status==='preparing'&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleStatusUpdate(order.id,'ready'),className:\"flex-1 px-4 py-2 bg-green-600 text-white rounded-md font-medium hover:bg-green-700 transition-colors text-sm shadow-lg\",children:\"\\uD83C\\uDF7D\\uFE0F Ready to Serve\"}),order.status==='ready'&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleStatusUpdate(order.id,'completed'),className:\"flex-1 px-4 py-2 bg-gray-600 text-white rounded-md font-medium hover:bg-gray-700 transition-colors text-sm\",children:\"\\u2705 Mark Served\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleStatusUpdate(order.id,'cancelled'),className:\"px-3 py-2 bg-red-600 text-white rounded-md font-medium hover:bg-red-700 transition-colors text-sm\",children:\"\\u274C Cancel\"})]}):/*#__PURE__*/// Admin Mode: Smart dropdown with logical restrictions\n_jsxs(\"div\",{className:\"w-full space-y-2\",children:[/*#__PURE__*/_jsx(CustomDropdown,{value:order.status,onChange:newStatus=>handleStatusUpdate(order.id,newStatus),options:statusOptions,className:\"w-full\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleStatusUpdate(order.id,'cancelled'),className:\"w-full px-2 py-1 bg-red-600 text-white rounded-md font-medium hover:bg-red-700 transition-colors text-sm\",children:\"\\u274C Cancel Order\"})]})}),(order.status==='completed'||order.status==='cancelled')&&/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-1 mt-auto pt-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-full text-center\",children:/*#__PURE__*/_jsx(\"span\",{className:\"px-3 py-1 rounded-full text-xs font-medium \".concat(order.status==='completed'?'bg-green-500/20 text-green-400 border border-green-500/30':'bg-red-500/20 text-red-400 border border-red-500/30'),children:order.status==='completed'?'✅ Order Completed':'❌ Order Cancelled'})})})]},\"\".concat(order.id,\"-\").concat(order.status,\"-\").concat(order.updated_at||order.created_at)))})}),filteredOrders.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-8\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sangeet-neutral-500 text-lg\",children:activeFilter==='completed'?'No completed orders':'No orders found'})})]});};export default OrderQueue;","map":{"version":3,"names":["React","useState","useEffect","useCallback","motion","AnimatePresence","Clock","CheckCircle","AlertCircle","Package","Timer","socketService","fetchAllOrders","updateOrderStatus","toast","CustomDropdown","isNewItem","sortItemsByNewness","hasMultipleSessions","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","OrderQueue","_ref","onStatsUpdate","soundEnabled","kitchenMode","activeFilter","sortBy","orders","setOrders","loading","setLoading","completedOrders","setCompletedOrders","statusOptions","value","label","getStatusPriority","status","priorities","sortOrders","ordersList","sort","a","b","Date","created_at","statusDiff","tableA","parseInt","table_number","tableB","nameA","customer_name","toLowerCase","nameB","localeCompare","amountA","parseFloat","total_amount","amountB","amountLowA","amountLowB","defaultStatusDiff","loadOrders","response","activeOrders","filter","order","error","console","setupSocketListeners","isConnected","connect","joinKitchen","onNewOrder","playNotificationSound","onOrderStatusUpdate","data","onOrderDeleted","onNewItemsAdded","success","concat","orderId","duration","icon","removeListener","isValidStatusTransition","currentStatus","newStatus","_statusFlow$currentSt","statusFlow","includes","handleStatusUpdate","currentOrder","find","id","completedOrder","updatedOrder","_objectSpread","prev","setTimeout","updatedOrders","map","getStatusColor","getStatusIcon","className","filteredOrders","clearCompletedOrders","calculateStats","stats","total","length","pending","preparing","ready","completed","children","div","initial","opacity","y","animate","exit","order_number","date","isNaN","getTime","toLocaleTimeString","hour","minute","updated_at","special_instructions","items","item","quantity","menu_item_name","name","onClick","onChange","options"],"sources":["/Users/amanrana/Desktop/sangeet_restaurant_fresh/frontend/src/components/OrderQueue.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Clock, CheckCircle, AlertCircle, Package, Timer } from 'lucide-react';\nimport socketService from '../services/socketService';\nimport { fetchAllOrders, updateOrderStatus } from '../services/api';\nimport toast from 'react-hot-toast';\nimport CustomDropdown from './CustomDropdown';\nimport { isNewItem, sortItemsByNewness, hasMultipleSessions } from '../utils/itemUtils';\n\nconst OrderQueue = ({ onStatsUpdate, soundEnabled = true, kitchenMode = false, activeFilter = 'all', sortBy = 'priority' }) => {\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [completedOrders, setCompletedOrders] = useState([]);\n\n  const statusOptions = [\n    { value: 'pending', label: 'Pending' },\n    { value: 'preparing', label: 'Preparing' },\n    { value: 'ready', label: 'Ready' },\n    { value: 'completed', label: 'Completed' },\n    { value: 'cancelled', label: 'Cancelled' }\n  ];\n\n  const getStatusPriority = (status) => {\n    const priorities = {\n      'pending': 1,\n      'preparing': 2,\n      'ready': 3,\n      'completed': 4\n    };\n    return priorities[status] || 0;\n  };\n\n  const sortOrders = useCallback((ordersList) => {\n    return ordersList.sort((a, b) => {\n      // If filtering by specific status, only sort by time\n      if (activeFilter !== 'all') {\n        return new Date(b.created_at) - new Date(a.created_at);\n      }\n\n      // For \"All Orders\" view, use the selected sort option\n      switch (sortBy) {\n        case 'priority':\n          // First sort by status priority, then by time\n          const statusDiff = getStatusPriority(a.status) - getStatusPriority(b.status);\n          if (statusDiff !== 0) return statusDiff;\n          return new Date(b.created_at) - new Date(a.created_at);\n        \n        case 'time':\n          return new Date(b.created_at) - new Date(a.created_at);\n        \n        case 'time-oldest':\n          return new Date(a.created_at) - new Date(b.created_at);\n        \n        case 'table':\n          // Sort by table number (numeric)\n          const tableA = parseInt(a.table_number) || 0;\n          const tableB = parseInt(b.table_number) || 0;\n          if (tableA !== tableB) return tableA - tableB;\n          // If same table, sort by time (newest first)\n          return new Date(b.created_at) - new Date(a.created_at);\n        \n        case 'customer':\n          // Sort by customer name alphabetically\n          const nameA = (a.customer_name || '').toLowerCase();\n          const nameB = (b.customer_name || '').toLowerCase();\n          if (nameA !== nameB) return nameA.localeCompare(nameB);\n          // If same name, sort by time (newest first)\n          return new Date(b.created_at) - new Date(a.created_at);\n        \n        case 'amount':\n          // Sort by total amount (high to low)\n          const amountA = parseFloat(a.total_amount) || 0;\n          const amountB = parseFloat(b.total_amount) || 0;\n          if (amountA !== amountB) return amountB - amountA;\n          // If same amount, sort by time (newest first)\n          return new Date(b.created_at) - new Date(a.created_at);\n        \n        case 'amount-low':\n          // Sort by total amount (low to high)\n          const amountLowA = parseFloat(a.total_amount) || 0;\n          const amountLowB = parseFloat(b.total_amount) || 0;\n          if (amountLowA !== amountLowB) return amountLowA - amountLowB;\n          // If same amount, sort by time (newest first)\n          return new Date(b.created_at) - new Date(a.created_at);\n        \n        default:\n          // Default to priority sorting\n          const defaultStatusDiff = getStatusPriority(a.status) - getStatusPriority(b.status);\n          if (defaultStatusDiff !== 0) return defaultStatusDiff;\n          return new Date(b.created_at) - new Date(a.created_at);\n      }\n    });\n  }, [activeFilter, sortBy]);\n\n  const loadOrders = useCallback(async () => {\n    try {\n      const response = await fetchAllOrders();\n      \n      // Separate completed orders from active orders\n      const activeOrders = response.filter(order => order.status !== 'completed');\n      const completedOrders = response.filter(order => order.status === 'completed');\n      \n      setOrders(sortOrders(activeOrders));\n      setCompletedOrders(sortOrders(completedOrders));\n    } catch (error) {\n      console.error('Error loading orders:', error);\n      \n      // Show error message instead of demo data\n      toast.error('Failed to load orders. Please check your connection and try again.');\n      \n      // Set empty arrays instead of demo data\n      setOrders([]);\n      setCompletedOrders([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [sortOrders]);\n\n  const setupSocketListeners = useCallback(() => {\n    try {\n      // Ensure socket is connected before setting up listeners\n      if (!socketService.isConnected) {\n        socketService.connect();\n      }\n      \n      // Join kitchen room to receive notifications\n      socketService.joinKitchen();\n\n      // Listen for new orders → minimal: reload\n      socketService.onNewOrder(() => {\n        if (soundEnabled) socketService.playNotificationSound('notification');\n        loadOrders();\n      });\n\n      // Listen for status updates → minimal: reload\n      socketService.onOrderStatusUpdate((data) => {\n        if (data.status === 'ready' && soundEnabled) socketService.playNotificationSound('completion');\n        loadOrders();\n      });\n\n      // Listen for order deletions → minimal: reload\n      socketService.onOrderDeleted((data) => {\n        loadOrders();\n      });\n\n      // Listen for new items added to existing orders\n      socketService.onNewItemsAdded((data) => {\n        // Show notification for kitchen\n        toast.success(`New items added to Order #${data.orderId}!`, {\n          duration: 4000,\n          icon: '➕'\n        });\n        loadOrders();\n      });\n\n    } catch (error) {\n      console.error('Error setting up socket listeners:', error);\n    }\n  }, [soundEnabled, sortOrders]);\n\n  useEffect(() => {\n    loadOrders();\n  }, []);\n\n  useEffect(() => {\n    setupSocketListeners();\n\n    return () => {\n      socketService.removeListener('new-order');\n      socketService.removeListener('order-status-update');\n      socketService.removeListener('order-deleted');\n    };\n  }, [setupSocketListeners]);\n\n  // Validate status transitions to prevent backward movement\n  const isValidStatusTransition = (currentStatus, newStatus) => {\n    const statusFlow = {\n      'pending': ['preparing', 'cancelled'],\n      'preparing': ['ready', 'cancelled'],\n      'ready': ['completed', 'cancelled'],\n      'completed': [], // No further transitions allowed\n      'cancelled': [] // No further transitions allowed\n    };\n    \n    return statusFlow[currentStatus]?.includes(newStatus) || false;\n  };\n\n  const handleStatusUpdate = async (orderId, newStatus) => {\n    try {\n      // Find the current order to get its status\n      const currentOrder = orders.find(order => order.id === orderId) || \n                          completedOrders.find(order => order.id === orderId);\n      \n      if (!currentOrder) {\n        toast.error('Order not found');\n        return;\n      }\n\n      // Validate status transition\n      if (!isValidStatusTransition(currentOrder.status, newStatus)) {\n        toast.error(`Cannot change status from \"${currentOrder.status}\" to \"${newStatus}\". Invalid transition.`);\n        return;\n      }\n\n      await updateOrderStatus(orderId, newStatus);\n      \n      if (newStatus === 'completed') {\n        // Move to completed orders and remove from active queue after delay\n        const completedOrder = orders.find(order => order.id === orderId);\n        if (completedOrder) {\n          // Update the order status first\n          const updatedOrder = { ...completedOrder, status: newStatus };\n          setCompletedOrders(prev => sortOrders([updatedOrder, ...prev]));\n          \n          // Remove from active orders after 5 seconds\n          setTimeout(() => {\n            setOrders(prev => prev.filter(order => order.id !== orderId));\n          }, 5000);\n          \n          toast.success(`Order #${orderId} completed! Will be removed in 5 seconds.`);\n        }\n      } else {\n        // Update status normally\n        setOrders(prev => {\n          const updatedOrders = prev.map(order => \n            order.id === orderId \n              ? { ...order, status: newStatus }\n              : order\n          );\n          return sortOrders(updatedOrders);\n        });\n        toast.success(`Order #${orderId} status updated to ${newStatus}`);\n      }\n    } catch (error) {\n      console.error('Error updating order status:', error);\n      toast.error('Failed to update order status');\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'pending':\n        return 'text-yellow-500 bg-yellow-500/10 border-yellow-500/20';\n      case 'confirmed':\n        return 'text-blue-500 bg-blue-500/10 border-blue-500/20';\n      case 'preparing':\n        return 'text-orange-500 bg-orange-500/10 border-orange-500/20';\n      case 'ready':\n        return 'text-green-500 bg-green-500/10 border-green-500/20';\n      case 'completed':\n        return 'text-gray-500 bg-gray-500/10 border-gray-500/20';\n      default:\n        return 'text-gray-500 bg-gray-500/10 border-gray-500/20';\n    }\n  };\n\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'pending':\n        return <Clock className=\"h-5 w-5\" />;\n      case 'confirmed':\n        return <Package className=\"h-5 w-5\" />;\n      case 'preparing':\n        return <Timer className=\"h-5 w-5\" />;\n      case 'ready':\n        return <CheckCircle className=\"h-5 w-5\" />;\n      case 'completed':\n        return <CheckCircle className=\"h-5 w-5\" />;\n      default:\n        return <AlertCircle className=\"h-5 w-5\" />;\n    }\n  };\n\n  const filteredOrders = activeFilter === 'all' \n    ? sortOrders([...orders]) \n    : activeFilter === 'completed' \n      ? sortOrders([...completedOrders])\n      : sortOrders(orders.filter(order => order.status === activeFilter));\n\n  // eslint-disable-next-line no-unused-vars\n  const clearCompletedOrders = () => {\n    setCompletedOrders([]);\n    toast.success('Completed orders cleared');\n  };\n\n  const calculateStats = useCallback(() => {\n    const stats = {\n      total: orders.length,\n      pending: orders.filter(order => order.status === 'pending').length,\n      preparing: orders.filter(order => order.status === 'preparing').length,\n      ready: orders.filter(order => order.status === 'ready').length,\n      completed: completedOrders.length\n    };\n    \n    if (onStatsUpdate) {\n      onStatsUpdate(stats);\n    }\n  }, [orders, completedOrders, onStatsUpdate]);\n\n  useEffect(() => {\n    calculateStats();\n  }, [calculateStats]);\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-sangeet-400\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-4\">\n      {/* Orders Grid - Optimized for Kitchen */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n        <AnimatePresence>\n          {filteredOrders.map((order) => (\n            <motion.div\n              key={`${order.id}-${order.status}-${order.updated_at || order.created_at}`}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              className={`bg-sangeet-neutral-800 rounded-lg p-4 border ${\n                order.status === 'ready' \n                  ? 'border-green-500 bg-green-500/10 shadow-lg shadow-green-500/20' \n                  : 'border-sangeet-neutral-700'\n              } ${order.status === 'completed' ? 'opacity-60' : ''} flex flex-col h-full min-h-[320px]`}\n            >\n              {/* Order Header - Compact */}\n              <div className=\"flex justify-between items-start mb-3\">\n                <div>\n                  <h3 className=\"text-base font-bold text-sangeet-neutral-100\">\n                    {order.status === 'ready' && <span className=\"text-green-400 mr-1\">🍽️</span>}\n                    #{order.order_number}\n                  </h3>\n                  <p className=\"text-xs text-sangeet-neutral-400\">\n                    Table {order.table_number} • {(() => {\n                      try {\n                        const date = new Date(order.created_at);\n                        return isNaN(date.getTime()) ? 'Just now' : date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});\n                      } catch (error) {\n                        return 'Just now';\n                      }\n                    })()}\n                    {order.updated_at && order.updated_at !== order.created_at && (\n                      <span className=\"text-green-400 ml-1\">\n                        • Updated: {(() => {\n                          try {\n                            const date = new Date(order.updated_at);\n                            return isNaN(date.getTime()) ? 'Just now' : date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});\n                          } catch (error) {\n                            return 'Just now';\n                          }\n                        })()}\n                      </span>\n                    )}\n                  </p>\n                </div>\n                <div className={`flex items-center space-x-1 px-2 py-1 rounded-full border text-xs ${getStatusColor(order.status)}`}>\n                  {getStatusIcon(order.status)}\n                  <span className=\"font-medium\">{order.status}</span>\n                  {/* Live update indicator */}\n                  <div className=\"w-1.5 h-1.5 bg-green-400 rounded-full animate-pulse\"></div>\n                </div>\n              </div>\n\n              {/* Customer Info - Compact */}\n              <div className=\"mb-3\">\n                <p className=\"text-sm text-sangeet-neutral-100 font-medium\">{order.customer_name}</p>\n                {order.special_instructions && (\n                  <div className=\"mt-1 p-2 bg-yellow-500/10 border border-yellow-500/20 rounded text-xs\">\n                    <p className=\"text-yellow-400\">\n                      <strong>Note:</strong> {order.special_instructions}\n                    </p>\n                  </div>\n                )}\n              </div>\n\n              {/* Order Items - Compact */}\n              <div className=\"mb-3 flex-grow\">\n                <h4 className=\"text-xs font-medium text-sangeet-neutral-400 mb-1\">Items:</h4>\n                \n                {/* Merge Alert */}\n                {hasMultipleSessions(order.items) && (\n                  <div className=\"mb-2 p-1 bg-orange-900/20 border border-orange-500/30 rounded text-xs\">\n                    <span className=\"text-orange-400\">⚠️ Merged Order</span>\n                  </div>\n                )}\n                \n                <div className=\"space-y-1\">\n                  {order.items && sortItemsByNewness(order.items).map((item) => (\n                    <div key={item.id} className=\"flex justify-between text-xs py-0.5\">\n                      <div className=\"flex items-center space-x-1\">\n                        <span className=\"text-sangeet-neutral-300\">\n                          {item.quantity}x {item.menu_item_name || item.name}\n                        </span>\n                        {isNewItem(item.created_at) && (\n                          <span className=\"bg-green-500 text-white px-1 py-0.5 rounded text-xs font-medium animate-pulse\">\n                            NEW\n                          </span>\n                        )}\n                      </div>\n                      {item.special_instructions && (\n                        <span className=\"text-orange-400\">\n                          ({item.special_instructions})\n                        </span>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Status Update Buttons - Smart Flow Logic */}\n              {order.status !== 'completed' && order.status !== 'cancelled' && (\n                <div className=\"flex flex-wrap gap-1 mt-auto pt-3\">\n                  {kitchenMode ? (\n                    // Kitchen Mode: Smart touch-friendly buttons with logical flow\n                    <>\n                      {/* Forward Progress Buttons */}\n                      {order.status === 'pending' && (\n                        <button\n                          onClick={() => handleStatusUpdate(order.id, 'preparing')}\n                          className=\"flex-1 px-4 py-2 bg-orange-600 text-white rounded-md font-medium hover:bg-orange-700 transition-colors text-sm\"\n                        >\n                          🍳 Start Cooking\n                        </button>\n                      )}\n                      {order.status === 'preparing' && (\n                        <button\n                          onClick={() => handleStatusUpdate(order.id, 'ready')}\n                          className=\"flex-1 px-4 py-2 bg-green-600 text-white rounded-md font-medium hover:bg-green-700 transition-colors text-sm shadow-lg\"\n                        >\n                          🍽️ Ready to Serve\n                        </button>\n                      )}\n                      {order.status === 'ready' && (\n                        <button\n                          onClick={() => handleStatusUpdate(order.id, 'completed')}\n                          className=\"flex-1 px-4 py-2 bg-gray-600 text-white rounded-md font-medium hover:bg-gray-700 transition-colors text-sm\"\n                        >\n                          ✅ Mark Served\n                        </button>\n                      )}\n                      \n                      {/* Cancel Button - Available at any stage */}\n                      <button\n                        onClick={() => handleStatusUpdate(order.id, 'cancelled')}\n                        className=\"px-3 py-2 bg-red-600 text-white rounded-md font-medium hover:bg-red-700 transition-colors text-sm\"\n                      >\n                        ❌ Cancel\n                      </button>\n                    </>\n                  ) : (\n                    // Admin Mode: Smart dropdown with logical restrictions\n                    <div className=\"w-full space-y-2\">\n                      <CustomDropdown\n                        value={order.status}\n                        onChange={(newStatus) => handleStatusUpdate(order.id, newStatus)}\n                        options={statusOptions}\n                        className=\"w-full\"\n                      />\n                      \n                      {/* Cancel Button for Admin */}\n                      <button\n                        onClick={() => handleStatusUpdate(order.id, 'cancelled')}\n                        className=\"w-full px-2 py-1 bg-red-600 text-white rounded-md font-medium hover:bg-red-700 transition-colors text-sm\"\n                      >\n                        ❌ Cancel Order\n                      </button>\n                    </div>\n                  )}\n                </div>\n              )}\n              \n              {/* Completed/Cancelled Order Actions */}\n              {(order.status === 'completed' || order.status === 'cancelled') && (\n                <div className=\"flex flex-wrap gap-1 mt-auto pt-3\">\n                  <div className=\"w-full text-center\">\n                    <span className={`px-3 py-1 rounded-full text-xs font-medium ${\n                      order.status === 'completed' \n                        ? 'bg-green-500/20 text-green-400 border border-green-500/30' \n                        : 'bg-red-500/20 text-red-400 border border-red-500/30'\n                    }`}>\n                      {order.status === 'completed' ? '✅ Order Completed' : '❌ Order Cancelled'}\n                    </span>\n                  </div>\n                </div>\n              )}\n            </motion.div>\n          ))}\n        </AnimatePresence>\n      </div>\n\n      {filteredOrders.length === 0 && (\n        <div className=\"text-center py-8\">\n          <p className=\"text-sangeet-neutral-500 text-lg\">\n            {activeFilter === 'completed' ? 'No completed orders' : 'No orders found'}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OrderQueue; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}