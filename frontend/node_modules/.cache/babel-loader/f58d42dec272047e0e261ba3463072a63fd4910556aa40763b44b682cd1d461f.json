{"ast":null,"code":"import { isPlainObject } from '../predicate/isPlainObject.mjs';\nfunction flattenObject(object) {\n  let {\n    delimiter = '.'\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return flattenObjectImpl(object, '', delimiter);\n}\nfunction flattenObjectImpl(object) {\n  let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  let delimiter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  const result = {};\n  const keys = Object.keys(object);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = object[key];\n    const prefixedKey = prefix ? \"\".concat(prefix).concat(delimiter).concat(key) : key;\n    if (isPlainObject(value) && Object.keys(value).length > 0) {\n      Object.assign(result, flattenObjectImpl(value, prefixedKey, delimiter));\n      continue;\n    }\n    if (Array.isArray(value)) {\n      Object.assign(result, flattenObjectImpl(value, prefixedKey, delimiter));\n      continue;\n    }\n    result[prefixedKey] = value;\n  }\n  return result;\n}\nexport { flattenObject };","map":{"version":3,"names":["isPlainObject","flattenObject","object","delimiter","arguments","length","undefined","flattenObjectImpl","prefix","result","keys","Object","i","key","value","prefixedKey","concat","assign","Array","isArray"],"sources":["/Users/amanrana/Desktop/sangeet_restaurant_website/node_modules/es-toolkit/dist/object/flattenObject.mjs"],"sourcesContent":["import { isPlainObject } from '../predicate/isPlainObject.mjs';\n\nfunction flattenObject(object, { delimiter = '.' } = {}) {\n    return flattenObjectImpl(object, '', delimiter);\n}\nfunction flattenObjectImpl(object, prefix = '', delimiter = '.') {\n    const result = {};\n    const keys = Object.keys(object);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const value = object[key];\n        const prefixedKey = prefix ? `${prefix}${delimiter}${key}` : key;\n        if (isPlainObject(value) && Object.keys(value).length > 0) {\n            Object.assign(result, flattenObjectImpl(value, prefixedKey, delimiter));\n            continue;\n        }\n        if (Array.isArray(value)) {\n            Object.assign(result, flattenObjectImpl(value, prefixedKey, delimiter));\n            continue;\n        }\n        result[prefixedKey] = value;\n    }\n    return result;\n}\n\nexport { flattenObject };\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,gCAAgC;AAE9D,SAASC,aAAaA,CAACC,MAAM,EAA4B;EAAA,IAA1B;IAAEC,SAAS,GAAG;EAAI,CAAC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACnD,OAAOG,iBAAiB,CAACL,MAAM,EAAE,EAAE,EAAEC,SAAS,CAAC;AACnD;AACA,SAASI,iBAAiBA,CAACL,MAAM,EAAgC;EAAA,IAA9BM,MAAM,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAED,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,GAAG;EAC3D,MAAMK,MAAM,GAAG,CAAC,CAAC;EACjB,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACR,MAAM,CAAC;EAChC,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACL,MAAM,EAAEO,CAAC,EAAE,EAAE;IAClC,MAAMC,GAAG,GAAGH,IAAI,CAACE,CAAC,CAAC;IACnB,MAAME,KAAK,GAAGZ,MAAM,CAACW,GAAG,CAAC;IACzB,MAAME,WAAW,GAAGP,MAAM,MAAAQ,MAAA,CAAMR,MAAM,EAAAQ,MAAA,CAAGb,SAAS,EAAAa,MAAA,CAAGH,GAAG,IAAKA,GAAG;IAChE,IAAIb,aAAa,CAACc,KAAK,CAAC,IAAIH,MAAM,CAACD,IAAI,CAACI,KAAK,CAAC,CAACT,MAAM,GAAG,CAAC,EAAE;MACvDM,MAAM,CAACM,MAAM,CAACR,MAAM,EAAEF,iBAAiB,CAACO,KAAK,EAAEC,WAAW,EAAEZ,SAAS,CAAC,CAAC;MACvE;IACJ;IACA,IAAIe,KAAK,CAACC,OAAO,CAACL,KAAK,CAAC,EAAE;MACtBH,MAAM,CAACM,MAAM,CAACR,MAAM,EAAEF,iBAAiB,CAACO,KAAK,EAAEC,WAAW,EAAEZ,SAAS,CAAC,CAAC;MACvE;IACJ;IACAM,MAAM,CAACM,WAAW,CAAC,GAAGD,KAAK;EAC/B;EACA,OAAOL,MAAM;AACjB;AAEA,SAASR,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}