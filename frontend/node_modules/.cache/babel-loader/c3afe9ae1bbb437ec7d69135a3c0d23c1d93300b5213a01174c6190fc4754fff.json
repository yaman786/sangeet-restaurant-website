{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { combineAppliedNumericalValuesIncludingErrorValues, combineAppliedValues, combineAreasDomain, combineAxisDomain, combineAxisDomainWithNiceTicks, combineCategoricalDomain, combineDisplayedData, combineDomainOfStackGroups, combineDotsDomain, combineDuplicateDomain, combineGraphicalItemsData, combineGraphicalItemsSettings, combineLinesDomain, combineNiceTicks, combineNumericalDomain, combineRealScaleType, combineScaleFunction, combineStackGroups, filterGraphicalNotStackedItems, filterReferenceElements, getDomainDefinition, itemAxisPredicate, mergeDomains, selectAllErrorBarSettings, selectAxisRange, selectHasBar, selectReferenceAreas, selectReferenceDots, selectReferenceLines } from './axisSelectors';\nimport { selectChartLayout } from '../../context/chartLayoutContext';\nimport { isCategoricalAxis } from '../../util/ChartUtils';\nimport { selectChartDataWithIndexes } from './dataSelectors';\nimport { selectChartName, selectStackOffsetType } from './rootPropsSelectors';\nimport { mathSign } from '../../util/DataUtils';\nimport { combineAxisRangeWithReverse } from './combiners/combineAxisRangeWithReverse';\nimport { combineTooltipEventType, selectDefaultTooltipEventType, selectValidateTooltipEventTypes } from './selectTooltipEventType';\nimport { combineActiveLabel } from './combiners/combineActiveLabel';\nimport { selectTooltipSettings } from './selectTooltipSettings';\nimport { combineTooltipInteractionState } from './combiners/combineTooltipInteractionState';\nimport { combineActiveTooltipIndex } from './combiners/combineActiveTooltipIndex';\nimport { combineCoordinateForDefaultIndex } from './combiners/combineCoordinateForDefaultIndex';\nimport { selectChartHeight, selectChartWidth } from './containerSelectors';\nimport { selectChartOffsetInternal } from './selectChartOffsetInternal';\nimport { combineTooltipPayloadConfigurations } from './combiners/combineTooltipPayloadConfigurations';\nimport { selectTooltipPayloadSearcher } from './selectTooltipPayloadSearcher';\nimport { selectTooltipState } from './selectTooltipState';\nimport { combineTooltipPayload } from './combiners/combineTooltipPayload';\nimport { selectTooltipAxisId } from './selectTooltipAxisId';\nimport { selectTooltipAxisType } from './selectTooltipAxisType';\nimport { selectTooltipAxis } from './selectTooltipAxis';\nimport { combineDisplayedStackedData } from './combiners/combineDisplayedStackedData';\nimport { isStacked } from '../types/StackedGraphicalItem';\nexport var selectTooltipAxisRealScaleType = createSelector([selectTooltipAxis, selectChartLayout, selectHasBar, selectChartName, selectTooltipAxisType], combineRealScaleType);\nexport var selectAllUnfilteredGraphicalItems = createSelector([state => state.graphicalItems.cartesianItems, state => state.graphicalItems.polarItems], (cartesianItems, polarItems) => [...cartesianItems, ...polarItems]);\nvar selectTooltipAxisPredicate = createSelector([selectTooltipAxisType, selectTooltipAxisId], itemAxisPredicate);\nexport var selectAllGraphicalItemsSettings = createSelector([selectAllUnfilteredGraphicalItems, selectTooltipAxis, selectTooltipAxisPredicate], combineGraphicalItemsSettings);\nvar selectAllStackedGraphicalItemsSettings = createSelector([selectAllGraphicalItemsSettings], graphicalItems => graphicalItems.filter(isStacked));\nexport var selectTooltipGraphicalItemsData = createSelector([selectAllGraphicalItemsSettings], combineGraphicalItemsData);\n\n/**\n * Data for tooltip always use the data with indexes set by a Brush,\n * and never accept the isPanorama flag:\n * because Tooltip never displays inside the panorama anyway\n * so we don't need to worry what would happen there.\n */\nexport var selectTooltipDisplayedData = createSelector([selectTooltipGraphicalItemsData, selectChartDataWithIndexes], combineDisplayedData);\nvar selectTooltipStackedData = createSelector([selectAllStackedGraphicalItemsSettings, selectChartDataWithIndexes, selectTooltipAxis], combineDisplayedStackedData);\nvar selectAllTooltipAppliedValues = createSelector([selectTooltipDisplayedData, selectTooltipAxis, selectAllGraphicalItemsSettings], combineAppliedValues);\nvar selectTooltipAxisDomainDefinition = createSelector([selectTooltipAxis], getDomainDefinition);\nvar selectAllStackedGraphicalItems = createSelector([selectAllGraphicalItemsSettings], graphicalItems => graphicalItems.filter(isStacked));\nvar selectTooltipStackGroups = createSelector([selectTooltipStackedData, selectAllStackedGraphicalItems, selectStackOffsetType], combineStackGroups);\nvar selectTooltipDomainOfStackGroups = createSelector([selectTooltipStackGroups, selectChartDataWithIndexes, selectTooltipAxisType], combineDomainOfStackGroups);\nvar selectTooltipItemsSettingsExceptStacked = createSelector([selectAllGraphicalItemsSettings], filterGraphicalNotStackedItems);\nvar selectTooltipAllAppliedNumericalValuesIncludingErrorValues = createSelector([selectTooltipDisplayedData, selectTooltipAxis, selectTooltipItemsSettingsExceptStacked, selectAllErrorBarSettings, selectTooltipAxisType], combineAppliedNumericalValuesIncludingErrorValues);\nvar selectReferenceDotsByTooltipAxis = createSelector([selectReferenceDots, selectTooltipAxisType, selectTooltipAxisId], filterReferenceElements);\nvar selectTooltipReferenceDotsDomain = createSelector([selectReferenceDotsByTooltipAxis, selectTooltipAxisType], combineDotsDomain);\nvar selectReferenceAreasByTooltipAxis = createSelector([selectReferenceAreas, selectTooltipAxisType, selectTooltipAxisId], filterReferenceElements);\nvar selectTooltipReferenceAreasDomain = createSelector([selectReferenceAreasByTooltipAxis, selectTooltipAxisType], combineAreasDomain);\nvar selectReferenceLinesByTooltipAxis = createSelector([selectReferenceLines, selectTooltipAxisType, selectTooltipAxisId], filterReferenceElements);\nvar selectTooltipReferenceLinesDomain = createSelector([selectReferenceLinesByTooltipAxis, selectTooltipAxisType], combineLinesDomain);\nvar selectTooltipReferenceElementsDomain = createSelector([selectTooltipReferenceDotsDomain, selectTooltipReferenceLinesDomain, selectTooltipReferenceAreasDomain], mergeDomains);\nvar selectTooltipNumericalDomain = createSelector([selectTooltipAxis, selectTooltipAxisDomainDefinition, selectTooltipDomainOfStackGroups, selectTooltipAllAppliedNumericalValuesIncludingErrorValues, selectTooltipReferenceElementsDomain, selectChartLayout, selectTooltipAxisType], combineNumericalDomain);\nexport var selectTooltipAxisDomain = createSelector([selectTooltipAxis, selectChartLayout, selectTooltipDisplayedData, selectAllTooltipAppliedValues, selectStackOffsetType, selectTooltipAxisType, selectTooltipNumericalDomain], combineAxisDomain);\nvar selectTooltipNiceTicks = createSelector([selectTooltipAxisDomain, selectTooltipAxis, selectTooltipAxisRealScaleType], combineNiceTicks);\nexport var selectTooltipAxisDomainIncludingNiceTicks = createSelector([selectTooltipAxis, selectTooltipAxisDomain, selectTooltipNiceTicks, selectTooltipAxisType], combineAxisDomainWithNiceTicks);\nvar selectTooltipAxisRange = state => {\n  var axisType = selectTooltipAxisType(state);\n  var axisId = selectTooltipAxisId(state);\n  var isPanorama = false; // Tooltip never displays in panorama so this is safe to assume\n  return selectAxisRange(state, axisType, axisId, isPanorama);\n};\nexport var selectTooltipAxisRangeWithReverse = createSelector([selectTooltipAxis, selectTooltipAxisRange], combineAxisRangeWithReverse);\nexport var selectTooltipAxisScale = createSelector([selectTooltipAxis, selectTooltipAxisRealScaleType, selectTooltipAxisDomainIncludingNiceTicks, selectTooltipAxisRangeWithReverse], combineScaleFunction);\nvar selectTooltipDuplicateDomain = createSelector([selectChartLayout, selectAllTooltipAppliedValues, selectTooltipAxis, selectTooltipAxisType], combineDuplicateDomain);\nexport var selectTooltipCategoricalDomain = createSelector([selectChartLayout, selectAllTooltipAppliedValues, selectTooltipAxis, selectTooltipAxisType], combineCategoricalDomain);\nvar combineTicksOfTooltipAxis = (layout, axis, realScaleType, scale, range, duplicateDomain, categoricalDomain, axisType) => {\n  if (!axis) {\n    return undefined;\n  }\n  var {\n    type\n  } = axis;\n  var isCategorical = isCategoricalAxis(layout, axisType);\n  if (!scale) {\n    return undefined;\n  }\n  var offsetForBand = realScaleType === 'scaleBand' && scale.bandwidth ? scale.bandwidth() / 2 : 2;\n  var offset = type === 'category' && scale.bandwidth ? scale.bandwidth() / offsetForBand : 0;\n  offset = axisType === 'angleAxis' && range != null && (range === null || range === void 0 ? void 0 : range.length) >= 2 ? mathSign(range[0] - range[1]) * 2 * offset : offset;\n\n  // When axis is a categorical axis, but the type of axis is number or the scale of axis is not \"auto\"\n  if (isCategorical && categoricalDomain) {\n    return categoricalDomain.map((entry, index) => ({\n      coordinate: scale(entry) + offset,\n      value: entry,\n      index,\n      offset\n    }));\n  }\n\n  // When axis has duplicated text, serial numbers are used to generate scale\n  return scale.domain().map((entry, index) => ({\n    coordinate: scale(entry) + offset,\n    value: duplicateDomain ? duplicateDomain[entry] : entry,\n    index,\n    offset\n  }));\n};\nexport var selectTooltipAxisTicks = createSelector([selectChartLayout, selectTooltipAxis, selectTooltipAxisRealScaleType, selectTooltipAxisScale, selectTooltipAxisRange, selectTooltipDuplicateDomain, selectTooltipCategoricalDomain, selectTooltipAxisType], combineTicksOfTooltipAxis);\nvar selectTooltipEventType = createSelector([selectDefaultTooltipEventType, selectValidateTooltipEventTypes, selectTooltipSettings], (defaultTooltipEventType, validateTooltipEventType, settings) => combineTooltipEventType(settings.shared, defaultTooltipEventType, validateTooltipEventType));\nvar selectTooltipTrigger = state => state.tooltip.settings.trigger;\nvar selectDefaultIndex = state => state.tooltip.settings.defaultIndex;\nvar selectTooltipInteractionState = createSelector([selectTooltipState, selectTooltipEventType, selectTooltipTrigger, selectDefaultIndex], combineTooltipInteractionState);\nexport var selectActiveTooltipIndex = createSelector([selectTooltipInteractionState, selectTooltipDisplayedData], combineActiveTooltipIndex);\nexport var selectActiveLabel = createSelector([selectTooltipAxisTicks, selectActiveTooltipIndex], combineActiveLabel);\nexport var selectActiveTooltipDataKey = createSelector([selectTooltipInteractionState], tooltipInteraction => {\n  if (!tooltipInteraction) {\n    return undefined;\n  }\n  return tooltipInteraction.dataKey;\n});\nvar selectTooltipPayloadConfigurations = createSelector([selectTooltipState, selectTooltipEventType, selectTooltipTrigger, selectDefaultIndex], combineTooltipPayloadConfigurations);\nvar selectTooltipCoordinateForDefaultIndex = createSelector([selectChartWidth, selectChartHeight, selectChartLayout, selectChartOffsetInternal, selectTooltipAxisTicks, selectDefaultIndex, selectTooltipPayloadConfigurations, selectTooltipPayloadSearcher], combineCoordinateForDefaultIndex);\nexport var selectActiveTooltipCoordinate = createSelector([selectTooltipInteractionState, selectTooltipCoordinateForDefaultIndex], (tooltipInteractionState, defaultIndexCoordinate) => {\n  if (tooltipInteractionState !== null && tooltipInteractionState !== void 0 && tooltipInteractionState.coordinate) {\n    return tooltipInteractionState.coordinate;\n  }\n  return defaultIndexCoordinate;\n});\nexport var selectIsTooltipActive = createSelector([selectTooltipInteractionState], tooltipInteractionState => tooltipInteractionState.active);\nexport var selectActiveTooltipPayload = createSelector([selectTooltipPayloadConfigurations, selectActiveTooltipIndex, selectChartDataWithIndexes, selectTooltipAxis, selectActiveLabel, selectTooltipPayloadSearcher, selectTooltipEventType], combineTooltipPayload);\nexport var selectActiveTooltipDataPoints = createSelector([selectActiveTooltipPayload], payload => {\n  if (payload == null) {\n    return undefined;\n  }\n  var dataPoints = payload.map(p => p.payload).filter(p => p != null);\n  return Array.from(new Set(dataPoints));\n});","map":{"version":3,"names":["createSelector","combineAppliedNumericalValuesIncludingErrorValues","combineAppliedValues","combineAreasDomain","combineAxisDomain","combineAxisDomainWithNiceTicks","combineCategoricalDomain","combineDisplayedData","combineDomainOfStackGroups","combineDotsDomain","combineDuplicateDomain","combineGraphicalItemsData","combineGraphicalItemsSettings","combineLinesDomain","combineNiceTicks","combineNumericalDomain","combineRealScaleType","combineScaleFunction","combineStackGroups","filterGraphicalNotStackedItems","filterReferenceElements","getDomainDefinition","itemAxisPredicate","mergeDomains","selectAllErrorBarSettings","selectAxisRange","selectHasBar","selectReferenceAreas","selectReferenceDots","selectReferenceLines","selectChartLayout","isCategoricalAxis","selectChartDataWithIndexes","selectChartName","selectStackOffsetType","mathSign","combineAxisRangeWithReverse","combineTooltipEventType","selectDefaultTooltipEventType","selectValidateTooltipEventTypes","combineActiveLabel","selectTooltipSettings","combineTooltipInteractionState","combineActiveTooltipIndex","combineCoordinateForDefaultIndex","selectChartHeight","selectChartWidth","selectChartOffsetInternal","combineTooltipPayloadConfigurations","selectTooltipPayloadSearcher","selectTooltipState","combineTooltipPayload","selectTooltipAxisId","selectTooltipAxisType","selectTooltipAxis","combineDisplayedStackedData","isStacked","selectTooltipAxisRealScaleType","selectAllUnfilteredGraphicalItems","state","graphicalItems","cartesianItems","polarItems","selectTooltipAxisPredicate","selectAllGraphicalItemsSettings","selectAllStackedGraphicalItemsSettings","filter","selectTooltipGraphicalItemsData","selectTooltipDisplayedData","selectTooltipStackedData","selectAllTooltipAppliedValues","selectTooltipAxisDomainDefinition","selectAllStackedGraphicalItems","selectTooltipStackGroups","selectTooltipDomainOfStackGroups","selectTooltipItemsSettingsExceptStacked","selectTooltipAllAppliedNumericalValuesIncludingErrorValues","selectReferenceDotsByTooltipAxis","selectTooltipReferenceDotsDomain","selectReferenceAreasByTooltipAxis","selectTooltipReferenceAreasDomain","selectReferenceLinesByTooltipAxis","selectTooltipReferenceLinesDomain","selectTooltipReferenceElementsDomain","selectTooltipNumericalDomain","selectTooltipAxisDomain","selectTooltipNiceTicks","selectTooltipAxisDomainIncludingNiceTicks","selectTooltipAxisRange","axisType","axisId","isPanorama","selectTooltipAxisRangeWithReverse","selectTooltipAxisScale","selectTooltipDuplicateDomain","selectTooltipCategoricalDomain","combineTicksOfTooltipAxis","layout","axis","realScaleType","scale","range","duplicateDomain","categoricalDomain","undefined","type","isCategorical","offsetForBand","bandwidth","offset","length","map","entry","index","coordinate","value","domain","selectTooltipAxisTicks","selectTooltipEventType","defaultTooltipEventType","validateTooltipEventType","settings","shared","selectTooltipTrigger","tooltip","trigger","selectDefaultIndex","defaultIndex","selectTooltipInteractionState","selectActiveTooltipIndex","selectActiveLabel","selectActiveTooltipDataKey","tooltipInteraction","dataKey","selectTooltipPayloadConfigurations","selectTooltipCoordinateForDefaultIndex","selectActiveTooltipCoordinate","tooltipInteractionState","defaultIndexCoordinate","selectIsTooltipActive","active","selectActiveTooltipPayload","selectActiveTooltipDataPoints","payload","dataPoints","p","Array","from","Set"],"sources":["/Users/amanrana/Desktop/sangeet_restaurant_fresh/node_modules/recharts/es6/state/selectors/tooltipSelectors.js"],"sourcesContent":["import { createSelector } from 'reselect';\nimport { combineAppliedNumericalValuesIncludingErrorValues, combineAppliedValues, combineAreasDomain, combineAxisDomain, combineAxisDomainWithNiceTicks, combineCategoricalDomain, combineDisplayedData, combineDomainOfStackGroups, combineDotsDomain, combineDuplicateDomain, combineGraphicalItemsData, combineGraphicalItemsSettings, combineLinesDomain, combineNiceTicks, combineNumericalDomain, combineRealScaleType, combineScaleFunction, combineStackGroups, filterGraphicalNotStackedItems, filterReferenceElements, getDomainDefinition, itemAxisPredicate, mergeDomains, selectAllErrorBarSettings, selectAxisRange, selectHasBar, selectReferenceAreas, selectReferenceDots, selectReferenceLines } from './axisSelectors';\nimport { selectChartLayout } from '../../context/chartLayoutContext';\nimport { isCategoricalAxis } from '../../util/ChartUtils';\nimport { selectChartDataWithIndexes } from './dataSelectors';\nimport { selectChartName, selectStackOffsetType } from './rootPropsSelectors';\nimport { mathSign } from '../../util/DataUtils';\nimport { combineAxisRangeWithReverse } from './combiners/combineAxisRangeWithReverse';\nimport { combineTooltipEventType, selectDefaultTooltipEventType, selectValidateTooltipEventTypes } from './selectTooltipEventType';\nimport { combineActiveLabel } from './combiners/combineActiveLabel';\nimport { selectTooltipSettings } from './selectTooltipSettings';\nimport { combineTooltipInteractionState } from './combiners/combineTooltipInteractionState';\nimport { combineActiveTooltipIndex } from './combiners/combineActiveTooltipIndex';\nimport { combineCoordinateForDefaultIndex } from './combiners/combineCoordinateForDefaultIndex';\nimport { selectChartHeight, selectChartWidth } from './containerSelectors';\nimport { selectChartOffsetInternal } from './selectChartOffsetInternal';\nimport { combineTooltipPayloadConfigurations } from './combiners/combineTooltipPayloadConfigurations';\nimport { selectTooltipPayloadSearcher } from './selectTooltipPayloadSearcher';\nimport { selectTooltipState } from './selectTooltipState';\nimport { combineTooltipPayload } from './combiners/combineTooltipPayload';\nimport { selectTooltipAxisId } from './selectTooltipAxisId';\nimport { selectTooltipAxisType } from './selectTooltipAxisType';\nimport { selectTooltipAxis } from './selectTooltipAxis';\nimport { combineDisplayedStackedData } from './combiners/combineDisplayedStackedData';\nimport { isStacked } from '../types/StackedGraphicalItem';\nexport var selectTooltipAxisRealScaleType = createSelector([selectTooltipAxis, selectChartLayout, selectHasBar, selectChartName, selectTooltipAxisType], combineRealScaleType);\nexport var selectAllUnfilteredGraphicalItems = createSelector([state => state.graphicalItems.cartesianItems, state => state.graphicalItems.polarItems], (cartesianItems, polarItems) => [...cartesianItems, ...polarItems]);\nvar selectTooltipAxisPredicate = createSelector([selectTooltipAxisType, selectTooltipAxisId], itemAxisPredicate);\nexport var selectAllGraphicalItemsSettings = createSelector([selectAllUnfilteredGraphicalItems, selectTooltipAxis, selectTooltipAxisPredicate], combineGraphicalItemsSettings);\nvar selectAllStackedGraphicalItemsSettings = createSelector([selectAllGraphicalItemsSettings], graphicalItems => graphicalItems.filter(isStacked));\nexport var selectTooltipGraphicalItemsData = createSelector([selectAllGraphicalItemsSettings], combineGraphicalItemsData);\n\n/**\n * Data for tooltip always use the data with indexes set by a Brush,\n * and never accept the isPanorama flag:\n * because Tooltip never displays inside the panorama anyway\n * so we don't need to worry what would happen there.\n */\nexport var selectTooltipDisplayedData = createSelector([selectTooltipGraphicalItemsData, selectChartDataWithIndexes], combineDisplayedData);\nvar selectTooltipStackedData = createSelector([selectAllStackedGraphicalItemsSettings, selectChartDataWithIndexes, selectTooltipAxis], combineDisplayedStackedData);\nvar selectAllTooltipAppliedValues = createSelector([selectTooltipDisplayedData, selectTooltipAxis, selectAllGraphicalItemsSettings], combineAppliedValues);\nvar selectTooltipAxisDomainDefinition = createSelector([selectTooltipAxis], getDomainDefinition);\nvar selectAllStackedGraphicalItems = createSelector([selectAllGraphicalItemsSettings], graphicalItems => graphicalItems.filter(isStacked));\nvar selectTooltipStackGroups = createSelector([selectTooltipStackedData, selectAllStackedGraphicalItems, selectStackOffsetType], combineStackGroups);\nvar selectTooltipDomainOfStackGroups = createSelector([selectTooltipStackGroups, selectChartDataWithIndexes, selectTooltipAxisType], combineDomainOfStackGroups);\nvar selectTooltipItemsSettingsExceptStacked = createSelector([selectAllGraphicalItemsSettings], filterGraphicalNotStackedItems);\nvar selectTooltipAllAppliedNumericalValuesIncludingErrorValues = createSelector([selectTooltipDisplayedData, selectTooltipAxis, selectTooltipItemsSettingsExceptStacked, selectAllErrorBarSettings, selectTooltipAxisType], combineAppliedNumericalValuesIncludingErrorValues);\nvar selectReferenceDotsByTooltipAxis = createSelector([selectReferenceDots, selectTooltipAxisType, selectTooltipAxisId], filterReferenceElements);\nvar selectTooltipReferenceDotsDomain = createSelector([selectReferenceDotsByTooltipAxis, selectTooltipAxisType], combineDotsDomain);\nvar selectReferenceAreasByTooltipAxis = createSelector([selectReferenceAreas, selectTooltipAxisType, selectTooltipAxisId], filterReferenceElements);\nvar selectTooltipReferenceAreasDomain = createSelector([selectReferenceAreasByTooltipAxis, selectTooltipAxisType], combineAreasDomain);\nvar selectReferenceLinesByTooltipAxis = createSelector([selectReferenceLines, selectTooltipAxisType, selectTooltipAxisId], filterReferenceElements);\nvar selectTooltipReferenceLinesDomain = createSelector([selectReferenceLinesByTooltipAxis, selectTooltipAxisType], combineLinesDomain);\nvar selectTooltipReferenceElementsDomain = createSelector([selectTooltipReferenceDotsDomain, selectTooltipReferenceLinesDomain, selectTooltipReferenceAreasDomain], mergeDomains);\nvar selectTooltipNumericalDomain = createSelector([selectTooltipAxis, selectTooltipAxisDomainDefinition, selectTooltipDomainOfStackGroups, selectTooltipAllAppliedNumericalValuesIncludingErrorValues, selectTooltipReferenceElementsDomain, selectChartLayout, selectTooltipAxisType], combineNumericalDomain);\nexport var selectTooltipAxisDomain = createSelector([selectTooltipAxis, selectChartLayout, selectTooltipDisplayedData, selectAllTooltipAppliedValues, selectStackOffsetType, selectTooltipAxisType, selectTooltipNumericalDomain], combineAxisDomain);\nvar selectTooltipNiceTicks = createSelector([selectTooltipAxisDomain, selectTooltipAxis, selectTooltipAxisRealScaleType], combineNiceTicks);\nexport var selectTooltipAxisDomainIncludingNiceTicks = createSelector([selectTooltipAxis, selectTooltipAxisDomain, selectTooltipNiceTicks, selectTooltipAxisType], combineAxisDomainWithNiceTicks);\nvar selectTooltipAxisRange = state => {\n  var axisType = selectTooltipAxisType(state);\n  var axisId = selectTooltipAxisId(state);\n  var isPanorama = false; // Tooltip never displays in panorama so this is safe to assume\n  return selectAxisRange(state, axisType, axisId, isPanorama);\n};\nexport var selectTooltipAxisRangeWithReverse = createSelector([selectTooltipAxis, selectTooltipAxisRange], combineAxisRangeWithReverse);\nexport var selectTooltipAxisScale = createSelector([selectTooltipAxis, selectTooltipAxisRealScaleType, selectTooltipAxisDomainIncludingNiceTicks, selectTooltipAxisRangeWithReverse], combineScaleFunction);\nvar selectTooltipDuplicateDomain = createSelector([selectChartLayout, selectAllTooltipAppliedValues, selectTooltipAxis, selectTooltipAxisType], combineDuplicateDomain);\nexport var selectTooltipCategoricalDomain = createSelector([selectChartLayout, selectAllTooltipAppliedValues, selectTooltipAxis, selectTooltipAxisType], combineCategoricalDomain);\nvar combineTicksOfTooltipAxis = (layout, axis, realScaleType, scale, range, duplicateDomain, categoricalDomain, axisType) => {\n  if (!axis) {\n    return undefined;\n  }\n  var {\n    type\n  } = axis;\n  var isCategorical = isCategoricalAxis(layout, axisType);\n  if (!scale) {\n    return undefined;\n  }\n  var offsetForBand = realScaleType === 'scaleBand' && scale.bandwidth ? scale.bandwidth() / 2 : 2;\n  var offset = type === 'category' && scale.bandwidth ? scale.bandwidth() / offsetForBand : 0;\n  offset = axisType === 'angleAxis' && range != null && (range === null || range === void 0 ? void 0 : range.length) >= 2 ? mathSign(range[0] - range[1]) * 2 * offset : offset;\n\n  // When axis is a categorical axis, but the type of axis is number or the scale of axis is not \"auto\"\n  if (isCategorical && categoricalDomain) {\n    return categoricalDomain.map((entry, index) => ({\n      coordinate: scale(entry) + offset,\n      value: entry,\n      index,\n      offset\n    }));\n  }\n\n  // When axis has duplicated text, serial numbers are used to generate scale\n  return scale.domain().map((entry, index) => ({\n    coordinate: scale(entry) + offset,\n    value: duplicateDomain ? duplicateDomain[entry] : entry,\n    index,\n    offset\n  }));\n};\nexport var selectTooltipAxisTicks = createSelector([selectChartLayout, selectTooltipAxis, selectTooltipAxisRealScaleType, selectTooltipAxisScale, selectTooltipAxisRange, selectTooltipDuplicateDomain, selectTooltipCategoricalDomain, selectTooltipAxisType], combineTicksOfTooltipAxis);\nvar selectTooltipEventType = createSelector([selectDefaultTooltipEventType, selectValidateTooltipEventTypes, selectTooltipSettings], (defaultTooltipEventType, validateTooltipEventType, settings) => combineTooltipEventType(settings.shared, defaultTooltipEventType, validateTooltipEventType));\nvar selectTooltipTrigger = state => state.tooltip.settings.trigger;\nvar selectDefaultIndex = state => state.tooltip.settings.defaultIndex;\nvar selectTooltipInteractionState = createSelector([selectTooltipState, selectTooltipEventType, selectTooltipTrigger, selectDefaultIndex], combineTooltipInteractionState);\nexport var selectActiveTooltipIndex = createSelector([selectTooltipInteractionState, selectTooltipDisplayedData], combineActiveTooltipIndex);\nexport var selectActiveLabel = createSelector([selectTooltipAxisTicks, selectActiveTooltipIndex], combineActiveLabel);\nexport var selectActiveTooltipDataKey = createSelector([selectTooltipInteractionState], tooltipInteraction => {\n  if (!tooltipInteraction) {\n    return undefined;\n  }\n  return tooltipInteraction.dataKey;\n});\nvar selectTooltipPayloadConfigurations = createSelector([selectTooltipState, selectTooltipEventType, selectTooltipTrigger, selectDefaultIndex], combineTooltipPayloadConfigurations);\nvar selectTooltipCoordinateForDefaultIndex = createSelector([selectChartWidth, selectChartHeight, selectChartLayout, selectChartOffsetInternal, selectTooltipAxisTicks, selectDefaultIndex, selectTooltipPayloadConfigurations, selectTooltipPayloadSearcher], combineCoordinateForDefaultIndex);\nexport var selectActiveTooltipCoordinate = createSelector([selectTooltipInteractionState, selectTooltipCoordinateForDefaultIndex], (tooltipInteractionState, defaultIndexCoordinate) => {\n  if (tooltipInteractionState !== null && tooltipInteractionState !== void 0 && tooltipInteractionState.coordinate) {\n    return tooltipInteractionState.coordinate;\n  }\n  return defaultIndexCoordinate;\n});\nexport var selectIsTooltipActive = createSelector([selectTooltipInteractionState], tooltipInteractionState => tooltipInteractionState.active);\nexport var selectActiveTooltipPayload = createSelector([selectTooltipPayloadConfigurations, selectActiveTooltipIndex, selectChartDataWithIndexes, selectTooltipAxis, selectActiveLabel, selectTooltipPayloadSearcher, selectTooltipEventType], combineTooltipPayload);\nexport var selectActiveTooltipDataPoints = createSelector([selectActiveTooltipPayload], payload => {\n  if (payload == null) {\n    return undefined;\n  }\n  var dataPoints = payload.map(p => p.payload).filter(p => p != null);\n  return Array.from(new Set(dataPoints));\n});"],"mappings":"AAAA,SAASA,cAAc,QAAQ,UAAU;AACzC,SAASC,iDAAiD,EAAEC,oBAAoB,EAAEC,kBAAkB,EAAEC,iBAAiB,EAAEC,8BAA8B,EAAEC,wBAAwB,EAAEC,oBAAoB,EAAEC,0BAA0B,EAAEC,iBAAiB,EAAEC,sBAAsB,EAAEC,yBAAyB,EAAEC,6BAA6B,EAAEC,kBAAkB,EAAEC,gBAAgB,EAAEC,sBAAsB,EAAEC,oBAAoB,EAAEC,oBAAoB,EAAEC,kBAAkB,EAAEC,8BAA8B,EAAEC,uBAAuB,EAAEC,mBAAmB,EAAEC,iBAAiB,EAAEC,YAAY,EAAEC,yBAAyB,EAAEC,eAAe,EAAEC,YAAY,EAAEC,oBAAoB,EAAEC,mBAAmB,EAAEC,oBAAoB,QAAQ,iBAAiB;AACzsB,SAASC,iBAAiB,QAAQ,kCAAkC;AACpE,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,SAASC,0BAA0B,QAAQ,iBAAiB;AAC5D,SAASC,eAAe,EAAEC,qBAAqB,QAAQ,sBAAsB;AAC7E,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,2BAA2B,QAAQ,yCAAyC;AACrF,SAASC,uBAAuB,EAAEC,6BAA6B,EAAEC,+BAA+B,QAAQ,0BAA0B;AAClI,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,SAASC,8BAA8B,QAAQ,4CAA4C;AAC3F,SAASC,yBAAyB,QAAQ,uCAAuC;AACjF,SAASC,gCAAgC,QAAQ,8CAA8C;AAC/F,SAASC,iBAAiB,EAAEC,gBAAgB,QAAQ,sBAAsB;AAC1E,SAASC,yBAAyB,QAAQ,6BAA6B;AACvE,SAASC,mCAAmC,QAAQ,iDAAiD;AACrG,SAASC,4BAA4B,QAAQ,gCAAgC;AAC7E,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,qBAAqB,QAAQ,mCAAmC;AACzE,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,SAASC,2BAA2B,QAAQ,yCAAyC;AACrF,SAASC,SAAS,QAAQ,+BAA+B;AACzD,OAAO,IAAIC,8BAA8B,GAAGzD,cAAc,CAAC,CAACsD,iBAAiB,EAAExB,iBAAiB,EAAEJ,YAAY,EAAEO,eAAe,EAAEoB,qBAAqB,CAAC,EAAErC,oBAAoB,CAAC;AAC9K,OAAO,IAAI0C,iCAAiC,GAAG1D,cAAc,CAAC,CAAC2D,KAAK,IAAIA,KAAK,CAACC,cAAc,CAACC,cAAc,EAAEF,KAAK,IAAIA,KAAK,CAACC,cAAc,CAACE,UAAU,CAAC,EAAE,CAACD,cAAc,EAAEC,UAAU,KAAK,CAAC,GAAGD,cAAc,EAAE,GAAGC,UAAU,CAAC,CAAC;AAC3N,IAAIC,0BAA0B,GAAG/D,cAAc,CAAC,CAACqD,qBAAqB,EAAED,mBAAmB,CAAC,EAAE9B,iBAAiB,CAAC;AAChH,OAAO,IAAI0C,+BAA+B,GAAGhE,cAAc,CAAC,CAAC0D,iCAAiC,EAAEJ,iBAAiB,EAAES,0BAA0B,CAAC,EAAEnD,6BAA6B,CAAC;AAC9K,IAAIqD,sCAAsC,GAAGjE,cAAc,CAAC,CAACgE,+BAA+B,CAAC,EAAEJ,cAAc,IAAIA,cAAc,CAACM,MAAM,CAACV,SAAS,CAAC,CAAC;AAClJ,OAAO,IAAIW,+BAA+B,GAAGnE,cAAc,CAAC,CAACgE,+BAA+B,CAAC,EAAErD,yBAAyB,CAAC;;AAEzH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIyD,0BAA0B,GAAGpE,cAAc,CAAC,CAACmE,+BAA+B,EAAEnC,0BAA0B,CAAC,EAAEzB,oBAAoB,CAAC;AAC3I,IAAI8D,wBAAwB,GAAGrE,cAAc,CAAC,CAACiE,sCAAsC,EAAEjC,0BAA0B,EAAEsB,iBAAiB,CAAC,EAAEC,2BAA2B,CAAC;AACnK,IAAIe,6BAA6B,GAAGtE,cAAc,CAAC,CAACoE,0BAA0B,EAAEd,iBAAiB,EAAEU,+BAA+B,CAAC,EAAE9D,oBAAoB,CAAC;AAC1J,IAAIqE,iCAAiC,GAAGvE,cAAc,CAAC,CAACsD,iBAAiB,CAAC,EAAEjC,mBAAmB,CAAC;AAChG,IAAImD,8BAA8B,GAAGxE,cAAc,CAAC,CAACgE,+BAA+B,CAAC,EAAEJ,cAAc,IAAIA,cAAc,CAACM,MAAM,CAACV,SAAS,CAAC,CAAC;AAC1I,IAAIiB,wBAAwB,GAAGzE,cAAc,CAAC,CAACqE,wBAAwB,EAAEG,8BAA8B,EAAEtC,qBAAqB,CAAC,EAAEhB,kBAAkB,CAAC;AACpJ,IAAIwD,gCAAgC,GAAG1E,cAAc,CAAC,CAACyE,wBAAwB,EAAEzC,0BAA0B,EAAEqB,qBAAqB,CAAC,EAAE7C,0BAA0B,CAAC;AAChK,IAAImE,uCAAuC,GAAG3E,cAAc,CAAC,CAACgE,+BAA+B,CAAC,EAAE7C,8BAA8B,CAAC;AAC/H,IAAIyD,0DAA0D,GAAG5E,cAAc,CAAC,CAACoE,0BAA0B,EAAEd,iBAAiB,EAAEqB,uCAAuC,EAAEnD,yBAAyB,EAAE6B,qBAAqB,CAAC,EAAEpD,iDAAiD,CAAC;AAC9Q,IAAI4E,gCAAgC,GAAG7E,cAAc,CAAC,CAAC4B,mBAAmB,EAAEyB,qBAAqB,EAAED,mBAAmB,CAAC,EAAEhC,uBAAuB,CAAC;AACjJ,IAAI0D,gCAAgC,GAAG9E,cAAc,CAAC,CAAC6E,gCAAgC,EAAExB,qBAAqB,CAAC,EAAE5C,iBAAiB,CAAC;AACnI,IAAIsE,iCAAiC,GAAG/E,cAAc,CAAC,CAAC2B,oBAAoB,EAAE0B,qBAAqB,EAAED,mBAAmB,CAAC,EAAEhC,uBAAuB,CAAC;AACnJ,IAAI4D,iCAAiC,GAAGhF,cAAc,CAAC,CAAC+E,iCAAiC,EAAE1B,qBAAqB,CAAC,EAAElD,kBAAkB,CAAC;AACtI,IAAI8E,iCAAiC,GAAGjF,cAAc,CAAC,CAAC6B,oBAAoB,EAAEwB,qBAAqB,EAAED,mBAAmB,CAAC,EAAEhC,uBAAuB,CAAC;AACnJ,IAAI8D,iCAAiC,GAAGlF,cAAc,CAAC,CAACiF,iCAAiC,EAAE5B,qBAAqB,CAAC,EAAExC,kBAAkB,CAAC;AACtI,IAAIsE,oCAAoC,GAAGnF,cAAc,CAAC,CAAC8E,gCAAgC,EAAEI,iCAAiC,EAAEF,iCAAiC,CAAC,EAAEzD,YAAY,CAAC;AACjL,IAAI6D,4BAA4B,GAAGpF,cAAc,CAAC,CAACsD,iBAAiB,EAAEiB,iCAAiC,EAAEG,gCAAgC,EAAEE,0DAA0D,EAAEO,oCAAoC,EAAErD,iBAAiB,EAAEuB,qBAAqB,CAAC,EAAEtC,sBAAsB,CAAC;AAC/S,OAAO,IAAIsE,uBAAuB,GAAGrF,cAAc,CAAC,CAACsD,iBAAiB,EAAExB,iBAAiB,EAAEsC,0BAA0B,EAAEE,6BAA6B,EAAEpC,qBAAqB,EAAEmB,qBAAqB,EAAE+B,4BAA4B,CAAC,EAAEhF,iBAAiB,CAAC;AACrP,IAAIkF,sBAAsB,GAAGtF,cAAc,CAAC,CAACqF,uBAAuB,EAAE/B,iBAAiB,EAAEG,8BAA8B,CAAC,EAAE3C,gBAAgB,CAAC;AAC3I,OAAO,IAAIyE,yCAAyC,GAAGvF,cAAc,CAAC,CAACsD,iBAAiB,EAAE+B,uBAAuB,EAAEC,sBAAsB,EAAEjC,qBAAqB,CAAC,EAAEhD,8BAA8B,CAAC;AAClM,IAAImF,sBAAsB,GAAG7B,KAAK,IAAI;EACpC,IAAI8B,QAAQ,GAAGpC,qBAAqB,CAACM,KAAK,CAAC;EAC3C,IAAI+B,MAAM,GAAGtC,mBAAmB,CAACO,KAAK,CAAC;EACvC,IAAIgC,UAAU,GAAG,KAAK,CAAC,CAAC;EACxB,OAAOlE,eAAe,CAACkC,KAAK,EAAE8B,QAAQ,EAAEC,MAAM,EAAEC,UAAU,CAAC;AAC7D,CAAC;AACD,OAAO,IAAIC,iCAAiC,GAAG5F,cAAc,CAAC,CAACsD,iBAAiB,EAAEkC,sBAAsB,CAAC,EAAEpD,2BAA2B,CAAC;AACvI,OAAO,IAAIyD,sBAAsB,GAAG7F,cAAc,CAAC,CAACsD,iBAAiB,EAAEG,8BAA8B,EAAE8B,yCAAyC,EAAEK,iCAAiC,CAAC,EAAE3E,oBAAoB,CAAC;AAC3M,IAAI6E,4BAA4B,GAAG9F,cAAc,CAAC,CAAC8B,iBAAiB,EAAEwC,6BAA6B,EAAEhB,iBAAiB,EAAED,qBAAqB,CAAC,EAAE3C,sBAAsB,CAAC;AACvK,OAAO,IAAIqF,8BAA8B,GAAG/F,cAAc,CAAC,CAAC8B,iBAAiB,EAAEwC,6BAA6B,EAAEhB,iBAAiB,EAAED,qBAAqB,CAAC,EAAE/C,wBAAwB,CAAC;AAClL,IAAI0F,yBAAyB,GAAGA,CAACC,MAAM,EAAEC,IAAI,EAAEC,aAAa,EAAEC,KAAK,EAAEC,KAAK,EAAEC,eAAe,EAAEC,iBAAiB,EAAEd,QAAQ,KAAK;EAC3H,IAAI,CAACS,IAAI,EAAE;IACT,OAAOM,SAAS;EAClB;EACA,IAAI;IACFC;EACF,CAAC,GAAGP,IAAI;EACR,IAAIQ,aAAa,GAAG3E,iBAAiB,CAACkE,MAAM,EAAER,QAAQ,CAAC;EACvD,IAAI,CAACW,KAAK,EAAE;IACV,OAAOI,SAAS;EAClB;EACA,IAAIG,aAAa,GAAGR,aAAa,KAAK,WAAW,IAAIC,KAAK,CAACQ,SAAS,GAAGR,KAAK,CAACQ,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;EAChG,IAAIC,MAAM,GAAGJ,IAAI,KAAK,UAAU,IAAIL,KAAK,CAACQ,SAAS,GAAGR,KAAK,CAACQ,SAAS,CAAC,CAAC,GAAGD,aAAa,GAAG,CAAC;EAC3FE,MAAM,GAAGpB,QAAQ,KAAK,WAAW,IAAIY,KAAK,IAAI,IAAI,IAAI,CAACA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAACS,MAAM,KAAK,CAAC,GAAG3E,QAAQ,CAACkE,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGQ,MAAM,GAAGA,MAAM;;EAE7K;EACA,IAAIH,aAAa,IAAIH,iBAAiB,EAAE;IACtC,OAAOA,iBAAiB,CAACQ,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,MAAM;MAC9CC,UAAU,EAAEd,KAAK,CAACY,KAAK,CAAC,GAAGH,MAAM;MACjCM,KAAK,EAAEH,KAAK;MACZC,KAAK;MACLJ;IACF,CAAC,CAAC,CAAC;EACL;;EAEA;EACA,OAAOT,KAAK,CAACgB,MAAM,CAAC,CAAC,CAACL,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,MAAM;IAC3CC,UAAU,EAAEd,KAAK,CAACY,KAAK,CAAC,GAAGH,MAAM;IACjCM,KAAK,EAAEb,eAAe,GAAGA,eAAe,CAACU,KAAK,CAAC,GAAGA,KAAK;IACvDC,KAAK;IACLJ;EACF,CAAC,CAAC,CAAC;AACL,CAAC;AACD,OAAO,IAAIQ,sBAAsB,GAAGrH,cAAc,CAAC,CAAC8B,iBAAiB,EAAEwB,iBAAiB,EAAEG,8BAA8B,EAAEoC,sBAAsB,EAAEL,sBAAsB,EAAEM,4BAA4B,EAAEC,8BAA8B,EAAE1C,qBAAqB,CAAC,EAAE2C,yBAAyB,CAAC;AAC1R,IAAIsB,sBAAsB,GAAGtH,cAAc,CAAC,CAACsC,6BAA6B,EAAEC,+BAA+B,EAAEE,qBAAqB,CAAC,EAAE,CAAC8E,uBAAuB,EAAEC,wBAAwB,EAAEC,QAAQ,KAAKpF,uBAAuB,CAACoF,QAAQ,CAACC,MAAM,EAAEH,uBAAuB,EAAEC,wBAAwB,CAAC,CAAC;AAClS,IAAIG,oBAAoB,GAAGhE,KAAK,IAAIA,KAAK,CAACiE,OAAO,CAACH,QAAQ,CAACI,OAAO;AAClE,IAAIC,kBAAkB,GAAGnE,KAAK,IAAIA,KAAK,CAACiE,OAAO,CAACH,QAAQ,CAACM,YAAY;AACrE,IAAIC,6BAA6B,GAAGhI,cAAc,CAAC,CAACkD,kBAAkB,EAAEoE,sBAAsB,EAAEK,oBAAoB,EAAEG,kBAAkB,CAAC,EAAEpF,8BAA8B,CAAC;AAC1K,OAAO,IAAIuF,wBAAwB,GAAGjI,cAAc,CAAC,CAACgI,6BAA6B,EAAE5D,0BAA0B,CAAC,EAAEzB,yBAAyB,CAAC;AAC5I,OAAO,IAAIuF,iBAAiB,GAAGlI,cAAc,CAAC,CAACqH,sBAAsB,EAAEY,wBAAwB,CAAC,EAAEzF,kBAAkB,CAAC;AACrH,OAAO,IAAI2F,0BAA0B,GAAGnI,cAAc,CAAC,CAACgI,6BAA6B,CAAC,EAAEI,kBAAkB,IAAI;EAC5G,IAAI,CAACA,kBAAkB,EAAE;IACvB,OAAO5B,SAAS;EAClB;EACA,OAAO4B,kBAAkB,CAACC,OAAO;AACnC,CAAC,CAAC;AACF,IAAIC,kCAAkC,GAAGtI,cAAc,CAAC,CAACkD,kBAAkB,EAAEoE,sBAAsB,EAAEK,oBAAoB,EAAEG,kBAAkB,CAAC,EAAE9E,mCAAmC,CAAC;AACpL,IAAIuF,sCAAsC,GAAGvI,cAAc,CAAC,CAAC8C,gBAAgB,EAAED,iBAAiB,EAAEf,iBAAiB,EAAEiB,yBAAyB,EAAEsE,sBAAsB,EAAES,kBAAkB,EAAEQ,kCAAkC,EAAErF,4BAA4B,CAAC,EAAEL,gCAAgC,CAAC;AAChS,OAAO,IAAI4F,6BAA6B,GAAGxI,cAAc,CAAC,CAACgI,6BAA6B,EAAEO,sCAAsC,CAAC,EAAE,CAACE,uBAAuB,EAAEC,sBAAsB,KAAK;EACtL,IAAID,uBAAuB,KAAK,IAAI,IAAIA,uBAAuB,KAAK,KAAK,CAAC,IAAIA,uBAAuB,CAACvB,UAAU,EAAE;IAChH,OAAOuB,uBAAuB,CAACvB,UAAU;EAC3C;EACA,OAAOwB,sBAAsB;AAC/B,CAAC,CAAC;AACF,OAAO,IAAIC,qBAAqB,GAAG3I,cAAc,CAAC,CAACgI,6BAA6B,CAAC,EAAES,uBAAuB,IAAIA,uBAAuB,CAACG,MAAM,CAAC;AAC7I,OAAO,IAAIC,0BAA0B,GAAG7I,cAAc,CAAC,CAACsI,kCAAkC,EAAEL,wBAAwB,EAAEjG,0BAA0B,EAAEsB,iBAAiB,EAAE4E,iBAAiB,EAAEjF,4BAA4B,EAAEqE,sBAAsB,CAAC,EAAEnE,qBAAqB,CAAC;AACrQ,OAAO,IAAI2F,6BAA6B,GAAG9I,cAAc,CAAC,CAAC6I,0BAA0B,CAAC,EAAEE,OAAO,IAAI;EACjG,IAAIA,OAAO,IAAI,IAAI,EAAE;IACnB,OAAOvC,SAAS;EAClB;EACA,IAAIwC,UAAU,GAAGD,OAAO,CAAChC,GAAG,CAACkC,CAAC,IAAIA,CAAC,CAACF,OAAO,CAAC,CAAC7E,MAAM,CAAC+E,CAAC,IAAIA,CAAC,IAAI,IAAI,CAAC;EACnE,OAAOC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACJ,UAAU,CAAC,CAAC;AACxC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}