{"ast":null,"code":"import _objectSpread from\"/Users/amanrana/Desktop/sangeet_restaurant_website/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback,useMemo}from'react';import{useLocation,useNavigate}from'react-router-dom';import{AnimatePresence}from'framer-motion';import{getOrdersByTable,createOrder,fetchMenuItems,fetchMenuCategories,getOrderById}from'../services/api';import socketService from'../services/socketService';import toast from'react-hot-toast';import MenuView from'../components/MenuView';import CartView from'../components/CartView';import TrackingView from'../components/TrackingView';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const UnifiedDashboardPage=()=>{const location=useLocation();const navigate=useNavigate();const searchParams=new URLSearchParams(location.search);// URL parameters\nconst initialOrderId=searchParams.get('orderId');const tableNumber=searchParams.get('table');const initialOrderNumber=searchParams.get('orderNumber');const initialTotalAmount=searchParams.get('totalAmount');// Customer name will be fetched from order data instead of URL\nconst[customerName,setCustomerName]=useState(null);// State management\nconst[currentView,setCurrentView]=useState(()=>{// Determine initial view based on URL parameters and session data\nif(initialOrderId||initialOrderNumber){return'tracking';}// Check if there's cart data in localStorage\ntry{const savedCart=localStorage.getItem(\"cart_\".concat(tableNumber));if(savedCart){const parsedCart=JSON.parse(savedCart);if(parsedCart&&parsedCart.length>0){return'cart';}}}catch(error){console.error('Error checking saved cart:',error);}return'menu';});// tracking, menu, cart\nconst[orderId,setOrderId]=useState(initialOrderId);const[orderNumber,setOrderNumber]=useState(initialOrderNumber);const[totalAmount,setTotalAmount]=useState(initialTotalAmount);const[orderItems,setOrderItems]=useState([]);// Current order items\nconst[cart,setCart]=useState([]);const[orders,setOrders]=useState([]);const[menuItems,setMenuItems]=useState([]);const[categories,setCategories]=useState([]);const[loading,setLoading]=useState(false);const[selectedCategory,setSelectedCategory]=useState('all');const[searchTerm,setSearchTerm]=useState('');const[manualMenuNavigation,setManualMenuNavigation]=useState(false);const[forceMenuView,setForceMenuView]=useState(false);// Order status configuration\nconst orderStatuses=useMemo(()=>({'pending':{label:'Order Received',description:'Your order has been received and is being processed',icon:'📋',color:'text-blue-400',bgColor:'bg-blue-400/10',borderColor:'border-blue-400/30'},'preparing':{label:'Preparing',description:'Our kitchen is preparing your delicious meal',icon:'👨‍🍳',color:'text-yellow-400',bgColor:'bg-yellow-400/10',borderColor:'border-yellow-400/30'},'ready':{label:'Ready for Pickup',description:'Your order is ready! Please collect from the counter',icon:'✅',color:'text-green-400',bgColor:'bg-green-400/10',borderColor:'border-green-400/30'},'completed':{label:'Completed',description:'Thank you for dining with us!',icon:'🎉',color:'text-purple-400',bgColor:'bg-purple-400/10',borderColor:'border-purple-400/30'},'cancelled':{label:'Order Cancelled',description:'Your order has been cancelled by the restaurant',icon:'❌',color:'text-red-400',bgColor:'bg-red-400/10',borderColor:'border-red-400/30'}}),[]);// Constants\nconst CANCELLED_ORDER_TIMEOUT=2*60*1000;// 2 minutes\n// Check if any order is cancelled (real-time)\nconst hasCancelledOrder=useMemo(()=>{return orders.some(order=>order.status==='cancelled');},[orders]);// Check for cancelled order timeout on page load\nconst checkCancelledOrderTimeout=useCallback(()=>{try{const cancelledOrderData=localStorage.getItem(\"cancelledOrder_\".concat(tableNumber));if(cancelledOrderData){const cancelledOrder=JSON.parse(cancelledOrderData);const timeSinceCancellation=Date.now()-cancelledOrder.timestamp;if(timeSinceCancellation>CANCELLED_ORDER_TIMEOUT){// Clear cancelled order data after timeout\nlocalStorage.removeItem(\"cancelledOrder_\".concat(tableNumber));localStorage.removeItem(\"cart_\".concat(tableNumber));localStorage.removeItem(\"orderId_\".concat(tableNumber));localStorage.removeItem(\"orderNumber_\".concat(tableNumber));localStorage.removeItem(\"customerName_\".concat(tableNumber));localStorage.removeItem(\"session_timestamp_\".concat(tableNumber));// Reset state\nsetCart([]);setOrderId(null);setOrderNumber(null);setCustomerName(null);setOrderItems([]);setCurrentView('menu');toast.success('Fresh start! Ready for new order 🍽️',{duration:4000,icon:'🔄'});return'fresh_start';}}}catch(error){console.error('Error checking cancelled order timeout:',error);}return'normal_flow';},[tableNumber]);// Load all dashboard data\nconst loadDashboardData=useCallback(async()=>{try{setLoading(true);// Check for cancelled order timeout first\nconst timeoutResult=checkCancelledOrderTimeout();if(timeoutResult==='fresh_start'){// Fresh start - no need to load old data\nsetLoading(false);return;}// Check for session timeout (4 hours)\nconst checkSessionTimeout=()=>{try{const sessionTimestamp=localStorage.getItem(\"session_timestamp_\".concat(tableNumber));if(sessionTimestamp){const sessionTime=new Date(sessionTimestamp).getTime();const currentTime=new Date().getTime();const hoursDiff=(currentTime-sessionTime)/(1000*60*60);if(hoursDiff>4){// Session expired, clear all data\nlocalStorage.removeItem(\"cart_\".concat(tableNumber));localStorage.removeItem(\"customer_\".concat(tableNumber));localStorage.removeItem(\"instructions_\".concat(tableNumber));localStorage.removeItem(\"session_timestamp_\".concat(tableNumber));console.log('⏰ Session expired, cleared old data');return false;}}return true;}catch(error){console.error('Error checking session timeout:',error);return true;}};// Restore session data from localStorage if available\nconst restoreSessionData=()=>{try{const savedCart=localStorage.getItem(\"cart_\".concat(tableNumber));const savedCustomer=localStorage.getItem(\"customer_\".concat(tableNumber));const savedInstructions=localStorage.getItem(\"instructions_\".concat(tableNumber));if(savedCart){const parsedCart=JSON.parse(savedCart);setCart(parsedCart);}if(savedCustomer){const parsedCustomer=JSON.parse(savedCustomer);// Update URL with customer name if not already present\nif(!customerName&&parsedCustomer.name){const newUrl=new URL(window.location);newUrl.searchParams.set('customerName',parsedCustomer.name);navigate(newUrl.pathname+newUrl.search,{replace:true});}}if(savedInstructions){// Instructions restored silently\n}return true;}catch(error){console.error('❌ Error restoring session data:',error);return false;}};// Check session timeout first\nconst sessionValid=checkSessionTimeout();// Restore session data only if session is valid\nconst sessionRestored=sessionValid?restoreSessionData():false;// Load orders for this table\nconst tableOrders=await getOrdersByTable(tableNumber);// Show welcome back message if session was restored\nif(sessionRestored){const savedCart=localStorage.getItem(\"cart_\".concat(tableNumber));const savedCustomer=localStorage.getItem(\"customer_\".concat(tableNumber));if(savedCart||savedCustomer){// Check if there are active orders to show appropriate message\nif(uniqueOrders.length>0){toast.success('Welcome back! Your active order is being tracked. 🍽️',{duration:4000,icon:'📱'});}else{toast.success('Welcome back! Your session has been restored. 🍽️',{duration:4000,icon:'🔄'});}}}const activeOrders=tableOrders.filter(order=>order.status!=='completed'&&order.status!=='cancelled');// Remove duplicates based on order ID\nconst uniqueOrders=activeOrders.reduce((acc,order)=>{const existingOrder=acc.find(o=>o.id===order.id);if(existingOrder){return acc;}return[...acc,order];},[]);setOrders(uniqueOrders);// Smart view selection: If there are active orders, prioritize tracking view\nif(uniqueOrders.length>0&&currentView==='menu'){setCurrentView('tracking');// Set the first active order as the current order\nconst firstOrder=uniqueOrders[0];setOrderId(firstOrder.id);setOrderNumber(firstOrder.order_number);setTotalAmount(firstOrder.total_amount);// Extract customer name from order data\nif(firstOrder.customer_name){setCustomerName(firstOrder.customer_name);}// Load order items for the first order\ntry{const orderDetails=await getOrderById(firstOrder.id);if(orderDetails&&orderDetails.items){setOrderItems(orderDetails.items);}}catch(error){console.error('Error loading order items:',error);}}else if(orderId){// If we have an orderId, load the specific order items\ntry{const orderDetails=await getOrderById(orderId);if(orderDetails&&orderDetails.items){setOrderItems(orderDetails.items);}// Extract customer name from order details\nif(orderDetails&&orderDetails.customer_name){setCustomerName(orderDetails.customer_name);}}catch(error){console.error('Error loading order items:',error);}}// Load menu items and categories\nconst[menuData,categoriesData]=await Promise.all([fetchMenuItems(),fetchMenuCategories()]);setMenuItems(menuData||[]);setCategories(categoriesData||[]);}catch(error){console.error('Error loading dashboard data:',error);toast.error('Failed to load dashboard data');}finally{setLoading(false);}},[tableNumber,orderId]);// Setup real-time updates\nconst setupRealTimeUpdates=useCallback(()=>{socketService.connect();socketService.joinTable(tableNumber);// Listen for order status updates\nsocketService.onOrderStatusUpdate(updateData=>{setOrders(prevOrders=>{const updatedOrders=prevOrders.map(order=>{// Convert both to strings for comparison to handle type mismatches\nif(order.id.toString()===updateData.orderId.toString()){return _objectSpread(_objectSpread({},order),{},{status:updateData.status,updated_at:updateData.timestamp});}return order;});// Check if the updated order is now completed\nif(updateData.status==='completed'){// Check if there are any other active orders\nconst hasActiveOrders=updatedOrders.some(order=>order.status!=='completed'&&order.status!=='cancelled');if(!hasActiveOrders){// Clear all customer data\nlocalStorage.removeItem(\"cart_\".concat(tableNumber));localStorage.removeItem(\"orderId_\".concat(tableNumber));localStorage.removeItem(\"orderNumber_\".concat(tableNumber));localStorage.removeItem(\"customerName_\".concat(tableNumber));localStorage.removeItem(\"session_timestamp_\".concat(tableNumber));// Clear state\nsetCart([]);setOrderId(null);setOrderNumber(null);setCustomerName(null);setOrderItems([]);setCurrentView('menu');// Show completion message\ntoast.success('🎉 All orders completed! Thank you for dining with us!',{duration:6000});// Redirect to home page\nsetTimeout(()=>{window.location.href='/';},2000);}}// Check if the updated order is now cancelled\nif(updateData.status==='cancelled'){// Store cancelled order timestamp for timeout management\nconst cancelledOrderData={orderId:updateData.orderId,timestamp:Date.now(),tableNumber:tableNumber};localStorage.setItem(\"cancelledOrder_\".concat(tableNumber),JSON.stringify(cancelledOrderData));// Keep the order in tracking view to show cancelled status\n// Don't clear state or redirect immediately\n// Show cancellation message\ntoast.error('Order cancelled. You can wait for fresh start or use the button below.',{duration:6000,icon:'❌'});// The 5-minute timeout will handle the fresh start automatically\n// Customer can see cancelled status and choose to wait or reset manually\n}return updatedOrders;});// Show notification\nconst statusConfig=orderStatuses[updateData.status];if(statusConfig){toast.success(\"Order \".concat(statusConfig.label.toLowerCase(),\"!\"),{duration:4000,icon:statusConfig.icon});// Play notification sound\ntry{socketService.playNotificationSound('notification');}catch(error){}// Show browser notification if available\nif('Notification'in window&&Notification.permission==='granted'){new Notification(\"Order \".concat(statusConfig.label),{body:\"Your order status has been updated to: \".concat(statusConfig.label),icon:'/logo192.png'});}}});// Listen for new orders\nsocketService.onNewOrder(orderData=>{if(orderData.table_number===tableNumber){setOrders(prevOrders=>{// Check if order already exists to prevent duplication\nconst orderExists=prevOrders.some(order=>order.id===orderData.id);if(orderExists){return prevOrders;}return[...prevOrders,orderData];});toast.success('New order placed!',{duration:3000});}});// Listen for order completion\nsocketService.onOrderCompleted(data=>{setOrders(prevOrders=>{const updatedOrders=prevOrders.filter(order=>order.id!==data.orderId);// If no more active orders, clear customer data and redirect\nif(updatedOrders.length===0){// Clear all customer data\nlocalStorage.removeItem(\"cart_\".concat(tableNumber));localStorage.removeItem(\"orderId_\".concat(tableNumber));localStorage.removeItem(\"orderNumber_\".concat(tableNumber));localStorage.removeItem(\"customerName_\".concat(tableNumber));localStorage.removeItem(\"session_timestamp_\".concat(tableNumber));// Clear state\nsetCart([]);setOrderId(null);setOrderNumber(null);setCustomerName(null);setOrderItems([]);setCurrentView('menu');// Show completion message\ntoast.success('🎉 All orders completed! Thank you for dining with us!',{duration:6000});// Redirect to home page\nsetTimeout(()=>{window.location.href='/';},2000);}else{// Show completion message for this specific order\ntoast.success(\"\\uD83C\\uDF89 Order #\".concat(data.orderId,\" completed!\"),{duration:4000});}return updatedOrders;});socketService.playNotificationSound('completion');});},[tableNumber,orderStatuses]);// Load order items when orderId changes\nuseEffect(()=>{if(orderId){const loadOrderItems=async()=>{try{const orderDetails=await getOrderById(orderId);if(orderDetails&&orderDetails.items){setOrderItems(orderDetails.items);}}catch(error){console.error('Error loading order items:',error);}};loadOrderItems();// Join customer room for this specific order\nsocketService.joinCustomer(orderId);}},[orderId]);// Update session timestamp\nconst updateSessionTimestamp=()=>{try{localStorage.setItem(\"session_timestamp_\".concat(tableNumber),new Date().toISOString());}catch(error){console.error('Error updating session timestamp:',error);}};// Cart functions\nconst addToCart=item=>{setCart(prevCart=>{const existingItem=prevCart.find(cartItem=>cartItem.id===item.id);if(existingItem){return prevCart.map(cartItem=>cartItem.id===item.id?_objectSpread(_objectSpread({},cartItem),{},{quantity:cartItem.quantity+1}):cartItem);}else{return[...prevCart,_objectSpread(_objectSpread({},item),{},{quantity:1})];}});updateSessionTimestamp();toast.success(\"\".concat(item.name,\" added to cart!\"));};const removeFromCart=itemId=>{setCart(prevCart=>prevCart.filter(item=>item.id!==itemId));updateSessionTimestamp();};const updateQuantity=(itemId,quantity)=>{if(quantity<=0){removeFromCart(itemId);}else{setCart(prevCart=>prevCart.map(item=>item.id===itemId?_objectSpread(_objectSpread({},item),{},{quantity}):item));updateSessionTimestamp();}};const getCartTotal=()=>{return cart.reduce((total,item)=>total+item.price*item.quantity,0);};// Place order function\nconst handlePlaceOrder=async()=>{if(cart.length===0){toast.error('Your cart is empty');return;}try{setLoading(true);const orderData={table_id:tableNumber,customer_name:customerName,items:cart.map(item=>({menu_item_id:item.id,quantity:item.quantity,special_requests:item.specialRequests||''}))};const response=await createOrder(orderData);const newOrder=response.order;const isMerged=response.merged;// Save cart items before clearing cart\nconst currentCartItems=[...cart];// Create a copy of current cart\n// Update state\nsetOrderId(newOrder.id);setOrderNumber(newOrder.order_number);setTotalAmount(newOrder.total_amount);setOrderItems(currentCartItems);// Save cart items as order items\nsetOrders(prevOrders=>{if(isMerged){// If merged, update the existing order instead of adding new one\nreturn prevOrders.map(order=>order.id===newOrder.id?newOrder:order);}else{// If new order, add it to the list\nconst orderExists=prevOrders.some(order=>order.id===newOrder.id);if(orderExists){return prevOrders;}return[...prevOrders,newOrder];}});setCart([]);// Clear cart after saving items\n// Always go directly to tracking page after placing order\nsetCurrentView('tracking');// Show appropriate message based on merge status\nif(isMerged){toast.success('Items added to your existing order! 🍽️',{duration:4000,icon:'➕'});}else{toast.success('Order placed successfully! 🎉',{duration:4000,icon:'✅'});}// Show QR return tip after a short delay\nsetTimeout(()=>{toast.success('📱 You can close this page and scan QR code later!',{duration:5000,icon:'💡'});},2000);}catch(error){console.error('Error placing order:',error);toast.error('Failed to place order. Please try again.');}finally{setLoading(false);}};// Helper functions\nconst formatTime=dateString=>{return new Date(dateString).toLocaleTimeString('en-US',{hour:'numeric',minute:'2-digit',hour12:true});};const formatDate=dateString=>{return new Date(dateString).toLocaleDateString('en-US',{weekday:'long',year:'numeric',month:'long',day:'numeric'});};const getStatusStep=status=>{const statusOrder=['pending','preparing','ready','completed'];if(status==='cancelled'){return 0;// Special case for cancelled orders\n}return statusOrder.indexOf(status)+1;};// Initialize dashboard\n// eslint-disable-next-line react-hooks/exhaustive-deps\nuseEffect(()=>{if(tableNumber){// Clear existing orders when table changes to prevent mixing orders from different tables\nsetOrders([]);// Don't clear orderItems here - they should persist for the current order\nloadDashboardData();setupRealTimeUpdates();}},[tableNumber]);// Remove loadDashboardData and setupRealTimeUpdates from dependencies\n// Effect to handle view changes when orders are loaded\nuseEffect(()=>{// If forceMenuView is true, don't switch to tracking\nif(forceMenuView){return;}// If we have active orders and we're on menu view, switch to tracking\n// BUT only if it's not a manual navigation to menu\nif(orders.length>0&&currentView==='menu'&&!manualMenuNavigation){setCurrentView('tracking');// Set the first active order as current\nconst firstOrder=orders[0];setOrderId(firstOrder.id);setOrderNumber(firstOrder.order_number);setTotalAmount(firstOrder.total_amount);}// Reset flags after a delay\nif(currentView==='menu'&&manualMenuNavigation){setTimeout(()=>{setManualMenuNavigation(false);setForceMenuView(false);},10000);// 10 seconds to allow user interaction\n}},[orders,currentView,manualMenuNavigation,forceMenuView]);// Effect to ensure menu items are loaded\nuseEffect(()=>{if(menuItems.length===0&&!loading){// Load menu items if they're not already loaded\nconst loadMenuData=async()=>{try{const[menuData,categoriesData]=await Promise.all([fetchMenuItems(),fetchMenuCategories()]);setMenuItems(menuData||[]);setCategories(categoriesData||[]);}catch(error){console.error('Error loading menu data:',error);toast.error('Failed to load menu items');}};loadMenuData();}},[menuItems.length,loading]);// Socket connection and order deletion listener\nuseEffect(()=>{// Connect to socket service\nsocketService.connect();// Join table room for order notifications\nif(tableNumber){socketService.joinTable(tableNumber);}// Join customer room for specific order notifications\nif(orderId){socketService.joinCustomer(orderId);}// Listen for order deletion events\nconst handleOrderDeleted=data=>{// Check if this deletion affects our table and specific order\nif(data.tableNumber&&tableNumber&&data.tableNumber.toString()===tableNumber.toString()&&data.orderId&&orderId&&data.orderId.toString()===orderId.toString()){// Clear all customer data and state\nsetCart([]);setOrderId(null);setOrderNumber(null);setTotalAmount(null);setOrderItems([]);// Clear localStorage data\ntry{localStorage.removeItem(\"cart_\".concat(tableNumber));localStorage.removeItem(\"customer_\".concat(tableNumber));localStorage.removeItem(\"instructions_\".concat(tableNumber));}catch(error){console.error('❌ Error clearing localStorage:',error);}// Remove the deleted order from the orders list\nsetOrders(prevOrders=>{const filteredOrders=prevOrders.filter(order=>order.id!==data.orderId);return filteredOrders;});// Auto-redirect to main website for complete fresh start\ntoast.success('Order has been cancelled. Please scan QR code again for fresh start! 🍽️');// Redirect to main website after a short delay\nsetTimeout(()=>{window.location.href='/';},2000);}};// Listen for order status updates\nconst handleStatusUpdate=updateData=>{// Check if this status update affects our table and specific order\nif(updateData.tableNumber&&tableNumber&&updateData.tableNumber.toString()===tableNumber.toString()&&updateData.orderId&&orderId&&updateData.orderId.toString()===orderId.toString()){// Update the order status in our local state\nsetOrders(prevOrders=>{const updatedOrders=prevOrders.map(order=>{var _order$id,_updateData$orderId;const isSameOrder=(order===null||order===void 0?void 0:(_order$id=order.id)===null||_order$id===void 0?void 0:_order$id.toString())===(updateData===null||updateData===void 0?void 0:(_updateData$orderId=updateData.orderId)===null||_updateData$orderId===void 0?void 0:_updateData$orderId.toString());return isSameOrder?_objectSpread(_objectSpread({},order),{},{status:updateData.status,updated_at:updateData.timestamp}):order;});return updatedOrders;});// If status is changed to 'completed', clear customer data and redirect\nif(updateData.status==='completed'){// Clear all customer data and state\nsetCart([]);setOrderId(null);setOrderNumber(null);setTotalAmount(null);setOrderItems([]);// Clear localStorage data\ntry{localStorage.removeItem(\"cart_\".concat(tableNumber));localStorage.removeItem(\"customer_\".concat(tableNumber));localStorage.removeItem(\"instructions_\".concat(tableNumber));}catch(error){console.error('❌ Error clearing localStorage:',error);}// Show success message and redirect to main website\ntoast.success('Order completed! Thank you for dining with us. Please scan QR code again for fresh start! 🍽️');// Redirect to main website after a short delay\nsetTimeout(()=>{window.location.href='/';},3000);}}};socketService.onOrderDeleted(handleOrderDeleted);socketService.onOrderStatusUpdate(handleStatusUpdate);// Cleanup function\nreturn()=>{socketService.removeListener('order-deleted');socketService.removeListener('order-status-update');};},[tableNumber,loadDashboardData]);return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gradient-to-br from-sangeet-neutral-950 via-sangeet-neutral-900 to-sangeet-neutral-950\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-gradient-to-r from-sangeet-neutral-900/80 to-sangeet-neutral-800/80 backdrop-blur-xl border-b border-sangeet-neutral-700/50 fixed top-0 left-0 right-0 z-50\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-6xl mx-auto px-4 py-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-10 h-10 bg-sangeet-400 rounded-lg flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-xl\",children:\"\\uD83C\\uDF7D\\uFE0F\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl font-bold text-sangeet-400\",children:\"Sangeet Restaurant\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sangeet-neutral-400 text-sm\",children:[\"Table \",tableNumber,\" \\u2022 \",customerName,orderId&&\" \\u2022 Order #\".concat(orderNumber||orderId)]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[!hasCancelledOrder&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:e=>{e.preventDefault();e.stopPropagation();// Force menu view and prevent auto-switching\nsetForceMenuView(true);setManualMenuNavigation(true);setCurrentView('menu');// Show immediate feedback\ntoast.success('Switching to menu...',{duration:1000});// Load menu data if needed\nif(menuItems.length===0){toast.loading('Loading menu items...',{duration:2000});Promise.all([fetchMenuItems(),fetchMenuCategories()]).then(_ref=>{let[menuData,categoriesData]=_ref;setMenuItems(menuData||[]);setCategories(categoriesData||[]);toast.success('Menu ready!',{duration:2000});}).catch(error=>{console.error('Error loading menu:',error);toast.error('Failed to load menu');});}},disabled:loading,className:\"px-4 py-2 font-semibold rounded-lg transition-colors duration-200 \".concat(loading?'bg-sangeet-neutral-600 text-sangeet-neutral-400 cursor-not-allowed':'bg-sangeet-400 text-sangeet-neutral-950 hover:bg-sangeet-500'),children:loading?'Loading...':'Continue Ordering'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:e=>{e.preventDefault();e.stopPropagation();setCurrentView('tracking');},className:\"px-4 py-2 bg-sangeet-neutral-700 text-sangeet-400 font-semibold rounded-lg hover:bg-sangeet-neutral-600 transition-colors duration-200\",children:\"Track Orders\"}),currentView==='menu'&&cart.length>0&&/*#__PURE__*/_jsxs(\"button\",{type:\"button\",onClick:e=>{e.preventDefault();e.stopPropagation();setCurrentView('cart');},className:\"px-4 py-2 bg-green-600 text-white font-semibold rounded-lg hover:bg-green-700 transition-colors duration-200 flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDED2\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Cart (\",cart.length,\" items - $\",getCartTotal().toFixed(2),\")\"]})]})]})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-900/20 border-b border-blue-500/30\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-6xl mx-auto px-4 py-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center space-x-2 text-blue-300 text-sm\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-lg\",children:\"\\uD83D\\uDCF1\"}),/*#__PURE__*/_jsx(\"span\",{children:\"QR Code Return: Scan anytime to track orders\"})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"max-w-6xl mx-auto px-4 pt-36 sm:pt-6\",children:/*#__PURE__*/_jsxs(AnimatePresence,{mode:\"wait\",children:[currentView==='menu'&&/*#__PURE__*/_jsx(_Fragment,{children:menuItems.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-12\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-6xl mb-4\",children:\"\\uD83C\\uDF7D\\uFE0F\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold text-sangeet-400 mb-2\",children:\"Loading Menu...\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sangeet-neutral-400\",children:\"Please wait while we load the menu items\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{toast.loading('Reloading menu...');Promise.all([fetchMenuItems(),fetchMenuCategories()]).then(_ref2=>{let[menuData,categoriesData]=_ref2;setMenuItems(menuData||[]);setCategories(categoriesData||[]);toast.success('Menu reloaded!');});},className:\"mt-4 px-4 py-2 bg-sangeet-400 text-sangeet-neutral-950 rounded-lg hover:bg-sangeet-500 transition-colors\",children:\"Reload Menu\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"h-screen flex flex-col\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-shrink-0 bg-sangeet-neutral-950/98 backdrop-blur-md border-b-2 border-sangeet-400/30 shadow-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 pb-2\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-base sm:text-lg font-semibold text-sangeet-400 mb-2 sm:mb-3 flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mr-2 text-sm sm:text-base\",children:\"\\uD83D\\uDCCB\"}),\"Menu Categories\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-1 sm:gap-2 overflow-x-auto pb-2 sm:pb-0 scrollbar-hide\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedCategory('all'),className:\"px-3 py-2 sm:px-4 sm:py-2 rounded-full text-xs sm:text-sm font-medium transition-all whitespace-nowrap flex-shrink-0 \".concat(selectedCategory==='all'?'bg-sangeet-400 text-sangeet-neutral-950 shadow-lg':'bg-sangeet-neutral-800 text-sangeet-neutral-400 hover:bg-sangeet-neutral-700'),children:\"All Items\"}),categories.map(category=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedCategory(category.name||category),className:\"px-3 py-2 sm:px-4 sm:py-2 rounded-full text-xs sm:text-sm font-medium transition-all whitespace-nowrap flex-shrink-0 \".concat(selectedCategory===(category.name||category)?'bg-sangeet-400 text-sangeet-neutral-950 shadow-lg':'bg-sangeet-neutral-800 text-sangeet-neutral-400 hover:bg-sangeet-neutral-700'),children:category.name||category},category.id||category.name))]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"px-4 pb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex gap-2 items-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"relative flex-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-sangeet-neutral-400 text-sm sm:text-base\",children:\"\\uD83D\\uDD0D\"})}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search dishes, ingredients...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),className:\"w-full pl-10 pr-10 sm:pr-4 py-2.5 sm:py-3 bg-sangeet-neutral-800 border border-sangeet-neutral-700 rounded-lg text-sangeet-neutral-200 placeholder-sangeet-neutral-400 focus:outline-none focus:ring-2 focus:ring-sangeet-400 focus:border-transparent transition-all text-sm sm:text-base\"}),searchTerm&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSearchTerm(''),className:\"absolute inset-y-0 right-0 pr-3 flex items-center text-sangeet-neutral-400 hover:text-sangeet-neutral-200 transition-colors\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-lg\",children:\"\\u2715\"})})]})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto\",children:(()=>{const filteredItems=menuItems.filter(item=>{// Category filter\nif(selectedCategory!=='all'){const itemCategory=item.category_name||item.category;const selectedCat=typeof selectedCategory==='object'?selectedCategory.name:selectedCategory;if(itemCategory!==selectedCat)return false;}// Search filter\nif(searchTerm.trim()){const searchLower=searchTerm.toLowerCase();const matchesName=item.name.toLowerCase().includes(searchLower);const matchesDescription=item.description.toLowerCase().includes(searchLower);const matchesCategory=(item.category_name||item.category||'').toLowerCase().includes(searchLower);return matchesName||matchesDescription||matchesCategory;}return true;});if(filteredItems.length===0){return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8 sm:py-12\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-4xl sm:text-6xl mb-3 sm:mb-4\",children:\"\\uD83D\\uDD0D\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg sm:text-xl font-semibold text-sangeet-400 mb-2\",children:\"No items found\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sangeet-neutral-400 mb-4 text-sm sm:text-base px-4\",children:searchTerm.trim()?\"No items match \\\"\".concat(searchTerm,\"\\\". Try adjusting your search or category filter.\"):'No items available in this category.'}),(searchTerm.trim()||selectedCategory!=='all')&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setSearchTerm('');setSelectedCategory('all');},className:\"px-4 py-2 bg-sangeet-400 text-sangeet-neutral-950 rounded-lg hover:bg-sangeet-500 transition-colors text-sm sm:text-base\",children:\"Clear Filters\"})]});}return/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 sm:gap-4 lg:gap-6 mb-6\",children:filteredItems.map(item=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-sangeet-neutral-900 to-sangeet-neutral-800 rounded-xl overflow-hidden border border-sangeet-neutral-700 hover:border-sangeet-neutral-600 transition-all flex flex-col h-full shadow-lg hover:shadow-xl\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-40 sm:h-48 lg:h-52 overflow-hidden\",children:/*#__PURE__*/_jsx(\"img\",{src:item.image_url,alt:item.name,className:\"w-full h-full object-cover\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-3 sm:p-4 lg:p-5 flex flex-col flex-grow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start mb-2\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm sm:text-base lg:text-lg font-semibold text-sangeet-400 flex-1 mr-2 leading-tight\",children:item.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sangeet-400 font-bold text-base sm:text-lg whitespace-nowrap\",children:[\"$\",item.price]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs sm:text-sm text-sangeet-neutral-400 mb-2 sm:mb-3 line-clamp-2 min-h-[2rem] sm:min-h-[2.5rem] leading-relaxed\",children:item.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-1 mb-3 sm:mb-4 min-h-[1.25rem] sm:min-h-[1.5rem]\",children:[item.is_vegetarian&&/*#__PURE__*/_jsx(\"span\",{className:\"px-1.5 sm:px-2 py-0.5 sm:py-1 bg-green-600 text-white text-xs rounded-full\",children:\"\\uD83C\\uDF31 Veg\"}),item.is_spicy&&/*#__PURE__*/_jsx(\"span\",{className:\"px-1.5 sm:px-2 py-0.5 sm:py-1 bg-red-600 text-white text-xs rounded-full\",children:\"\\uD83D\\uDD25 Spicy\"}),item.is_popular&&/*#__PURE__*/_jsx(\"span\",{className:\"px-1.5 sm:px-2 py-0.5 sm:py-1 bg-yellow-600 text-white text-xs rounded-full\",children:\"\\u2B50 Popular\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-auto\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>addToCart(item),className:\"w-full bg-sangeet-400 text-sangeet-neutral-950 py-2 sm:py-2.5 lg:py-3 rounded-lg font-semibold hover:bg-sangeet-300 transition-colors shadow-lg hover:shadow-xl text-xs sm:text-sm lg:text-base\",children:\"Add to Cart\"})})]})]},item.id))});})()})]})}),currentView==='cart'&&/*#__PURE__*/_jsx(CartView,{cart:cart,onUpdateQuantity:updateQuantity,onRemoveFromCart:removeFromCart,onPlaceOrder:handlePlaceOrder,onContinueOrdering:()=>setCurrentView('menu'),getCartTotal:getCartTotal,loading:loading},\"cart\"),currentView==='tracking'&&/*#__PURE__*/_jsx(TrackingView,{orders:orders,orderStatuses:orderStatuses,getStatusStep:getStatusStep,formatTime:formatTime,formatDate:formatDate,customerName:customerName,tableNumber:tableNumber},\"tracking\")]})})]});};export default UnifiedDashboardPage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useLocation","useNavigate","AnimatePresence","getOrdersByTable","createOrder","fetchMenuItems","fetchMenuCategories","getOrderById","socketService","toast","MenuView","CartView","TrackingView","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","UnifiedDashboardPage","location","navigate","searchParams","URLSearchParams","search","initialOrderId","get","tableNumber","initialOrderNumber","initialTotalAmount","customerName","setCustomerName","currentView","setCurrentView","savedCart","localStorage","getItem","concat","parsedCart","JSON","parse","length","error","console","orderId","setOrderId","orderNumber","setOrderNumber","totalAmount","setTotalAmount","orderItems","setOrderItems","cart","setCart","orders","setOrders","menuItems","setMenuItems","categories","setCategories","loading","setLoading","selectedCategory","setSelectedCategory","searchTerm","setSearchTerm","manualMenuNavigation","setManualMenuNavigation","forceMenuView","setForceMenuView","orderStatuses","label","description","icon","color","bgColor","borderColor","CANCELLED_ORDER_TIMEOUT","hasCancelledOrder","some","order","status","checkCancelledOrderTimeout","cancelledOrderData","cancelledOrder","timeSinceCancellation","Date","now","timestamp","removeItem","success","duration","loadDashboardData","timeoutResult","checkSessionTimeout","sessionTimestamp","sessionTime","getTime","currentTime","hoursDiff","log","restoreSessionData","savedCustomer","savedInstructions","parsedCustomer","name","newUrl","URL","window","set","pathname","replace","sessionValid","sessionRestored","tableOrders","uniqueOrders","activeOrders","filter","reduce","acc","existingOrder","find","o","id","firstOrder","order_number","total_amount","customer_name","orderDetails","items","menuData","categoriesData","Promise","all","setupRealTimeUpdates","connect","joinTable","onOrderStatusUpdate","updateData","prevOrders","updatedOrders","map","toString","_objectSpread","updated_at","hasActiveOrders","setTimeout","href","setItem","stringify","statusConfig","toLowerCase","playNotificationSound","Notification","permission","body","onNewOrder","orderData","table_number","orderExists","onOrderCompleted","data","loadOrderItems","joinCustomer","updateSessionTimestamp","toISOString","addToCart","item","prevCart","existingItem","cartItem","quantity","removeFromCart","itemId","updateQuantity","getCartTotal","total","price","handlePlaceOrder","table_id","menu_item_id","special_requests","specialRequests","response","newOrder","isMerged","merged","currentCartItems","formatTime","dateString","toLocaleTimeString","hour","minute","hour12","formatDate","toLocaleDateString","weekday","year","month","day","getStatusStep","statusOrder","indexOf","loadMenuData","handleOrderDeleted","filteredOrders","handleStatusUpdate","_order$id","_updateData$orderId","isSameOrder","onOrderDeleted","removeListener","className","children","type","onClick","e","preventDefault","stopPropagation","then","_ref","catch","disabled","toFixed","mode","_ref2","category","placeholder","value","onChange","target","filteredItems","itemCategory","category_name","selectedCat","trim","searchLower","matchesName","includes","matchesDescription","matchesCategory","src","image_url","alt","is_vegetarian","is_spicy","is_popular","onUpdateQuantity","onRemoveFromCart","onPlaceOrder","onContinueOrdering"],"sources":["/Users/amanrana/Desktop/sangeet_restaurant_website/frontend/src/pages/UnifiedDashboardPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { AnimatePresence } from 'framer-motion';\nimport { getOrdersByTable, createOrder, fetchMenuItems, fetchMenuCategories, getOrderById } from '../services/api';\nimport socketService from '../services/socketService';\nimport toast from 'react-hot-toast';\n\nimport MenuView from '../components/MenuView';\nimport CartView from '../components/CartView';\nimport TrackingView from '../components/TrackingView';\n\nconst UnifiedDashboardPage = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const searchParams = new URLSearchParams(location.search);\n  \n  // URL parameters\n  const initialOrderId = searchParams.get('orderId');\n  const tableNumber = searchParams.get('table');\n  const initialOrderNumber = searchParams.get('orderNumber');\n  const initialTotalAmount = searchParams.get('totalAmount');\n  \n  // Customer name will be fetched from order data instead of URL\n  const [customerName, setCustomerName] = useState(null);\n\n  // State management\n  const [currentView, setCurrentView] = useState(() => {\n    // Determine initial view based on URL parameters and session data\n    if (initialOrderId || initialOrderNumber) {\n      return 'tracking';\n    }\n    \n    // Check if there's cart data in localStorage\n    try {\n      const savedCart = localStorage.getItem(`cart_${tableNumber}`);\n      if (savedCart) {\n        const parsedCart = JSON.parse(savedCart);\n        if (parsedCart && parsedCart.length > 0) {\n          return 'cart';\n        }\n      }\n    } catch (error) {\n      console.error('Error checking saved cart:', error);\n    }\n    \n    return 'menu';\n  }); // tracking, menu, cart\n  const [orderId, setOrderId] = useState(initialOrderId);\n  const [orderNumber, setOrderNumber] = useState(initialOrderNumber);\n  const [totalAmount, setTotalAmount] = useState(initialTotalAmount);\n  const [orderItems, setOrderItems] = useState([]); // Current order items\n  const [cart, setCart] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [menuItems, setMenuItems] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [manualMenuNavigation, setManualMenuNavigation] = useState(false);\n  const [forceMenuView, setForceMenuView] = useState(false);\n\n  // Order status configuration\n  const orderStatuses = useMemo(() => ({\n    'pending': {\n      label: 'Order Received',\n      description: 'Your order has been received and is being processed',\n      icon: '📋',\n      color: 'text-blue-400',\n      bgColor: 'bg-blue-400/10',\n      borderColor: 'border-blue-400/30'\n    },\n    'preparing': {\n      label: 'Preparing',\n      description: 'Our kitchen is preparing your delicious meal',\n      icon: '👨‍🍳',\n      color: 'text-yellow-400',\n      bgColor: 'bg-yellow-400/10',\n      borderColor: 'border-yellow-400/30'\n    },\n    'ready': {\n      label: 'Ready for Pickup',\n      description: 'Your order is ready! Please collect from the counter',\n      icon: '✅',\n      color: 'text-green-400',\n      bgColor: 'bg-green-400/10',\n      borderColor: 'border-green-400/30'\n    },\n    'completed': {\n      label: 'Completed',\n      description: 'Thank you for dining with us!',\n      icon: '🎉',\n      color: 'text-purple-400',\n      bgColor: 'bg-purple-400/10',\n      borderColor: 'border-purple-400/30'\n    },\n    'cancelled': {\n      label: 'Order Cancelled',\n      description: 'Your order has been cancelled by the restaurant',\n      icon: '❌',\n      color: 'text-red-400',\n      bgColor: 'bg-red-400/10',\n      borderColor: 'border-red-400/30'\n    }\n  }), []);\n\n\n\n  // Constants\n  const CANCELLED_ORDER_TIMEOUT = 2 * 60 * 1000; // 2 minutes\n\n  // Check if any order is cancelled (real-time)\n  const hasCancelledOrder = useMemo(() => {\n    return orders.some(order => order.status === 'cancelled');\n  }, [orders]);\n\n      // Check for cancelled order timeout on page load\n    const checkCancelledOrderTimeout = useCallback(() => {\n    \n    try {\n      const cancelledOrderData = localStorage.getItem(`cancelledOrder_${tableNumber}`);\n      if (cancelledOrderData) {\n        const cancelledOrder = JSON.parse(cancelledOrderData);\n        const timeSinceCancellation = Date.now() - cancelledOrder.timestamp;\n        \n        if (timeSinceCancellation > CANCELLED_ORDER_TIMEOUT) {\n          // Clear cancelled order data after timeout\n          localStorage.removeItem(`cancelledOrder_${tableNumber}`);\n          localStorage.removeItem(`cart_${tableNumber}`);\n          localStorage.removeItem(`orderId_${tableNumber}`);\n          localStorage.removeItem(`orderNumber_${tableNumber}`);\n          localStorage.removeItem(`customerName_${tableNumber}`);\n          localStorage.removeItem(`session_timestamp_${tableNumber}`);\n          \n          // Reset state\n          setCart([]);\n          setOrderId(null);\n          setOrderNumber(null);\n          setCustomerName(null);\n          setOrderItems([]);\n\n          setCurrentView('menu');\n          \n          toast.success('Fresh start! Ready for new order 🍽️', {\n            duration: 4000,\n            icon: '🔄'\n          });\n          \n          return 'fresh_start';\n        }\n      }\n    } catch (error) {\n      console.error('Error checking cancelled order timeout:', error);\n    }\n    return 'normal_flow';\n  }, [tableNumber]);\n\n  // Load all dashboard data\n  const loadDashboardData = useCallback(async () => {\n    try {\n      setLoading(true);\n      \n      // Check for cancelled order timeout first\n      const timeoutResult = checkCancelledOrderTimeout();\n      if (timeoutResult === 'fresh_start') {\n        // Fresh start - no need to load old data\n        setLoading(false);\n        return;\n      }\n      \n      // Check for session timeout (4 hours)\n      const checkSessionTimeout = () => {\n        try {\n          const sessionTimestamp = localStorage.getItem(`session_timestamp_${tableNumber}`);\n          if (sessionTimestamp) {\n            const sessionTime = new Date(sessionTimestamp).getTime();\n            const currentTime = new Date().getTime();\n            const hoursDiff = (currentTime - sessionTime) / (1000 * 60 * 60);\n            \n            if (hoursDiff > 4) {\n              // Session expired, clear all data\n              localStorage.removeItem(`cart_${tableNumber}`);\n              localStorage.removeItem(`customer_${tableNumber}`);\n              localStorage.removeItem(`instructions_${tableNumber}`);\n              localStorage.removeItem(`session_timestamp_${tableNumber}`);\n              console.log('⏰ Session expired, cleared old data');\n              return false;\n            }\n          }\n          return true;\n        } catch (error) {\n          console.error('Error checking session timeout:', error);\n          return true;\n        }\n      };\n      \n      // Restore session data from localStorage if available\n      const restoreSessionData = () => {\n        try {\n          const savedCart = localStorage.getItem(`cart_${tableNumber}`);\n          const savedCustomer = localStorage.getItem(`customer_${tableNumber}`);\n          const savedInstructions = localStorage.getItem(`instructions_${tableNumber}`);\n          \n          if (savedCart) {\n            const parsedCart = JSON.parse(savedCart);\n            setCart(parsedCart);\n          }\n          \n          if (savedCustomer) {\n            const parsedCustomer = JSON.parse(savedCustomer);\n            // Update URL with customer name if not already present\n            if (!customerName && parsedCustomer.name) {\n              const newUrl = new URL(window.location);\n              newUrl.searchParams.set('customerName', parsedCustomer.name);\n              navigate(newUrl.pathname + newUrl.search, { replace: true });\n            }\n          }\n          \n          if (savedInstructions) {\n            // Instructions restored silently\n          }\n          \n          return true;\n        } catch (error) {\n          console.error('❌ Error restoring session data:', error);\n          return false;\n        }\n      };\n      \n      // Check session timeout first\n      const sessionValid = checkSessionTimeout();\n      \n      // Restore session data only if session is valid\n      const sessionRestored = sessionValid ? restoreSessionData() : false;\n      \n      // Load orders for this table\n      const tableOrders = await getOrdersByTable(tableNumber);\n      \n      // Show welcome back message if session was restored\n      if (sessionRestored) {\n        const savedCart = localStorage.getItem(`cart_${tableNumber}`);\n        const savedCustomer = localStorage.getItem(`customer_${tableNumber}`);\n        \n        if (savedCart || savedCustomer) {\n          // Check if there are active orders to show appropriate message\n          if (uniqueOrders.length > 0) {\n            toast.success('Welcome back! Your active order is being tracked. 🍽️', {\n              duration: 4000,\n              icon: '📱'\n            });\n          } else {\n            toast.success('Welcome back! Your session has been restored. 🍽️', {\n              duration: 4000,\n              icon: '🔄'\n            });\n          }\n        }\n      }\n      \n      const activeOrders = tableOrders.filter(order => \n        order.status !== 'completed' && order.status !== 'cancelled'\n      );\n      \n\n      \n      // Remove duplicates based on order ID\n      const uniqueOrders = activeOrders.reduce((acc, order) => {\n        const existingOrder = acc.find(o => o.id === order.id);\n        if (existingOrder) {\n          return acc;\n        }\n        return [...acc, order];\n      }, []);\n      setOrders(uniqueOrders);\n\n      // Smart view selection: If there are active orders, prioritize tracking view\n      if (uniqueOrders.length > 0 && currentView === 'menu') {\n        setCurrentView('tracking');\n        \n        // Set the first active order as the current order\n        const firstOrder = uniqueOrders[0];\n        setOrderId(firstOrder.id);\n        setOrderNumber(firstOrder.order_number);\n        setTotalAmount(firstOrder.total_amount);\n        \n        // Extract customer name from order data\n        if (firstOrder.customer_name) {\n          setCustomerName(firstOrder.customer_name);\n        }\n        \n        // Load order items for the first order\n        try {\n          const orderDetails = await getOrderById(firstOrder.id);\n          if (orderDetails && orderDetails.items) {\n            setOrderItems(orderDetails.items);\n          }\n        } catch (error) {\n          console.error('Error loading order items:', error);\n        }\n      } else if (orderId) {\n      // If we have an orderId, load the specific order items\n        try {\n          const orderDetails = await getOrderById(orderId);\n          if (orderDetails && orderDetails.items) {\n            setOrderItems(orderDetails.items);\n          }\n          \n          // Extract customer name from order details\n          if (orderDetails && orderDetails.customer_name) {\n            setCustomerName(orderDetails.customer_name);\n          }\n        } catch (error) {\n          console.error('Error loading order items:', error);\n        }\n      }\n\n      // Load menu items and categories\n      const [menuData, categoriesData] = await Promise.all([\n        fetchMenuItems(),\n        fetchMenuCategories()\n      ]);\n      \n      setMenuItems(menuData || []);\n      setCategories(categoriesData || []);\n      \n    } catch (error) {\n      console.error('Error loading dashboard data:', error);\n      toast.error('Failed to load dashboard data');\n    } finally {\n      setLoading(false);\n    }\n  }, [tableNumber, orderId]);\n\n  // Setup real-time updates\n  const setupRealTimeUpdates = useCallback(() => {\n    socketService.connect();\n    socketService.joinTable(tableNumber);\n\n    // Listen for order status updates\n    socketService.onOrderStatusUpdate((updateData) => {\n      setOrders(prevOrders => {\n        const updatedOrders = prevOrders.map(order => {\n          // Convert both to strings for comparison to handle type mismatches\n          if (order.id.toString() === updateData.orderId.toString()) {\n            return { ...order, status: updateData.status, updated_at: updateData.timestamp };\n          }\n          return order;\n        });\n        \n        // Check if the updated order is now completed\n        if (updateData.status === 'completed') {\n          // Check if there are any other active orders\n          const hasActiveOrders = updatedOrders.some(order => \n            order.status !== 'completed' && order.status !== 'cancelled'\n          );\n          \n          if (!hasActiveOrders) {\n            \n            \n            // Clear all customer data\n            localStorage.removeItem(`cart_${tableNumber}`);\n            localStorage.removeItem(`orderId_${tableNumber}`);\n            localStorage.removeItem(`orderNumber_${tableNumber}`);\n            localStorage.removeItem(`customerName_${tableNumber}`);\n            localStorage.removeItem(`session_timestamp_${tableNumber}`);\n            \n            // Clear state\n            setCart([]);\n            setOrderId(null);\n            setOrderNumber(null);\n            setCustomerName(null);\n            setOrderItems([]);\n            setCurrentView('menu');\n            \n            // Show completion message\n            toast.success('🎉 All orders completed! Thank you for dining with us!', {\n              duration: 6000\n            });\n            \n            // Redirect to home page\n            setTimeout(() => {\n              window.location.href = '/';\n            }, 2000);\n          }\n        }\n        \n        // Check if the updated order is now cancelled\n        if (updateData.status === 'cancelled') {\n          // Store cancelled order timestamp for timeout management\n          const cancelledOrderData = {\n            orderId: updateData.orderId,\n            timestamp: Date.now(),\n            tableNumber: tableNumber\n          };\n          localStorage.setItem(`cancelledOrder_${tableNumber}`, JSON.stringify(cancelledOrderData));\n          \n\n          \n          // Keep the order in tracking view to show cancelled status\n          // Don't clear state or redirect immediately\n          \n          // Show cancellation message\n          toast.error('Order cancelled. You can wait for fresh start or use the button below.', {\n            duration: 6000,\n            icon: '❌'\n          });\n          \n          // The 5-minute timeout will handle the fresh start automatically\n          // Customer can see cancelled status and choose to wait or reset manually\n        }\n        \n        return updatedOrders;\n      });\n\n      // Show notification\n      const statusConfig = orderStatuses[updateData.status];\n      if (statusConfig) {\n        toast.success(`Order ${statusConfig.label.toLowerCase()}!`, {\n          duration: 4000,\n          icon: statusConfig.icon\n        });\n        \n        // Play notification sound\n        try {\n        socketService.playNotificationSound('notification');\n        } catch (error) {\n  \n        }\n        \n        // Show browser notification if available\n        if ('Notification' in window && Notification.permission === 'granted') {\n          new Notification(`Order ${statusConfig.label}`, {\n            body: `Your order status has been updated to: ${statusConfig.label}`,\n            icon: '/logo192.png'\n          });\n        }\n      }\n    });\n\n    // Listen for new orders\n    socketService.onNewOrder((orderData) => {\n      if (orderData.table_number === tableNumber) {\n        setOrders(prevOrders => {\n          // Check if order already exists to prevent duplication\n          const orderExists = prevOrders.some(order => order.id === orderData.id);\n          if (orderExists) {\n            return prevOrders;\n          }\n          return [...prevOrders, orderData];\n        });\n        toast.success('New order placed!', { duration: 3000 });\n      }\n    });\n\n    // Listen for order completion\n    socketService.onOrderCompleted((data) => {\n      setOrders(prevOrders => {\n        const updatedOrders = prevOrders.filter(order => order.id !== data.orderId);\n        \n        // If no more active orders, clear customer data and redirect\n        if (updatedOrders.length === 0) {\n          \n          // Clear all customer data\n          localStorage.removeItem(`cart_${tableNumber}`);\n          localStorage.removeItem(`orderId_${tableNumber}`);\n          localStorage.removeItem(`orderNumber_${tableNumber}`);\n          localStorage.removeItem(`customerName_${tableNumber}`);\n          localStorage.removeItem(`session_timestamp_${tableNumber}`);\n          \n          // Clear state\n          setCart([]);\n          setOrderId(null);\n          setOrderNumber(null);\n          setCustomerName(null);\n          setOrderItems([]);\n          setCurrentView('menu');\n          \n          // Show completion message\n          toast.success('🎉 All orders completed! Thank you for dining with us!', {\n        duration: 6000\n          });\n          \n          // Redirect to home page\n          setTimeout(() => {\n            window.location.href = '/';\n          }, 2000);\n        } else {\n          // Show completion message for this specific order\n          toast.success(`🎉 Order #${data.orderId} completed!`, {\n            duration: 4000\n          });\n        }\n        \n        return updatedOrders;\n      });\n      \n      socketService.playNotificationSound('completion');\n    });\n  }, [tableNumber, orderStatuses]);\n\n  // Load order items when orderId changes\n  useEffect(() => {\n    if (orderId) {\n      const loadOrderItems = async () => {\n        try {\n          const orderDetails = await getOrderById(orderId);\n          if (orderDetails && orderDetails.items) {\n            setOrderItems(orderDetails.items);\n          }\n        } catch (error) {\n          console.error('Error loading order items:', error);\n        }\n      };\n      loadOrderItems();\n      \n      // Join customer room for this specific order\n      socketService.joinCustomer(orderId);\n    }\n  }, [orderId]);\n\n  // Update session timestamp\n  const updateSessionTimestamp = () => {\n    try {\n      localStorage.setItem(`session_timestamp_${tableNumber}`, new Date().toISOString());\n    } catch (error) {\n      console.error('Error updating session timestamp:', error);\n    }\n  };\n\n  // Cart functions\n  const addToCart = (item) => {\n    setCart(prevCart => {\n      const existingItem = prevCart.find(cartItem => cartItem.id === item.id);\n      if (existingItem) {\n        return prevCart.map(cartItem =>\n          cartItem.id === item.id\n            ? { ...cartItem, quantity: cartItem.quantity + 1 }\n            : cartItem\n        );\n      } else {\n        return [...prevCart, { ...item, quantity: 1 }];\n      }\n    });\n    updateSessionTimestamp();\n    toast.success(`${item.name} added to cart!`);\n  };\n\n  const removeFromCart = (itemId) => {\n    setCart(prevCart => prevCart.filter(item => item.id !== itemId));\n    updateSessionTimestamp();\n  };\n\n  const updateQuantity = (itemId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(itemId);\n    } else {\n      setCart(prevCart =>\n        prevCart.map(item =>\n          item.id === itemId ? { ...item, quantity } : item\n        )\n      );\n      updateSessionTimestamp();\n    }\n  };\n\n  const getCartTotal = () => {\n    return cart.reduce((total, item) => total + (item.price * item.quantity), 0);\n  };\n\n\n\n\n\n  // Place order function\n  const handlePlaceOrder = async () => {\n    \n    if (cart.length === 0) {\n      toast.error('Your cart is empty');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      \n      const orderData = {\n        table_id: tableNumber,\n        customer_name: customerName,\n        items: cart.map(item => ({\n          menu_item_id: item.id,\n          quantity: item.quantity,\n          special_requests: item.specialRequests || ''\n        }))\n      };\n      \n\n\n      const response = await createOrder(orderData);\n      const newOrder = response.order;\n      const isMerged = response.merged;\n      \n\n      \n      // Save cart items before clearing cart\n      const currentCartItems = [...cart]; // Create a copy of current cart\n      \n      // Update state\n      setOrderId(newOrder.id);\n      setOrderNumber(newOrder.order_number);\n      setTotalAmount(newOrder.total_amount);\n      setOrderItems(currentCartItems); // Save cart items as order items\n      \n      setOrders(prevOrders => {\n        if (isMerged) {\n          // If merged, update the existing order instead of adding new one\n          return prevOrders.map(order => \n            order.id === newOrder.id ? newOrder : order\n          );\n        } else {\n          // If new order, add it to the list\n        const orderExists = prevOrders.some(order => order.id === newOrder.id);\n        if (orderExists) {\n          return prevOrders;\n        }\n        return [...prevOrders, newOrder];\n        }\n      });\n      setCart([]); // Clear cart after saving items\n      \n      // Always go directly to tracking page after placing order\n      setCurrentView('tracking');\n      \n      // Show appropriate message based on merge status\n      if (isMerged) {\n        toast.success('Items added to your existing order! 🍽️', {\n          duration: 4000,\n          icon: '➕'\n        });\n      } else {\n        toast.success('Order placed successfully! 🎉', {\n          duration: 4000,\n          icon: '✅'\n        });\n      }\n      \n      // Show QR return tip after a short delay\n      setTimeout(() => {\n        toast.success('📱 You can close this page and scan QR code later!', {\n          duration: 5000,\n          icon: '💡'\n        });\n      }, 2000);\n      \n    } catch (error) {\n      console.error('Error placing order:', error);\n      toast.error('Failed to place order. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n\n\n  // Helper functions\n  const formatTime = (dateString) => {\n    return new Date(dateString).toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n\n  const getStatusStep = (status) => {\n    const statusOrder = ['pending', 'preparing', 'ready', 'completed'];\n    if (status === 'cancelled') {\n      return 0; // Special case for cancelled orders\n    }\n    return statusOrder.indexOf(status) + 1;\n  };\n\n  // Initialize dashboard\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    if (tableNumber) {\n      // Clear existing orders when table changes to prevent mixing orders from different tables\n      setOrders([]);\n      // Don't clear orderItems here - they should persist for the current order\n      loadDashboardData();\n      setupRealTimeUpdates();\n    }\n  }, [tableNumber]); // Remove loadDashboardData and setupRealTimeUpdates from dependencies\n\n  // Effect to handle view changes when orders are loaded\n  useEffect(() => {\n    \n    // If forceMenuView is true, don't switch to tracking\n    if (forceMenuView) {\n      return;\n    }\n    \n            // If we have active orders and we're on menu view, switch to tracking\n        // BUT only if it's not a manual navigation to menu\n        if (orders.length > 0 && currentView === 'menu' && !manualMenuNavigation) {\n          setCurrentView('tracking');\n          \n          // Set the first active order as current\n          const firstOrder = orders[0];\n          setOrderId(firstOrder.id);\n          setOrderNumber(firstOrder.order_number);\n          setTotalAmount(firstOrder.total_amount);\n        }\n        \n        // Reset flags after a delay\n        if (currentView === 'menu' && manualMenuNavigation) {\n          setTimeout(() => {\n            setManualMenuNavigation(false);\n            setForceMenuView(false);\n          }, 10000); // 10 seconds to allow user interaction\n        }\n  }, [orders, currentView, manualMenuNavigation, forceMenuView]);\n\n  // Effect to ensure menu items are loaded\n  useEffect(() => {\n    if (menuItems.length === 0 && !loading) {\n      // Load menu items if they're not already loaded\n      const loadMenuData = async () => {\n        try {\n          const [menuData, categoriesData] = await Promise.all([\n            fetchMenuItems(),\n            fetchMenuCategories()\n          ]);\n          setMenuItems(menuData || []);\n          setCategories(categoriesData || []);\n        } catch (error) {\n          console.error('Error loading menu data:', error);\n          toast.error('Failed to load menu items');\n        }\n      };\n      loadMenuData();\n    }\n  }, [menuItems.length, loading]);\n\n\n\n  // Socket connection and order deletion listener\n  useEffect(() => {\n    // Connect to socket service\n    socketService.connect();\n    \n    // Join table room for order notifications\n    if (tableNumber) {\n      socketService.joinTable(tableNumber);\n    }\n    \n    // Join customer room for specific order notifications\n    if (orderId) {\n      socketService.joinCustomer(orderId);\n    }\n\n    // Listen for order deletion events\n    const handleOrderDeleted = (data) => {\n      // Check if this deletion affects our table and specific order\n      if (data.tableNumber && tableNumber && \n          data.tableNumber.toString() === tableNumber.toString() &&\n          data.orderId && orderId && \n          data.orderId.toString() === orderId.toString()) {\n        \n        // Clear all customer data and state\n        setCart([]);\n        setOrderId(null);\n        setOrderNumber(null);\n        setTotalAmount(null);\n        setOrderItems([]);\n        \n        // Clear localStorage data\n        try {\n          localStorage.removeItem(`cart_${tableNumber}`);\n          localStorage.removeItem(`customer_${tableNumber}`);\n          localStorage.removeItem(`instructions_${tableNumber}`);\n        } catch (error) {\n          console.error('❌ Error clearing localStorage:', error);\n        }\n        \n        // Remove the deleted order from the orders list\n        setOrders(prevOrders => {\n          const filteredOrders = prevOrders.filter(order => order.id !== data.orderId);\n          return filteredOrders;\n        });\n        \n        // Auto-redirect to main website for complete fresh start\n        toast.success('Order has been cancelled. Please scan QR code again for fresh start! 🍽️');\n        \n        // Redirect to main website after a short delay\n        setTimeout(() => {\n          window.location.href = '/';\n        }, 2000);\n      }\n    };\n\n    // Listen for order status updates\n    const handleStatusUpdate = (updateData) => {\n      // Check if this status update affects our table and specific order\n      if (updateData.tableNumber && tableNumber && \n          updateData.tableNumber.toString() === tableNumber.toString() &&\n          updateData.orderId && orderId && \n          updateData.orderId.toString() === orderId.toString()) {\n        \n        // Update the order status in our local state\n        setOrders(prevOrders => {\n          const updatedOrders = prevOrders.map(order => {\n            const isSameOrder = order?.id?.toString() === updateData?.orderId?.toString();\n            return isSameOrder\n              ? { ...order, status: updateData.status, updated_at: updateData.timestamp }\n              : order;\n          });\n          return updatedOrders;\n        });\n        \n        // If status is changed to 'completed', clear customer data and redirect\n        if (updateData.status === 'completed') {\n          \n          // Clear all customer data and state\n          setCart([]);\n          setOrderId(null);\n          setOrderNumber(null);\n          setTotalAmount(null);\n          setOrderItems([]);\n          \n          // Clear localStorage data\n          try {\n            localStorage.removeItem(`cart_${tableNumber}`);\n            localStorage.removeItem(`customer_${tableNumber}`);\n            localStorage.removeItem(`instructions_${tableNumber}`);\n          } catch (error) {\n            console.error('❌ Error clearing localStorage:', error);\n          }\n          \n          // Show success message and redirect to main website\n          toast.success('Order completed! Thank you for dining with us. Please scan QR code again for fresh start! 🍽️');\n          \n          // Redirect to main website after a short delay\n          setTimeout(() => {\n            window.location.href = '/';\n          }, 3000);\n        }\n      }\n    };\n\n    socketService.onOrderDeleted(handleOrderDeleted);\n    socketService.onOrderStatusUpdate(handleStatusUpdate);\n\n    // Cleanup function\n    return () => {\n      socketService.removeListener('order-deleted');\n      socketService.removeListener('order-status-update');\n    };\n  }, [tableNumber, loadDashboardData]);\n\n\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-sangeet-neutral-950 via-sangeet-neutral-900 to-sangeet-neutral-950\">\n      {/* Professional Header */}\n      <div className=\"bg-gradient-to-r from-sangeet-neutral-900/80 to-sangeet-neutral-800/80 backdrop-blur-xl border-b border-sangeet-neutral-700/50 fixed top-0 left-0 right-0 z-50\">\n        <div className=\"max-w-6xl mx-auto px-4 py-4\">\n          <div className=\"flex items-center justify-between\">\n            {/* Restaurant Info */}\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"w-10 h-10 bg-sangeet-400 rounded-lg flex items-center justify-center\">\n                <span className=\"text-xl\">🍽️</span>\n              </div>\n              <div>\n                <h1 className=\"text-xl font-bold text-sangeet-400\">Sangeet Restaurant</h1>\n                <p className=\"text-sangeet-neutral-400 text-sm\">\n                  Table {tableNumber} • {customerName}\n                  {orderId && ` • Order #${orderNumber || orderId}`}\n                </p>\n              </div>\n            </div>\n\n            {/* Navigation Buttons */}\n            <div className=\"flex items-center space-x-3\">\n              {!hasCancelledOrder && (\n                <button\n                  type=\"button\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    \n                    // Force menu view and prevent auto-switching\n                    setForceMenuView(true);\n                    setManualMenuNavigation(true);\n                    setCurrentView('menu');\n                    \n                    // Show immediate feedback\n                    toast.success('Switching to menu...', { duration: 1000 });\n                    \n                    // Load menu data if needed\n                    if (menuItems.length === 0) {\n                      toast.loading('Loading menu items...', { duration: 2000 });\n                      \n                      Promise.all([\n                        fetchMenuItems(),\n                        fetchMenuCategories()\n                      ]).then(([menuData, categoriesData]) => {\n                        setMenuItems(menuData || []);\n                        setCategories(categoriesData || []);\n                        toast.success('Menu ready!', { duration: 2000 });\n                      }).catch(error => {\n                        console.error('Error loading menu:', error);\n                        toast.error('Failed to load menu');\n                      });\n                    }\n                  }}\n                  disabled={loading}\n                  className={`px-4 py-2 font-semibold rounded-lg transition-colors duration-200 ${\n                    loading \n                      ? 'bg-sangeet-neutral-600 text-sangeet-neutral-400 cursor-not-allowed'\n                      : 'bg-sangeet-400 text-sangeet-neutral-950 hover:bg-sangeet-500'\n                  }`}\n                >\n                  {loading ? 'Loading...' : 'Continue Ordering'}\n                </button>\n              )}\n              <button\n                type=\"button\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  setCurrentView('tracking');\n                }}\n                className=\"px-4 py-2 bg-sangeet-neutral-700 text-sangeet-400 font-semibold rounded-lg hover:bg-sangeet-neutral-600 transition-colors duration-200\"\n              >\n                Track Orders\n              </button>\n\n\n              {currentView === 'menu' && cart.length > 0 && (\n                <button\n                  type=\"button\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    setCurrentView('cart');\n                  }}\n                  className=\"px-4 py-2 bg-green-600 text-white font-semibold rounded-lg hover:bg-green-700 transition-colors duration-200 flex items-center space-x-2\"\n                >\n                  <span>🛒</span>\n                  <span>Cart ({cart.length} items - ${getCartTotal().toFixed(2)})</span>\n                </button>\n              )}\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n      {/* QR Return Banner */}\n      <div className=\"bg-blue-900/20 border-b border-blue-500/30\">\n        <div className=\"max-w-6xl mx-auto px-4 py-3\">\n          <div className=\"flex items-center justify-center space-x-2 text-blue-300 text-sm\">\n            <span className=\"text-lg\">📱</span>\n            <span>QR Code Return: Scan anytime to track orders</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-6xl mx-auto px-4 pt-36 sm:pt-6\">\n\n        \n        {/* Dynamic Main View */}\n        <AnimatePresence mode=\"wait\">\n\n          {currentView === 'menu' && (\n            <>\n              \n              {menuItems.length === 0 ? (\n                <div className=\"text-center py-12\">\n                  <div className=\"text-6xl mb-4\">🍽️</div>\n                  <h3 className=\"text-xl font-semibold text-sangeet-400 mb-2\">Loading Menu...</h3>\n                  <p className=\"text-sangeet-neutral-400\">Please wait while we load the menu items</p>\n                  <button\n                    onClick={() => {\n                      toast.loading('Reloading menu...');\n                      Promise.all([fetchMenuItems(), fetchMenuCategories()]).then(([menuData, categoriesData]) => {\n                        setMenuItems(menuData || []);\n                        setCategories(categoriesData || []);\n                        toast.success('Menu reloaded!');\n                      });\n                    }}\n                    className=\"mt-4 px-4 py-2 bg-sangeet-400 text-sangeet-neutral-950 rounded-lg hover:bg-sangeet-500 transition-colors\"\n                  >\n                    Reload Menu\n                  </button>\n                </div>\n                            ) : (\n                <div className=\"h-screen flex flex-col\">\n                  {/* Fixed Header Controls */}\n                  <div className=\"flex-shrink-0 bg-sangeet-neutral-950/98 backdrop-blur-md border-b-2 border-sangeet-400/30 shadow-lg\">\n                    {/* Category Filter - Mobile Optimized */}\n                    <div className=\"p-4 pb-2\">\n                      <h3 className=\"text-base sm:text-lg font-semibold text-sangeet-400 mb-2 sm:mb-3 flex items-center\">\n                        <span className=\"mr-2 text-sm sm:text-base\">📋</span>\n                        Menu Categories\n                      </h3>\n                      <div className=\"flex gap-1 sm:gap-2 overflow-x-auto pb-2 sm:pb-0 scrollbar-hide\">\n                        <button\n                          onClick={() => setSelectedCategory('all')}\n                          className={`px-3 py-2 sm:px-4 sm:py-2 rounded-full text-xs sm:text-sm font-medium transition-all whitespace-nowrap flex-shrink-0 ${\n                            selectedCategory === 'all'\n                              ? 'bg-sangeet-400 text-sangeet-neutral-950 shadow-lg'\n                              : 'bg-sangeet-neutral-800 text-sangeet-neutral-400 hover:bg-sangeet-neutral-700'\n                          }`}\n                        >\n                          All Items\n                        </button>\n                        {categories.map((category) => (\n                          <button\n                            key={category.id || category.name}\n                            onClick={() => setSelectedCategory(category.name || category)}\n                            className={`px-3 py-2 sm:px-4 sm:py-2 rounded-full text-xs sm:text-sm font-medium transition-all whitespace-nowrap flex-shrink-0 ${\n                              selectedCategory === (category.name || category)\n                                ? 'bg-sangeet-400 text-sangeet-neutral-950 shadow-lg'\n                                : 'bg-sangeet-neutral-800 text-sangeet-neutral-400 hover:bg-sangeet-neutral-700'\n                            }`}\n                          >\n                            {category.name || category}\n                          </button>\n                        ))}\n                      </div>\n                    </div>\n\n                    {/* Search Bar and Start Fresh Button - Mobile Optimized */}\n                    <div className=\"px-4 pb-4\">\n                      <div className=\"flex gap-2 items-center\">\n                        <div className=\"relative flex-1\">\n                          <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                            <span className=\"text-sangeet-neutral-400 text-sm sm:text-base\">🔍</span>\n                          </div>\n                          <input\n                            type=\"text\"\n                            placeholder=\"Search dishes, ingredients...\"\n                            value={searchTerm}\n                            onChange={(e) => setSearchTerm(e.target.value)}\n                            className=\"w-full pl-10 pr-10 sm:pr-4 py-2.5 sm:py-3 bg-sangeet-neutral-800 border border-sangeet-neutral-700 rounded-lg text-sangeet-neutral-200 placeholder-sangeet-neutral-400 focus:outline-none focus:ring-2 focus:ring-sangeet-400 focus:border-transparent transition-all text-sm sm:text-base\"\n                          />\n                          {searchTerm && (\n                            <button\n                              onClick={() => setSearchTerm('')}\n                              className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-sangeet-neutral-400 hover:text-sangeet-neutral-200 transition-colors\"\n                            >\n                              <span className=\"text-lg\">✕</span>\n                            </button>\n                          )}\n                                                </div>\n                        \n\n                        </div>\n                    </div>\n                  </div>\n\n                  {/* Scrollable Menu Content */}\n                  <div className=\"flex-1 overflow-y-auto\">\n\n                  {/* Menu Items - Enhanced Grid with Consistent Layout */}\n                  {(() => {\n                    const filteredItems = menuItems.filter(item => {\n                      // Category filter\n                      if (selectedCategory !== 'all') {\n                        const itemCategory = item.category_name || item.category;\n                        const selectedCat = typeof selectedCategory === 'object' ? selectedCategory.name : selectedCategory;\n                        if (itemCategory !== selectedCat) return false;\n                      }\n                      \n                      // Search filter\n                      if (searchTerm.trim()) {\n                        const searchLower = searchTerm.toLowerCase();\n                        const matchesName = item.name.toLowerCase().includes(searchLower);\n                        const matchesDescription = item.description.toLowerCase().includes(searchLower);\n                        const matchesCategory = (item.category_name || item.category || '').toLowerCase().includes(searchLower);\n                        \n                        return matchesName || matchesDescription || matchesCategory;\n                      }\n                      \n                      return true;\n                    });\n\n                    if (filteredItems.length === 0) {\n                      return (\n                        <div className=\"text-center py-8 sm:py-12\">\n                          <div className=\"text-4xl sm:text-6xl mb-3 sm:mb-4\">🔍</div>\n                          <h3 className=\"text-lg sm:text-xl font-semibold text-sangeet-400 mb-2\">No items found</h3>\n                          <p className=\"text-sangeet-neutral-400 mb-4 text-sm sm:text-base px-4\">\n                            {searchTerm.trim() \n                              ? `No items match \"${searchTerm}\". Try adjusting your search or category filter.`\n                              : 'No items available in this category.'\n                            }\n                          </p>\n                          {(searchTerm.trim() || selectedCategory !== 'all') && (\n                            <button\n                              onClick={() => {\n                                setSearchTerm('');\n                                setSelectedCategory('all');\n                              }}\n                              className=\"px-4 py-2 bg-sangeet-400 text-sangeet-neutral-950 rounded-lg hover:bg-sangeet-500 transition-colors text-sm sm:text-base\"\n                            >\n                              Clear Filters\n                            </button>\n                          )}\n                        </div>\n                      );\n                    }\n\n                    return (\n                      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 sm:gap-4 lg:gap-6 mb-6\">\n                        {filteredItems.map((item) => (\n                        <div\n                          key={item.id}\n                          className=\"bg-gradient-to-br from-sangeet-neutral-900 to-sangeet-neutral-800 rounded-xl overflow-hidden border border-sangeet-neutral-700 hover:border-sangeet-neutral-600 transition-all flex flex-col h-full shadow-lg hover:shadow-xl\"\n                        >\n                          {/* Image Section - Mobile Optimized */}\n                          <div className=\"h-40 sm:h-48 lg:h-52 overflow-hidden\">\n                            <img\n                              src={item.image_url}\n                              alt={item.name}\n                              className=\"w-full h-full object-cover\"\n                            />\n                          </div>\n                          \n                          {/* Content Section - Mobile Optimized */}\n                          <div className=\"p-3 sm:p-4 lg:p-5 flex flex-col flex-grow\">\n                            {/* Header with Name and Price */}\n                            <div className=\"flex justify-between items-start mb-2\">\n                              <h3 className=\"text-sm sm:text-base lg:text-lg font-semibold text-sangeet-400 flex-1 mr-2 leading-tight\">{item.name}</h3>\n                              <span className=\"text-sangeet-400 font-bold text-base sm:text-lg whitespace-nowrap\">${item.price}</span>\n                            </div>\n                            \n                            {/* Description - Mobile Optimized */}\n                            <p className=\"text-xs sm:text-sm text-sangeet-neutral-400 mb-2 sm:mb-3 line-clamp-2 min-h-[2rem] sm:min-h-[2.5rem] leading-relaxed\">{item.description}</p>\n                            \n                            {/* Tags Section - Mobile Optimized */}\n                            <div className=\"flex flex-wrap gap-1 mb-3 sm:mb-4 min-h-[1.25rem] sm:min-h-[1.5rem]\">\n                              {item.is_vegetarian && (\n                                <span className=\"px-1.5 sm:px-2 py-0.5 sm:py-1 bg-green-600 text-white text-xs rounded-full\">🌱 Veg</span>\n                              )}\n                              {item.is_spicy && (\n                                <span className=\"px-1.5 sm:px-2 py-0.5 sm:py-1 bg-red-600 text-white text-xs rounded-full\">🔥 Spicy</span>\n                              )}\n                              {item.is_popular && (\n                                <span className=\"px-1.5 sm:px-2 py-0.5 sm:py-1 bg-yellow-600 text-white text-xs rounded-full\">⭐ Popular</span>\n                              )}\n                            </div>\n                            \n                            {/* Button Section - Mobile Optimized */}\n                            <div className=\"mt-auto\">\n                              <button\n                                onClick={() => addToCart(item)}\n                                className=\"w-full bg-sangeet-400 text-sangeet-neutral-950 py-2 sm:py-2.5 lg:py-3 rounded-lg font-semibold hover:bg-sangeet-300 transition-colors shadow-lg hover:shadow-xl text-xs sm:text-sm lg:text-base\"\n                              >\n                                Add to Cart\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                      </div>\n                    );\n                  })()}\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n\n          {currentView === 'cart' && (\n            <CartView \n              key=\"cart\"\n              cart={cart}\n              onUpdateQuantity={updateQuantity}\n              onRemoveFromCart={removeFromCart}\n              onPlaceOrder={handlePlaceOrder}\n              onContinueOrdering={() => setCurrentView('menu')}\n              getCartTotal={getCartTotal}\n              loading={loading}\n            />\n          )}\n\n          {currentView === 'tracking' && (\n            <TrackingView \n              key=\"tracking\"\n              orders={orders}\n              orderStatuses={orderStatuses}\n              getStatusStep={getStatusStep}\n              formatTime={formatTime}\n              formatDate={formatDate}\n              customerName={customerName}\n              tableNumber={tableNumber}\n            />\n          )}\n        </AnimatePresence>\n\n\n      </div>\n    </div>\n  );\n};\n\nexport default UnifiedDashboardPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}