{"ast":null,"code":"import toast from'react-hot-toast';/**\n * Universal logout function that clears all authentication data\n * and redirects to login page\n */export const logout=navigate=>{try{// Clear all possible authentication tokens and user data\nlocalStorage.removeItem('authToken');localStorage.removeItem('authUser');localStorage.removeItem('adminToken');localStorage.removeItem('adminUser');localStorage.removeItem('kitchenToken');localStorage.removeItem('kitchenUser');// Show success message\ntoast.success('Logged out successfully');// Redirect to login page\nnavigate('/login');console.log('ðŸ”“ User logged out successfully');}catch(error){console.error('Error during logout:',error);// Still redirect to login even if there's an error\nnavigate('/login');}};/**\n * Check if user is authenticated (any role)\n */export const isAuthenticated=()=>{const authToken=localStorage.getItem('authToken');const adminToken=localStorage.getItem('adminToken');const kitchenToken=localStorage.getItem('kitchenToken');return!!(authToken||adminToken||kitchenToken);};/**\n * Get current user data (from any stored location)\n */export const getCurrentUser=()=>{try{// Try to get user from different storage locations\nlet user=null;if(localStorage.getItem('authUser')){user=JSON.parse(localStorage.getItem('authUser'));}else if(localStorage.getItem('adminUser')){user=JSON.parse(localStorage.getItem('adminUser'));}else if(localStorage.getItem('kitchenUser')){user=JSON.parse(localStorage.getItem('kitchenUser'));}return user;}catch(error){console.error('Error parsing user data:',error);return null;}};/**\n * Get user role\n */export const getUserRole=()=>{const user=getCurrentUser();return(user===null||user===void 0?void 0:user.role)||null;};/**\n * Check if user has admin role\n */export const isAdmin=()=>{return getUserRole()==='admin';};/**\n * Check if user has staff role\n */export const isStaff=()=>{return getUserRole()==='staff';};","map":{"version":3,"names":["toast","logout","navigate","localStorage","removeItem","success","console","log","error","isAuthenticated","authToken","getItem","adminToken","kitchenToken","getCurrentUser","user","JSON","parse","getUserRole","role","isAdmin","isStaff"],"sources":["/Users/amanrana/Desktop/sangeet_restaurant_fresh/frontend/src/utils/auth.js"],"sourcesContent":["import toast from 'react-hot-toast';\n\n/**\n * Universal logout function that clears all authentication data\n * and redirects to login page\n */\nexport const logout = (navigate) => {\n  try {\n    // Clear all possible authentication tokens and user data\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('authUser');\n    localStorage.removeItem('adminToken');\n    localStorage.removeItem('adminUser');\n    localStorage.removeItem('kitchenToken');\n    localStorage.removeItem('kitchenUser');\n    \n    // Show success message\n    toast.success('Logged out successfully');\n    \n    // Redirect to login page\n    navigate('/login');\n    \n    console.log('ðŸ”“ User logged out successfully');\n  } catch (error) {\n    console.error('Error during logout:', error);\n    // Still redirect to login even if there's an error\n    navigate('/login');\n  }\n};\n\n/**\n * Check if user is authenticated (any role)\n */\nexport const isAuthenticated = () => {\n  const authToken = localStorage.getItem('authToken');\n  const adminToken = localStorage.getItem('adminToken');\n  const kitchenToken = localStorage.getItem('kitchenToken');\n  \n  return !!(authToken || adminToken || kitchenToken);\n};\n\n/**\n * Get current user data (from any stored location)\n */\nexport const getCurrentUser = () => {\n  try {\n    // Try to get user from different storage locations\n    let user = null;\n    \n    if (localStorage.getItem('authUser')) {\n      user = JSON.parse(localStorage.getItem('authUser'));\n    } else if (localStorage.getItem('adminUser')) {\n      user = JSON.parse(localStorage.getItem('adminUser'));\n    } else if (localStorage.getItem('kitchenUser')) {\n      user = JSON.parse(localStorage.getItem('kitchenUser'));\n    }\n    \n    return user;\n  } catch (error) {\n    console.error('Error parsing user data:', error);\n    return null;\n  }\n};\n\n/**\n * Get user role\n */\nexport const getUserRole = () => {\n  const user = getCurrentUser();\n  return user?.role || null;\n};\n\n/**\n * Check if user has admin role\n */\nexport const isAdmin = () => {\n  return getUserRole() === 'admin';\n};\n\n/**\n * Check if user has staff role\n */\nexport const isStaff = () => {\n  return getUserRole() === 'staff';\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,iBAAiB,CAEnC;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,MAAM,CAAIC,QAAQ,EAAK,CAClC,GAAI,CACF;AACAC,YAAY,CAACC,UAAU,CAAC,WAAW,CAAC,CACpCD,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC,CACnCD,YAAY,CAACC,UAAU,CAAC,YAAY,CAAC,CACrCD,YAAY,CAACC,UAAU,CAAC,WAAW,CAAC,CACpCD,YAAY,CAACC,UAAU,CAAC,cAAc,CAAC,CACvCD,YAAY,CAACC,UAAU,CAAC,aAAa,CAAC,CAEtC;AACAJ,KAAK,CAACK,OAAO,CAAC,yBAAyB,CAAC,CAExC;AACAH,QAAQ,CAAC,QAAQ,CAAC,CAElBI,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAChD,CAAE,MAAOC,KAAK,CAAE,CACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C;AACAN,QAAQ,CAAC,QAAQ,CAAC,CACpB,CACF,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAO,eAAe,CAAGA,CAAA,GAAM,CACnC,KAAM,CAAAC,SAAS,CAAGP,YAAY,CAACQ,OAAO,CAAC,WAAW,CAAC,CACnD,KAAM,CAAAC,UAAU,CAAGT,YAAY,CAACQ,OAAO,CAAC,YAAY,CAAC,CACrD,KAAM,CAAAE,YAAY,CAAGV,YAAY,CAACQ,OAAO,CAAC,cAAc,CAAC,CAEzD,MAAO,CAAC,EAAED,SAAS,EAAIE,UAAU,EAAIC,YAAY,CAAC,CACpD,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAClC,GAAI,CACF;AACA,GAAI,CAAAC,IAAI,CAAG,IAAI,CAEf,GAAIZ,YAAY,CAACQ,OAAO,CAAC,UAAU,CAAC,CAAE,CACpCI,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACd,YAAY,CAACQ,OAAO,CAAC,UAAU,CAAC,CAAC,CACrD,CAAC,IAAM,IAAIR,YAAY,CAACQ,OAAO,CAAC,WAAW,CAAC,CAAE,CAC5CI,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACd,YAAY,CAACQ,OAAO,CAAC,WAAW,CAAC,CAAC,CACtD,CAAC,IAAM,IAAIR,YAAY,CAACQ,OAAO,CAAC,aAAa,CAAC,CAAE,CAC9CI,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACd,YAAY,CAACQ,OAAO,CAAC,aAAa,CAAC,CAAC,CACxD,CAEA,MAAO,CAAAI,IAAI,CACb,CAAE,MAAOP,KAAK,CAAE,CACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,MAAO,KAAI,CACb,CACF,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAU,WAAW,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAH,IAAI,CAAGD,cAAc,CAAC,CAAC,CAC7B,MAAO,CAAAC,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEI,IAAI,GAAI,IAAI,CAC3B,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CAC3B,MAAO,CAAAF,WAAW,CAAC,CAAC,GAAK,OAAO,CAClC,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAG,OAAO,CAAGA,CAAA,GAAM,CAC3B,MAAO,CAAAH,WAAW,CAAC,CAAC,GAAK,OAAO,CAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}