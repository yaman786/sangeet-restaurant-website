{"ast":null,"code":"var _excluded = [\"id\"],\n  _excluded2 = [\"type\", \"layout\", \"connectNulls\", \"needClip\"],\n  _excluded3 = [\"activeDot\", \"animateNewValues\", \"animationBegin\", \"animationDuration\", \"animationEasing\", \"connectNulls\", \"dot\", \"hide\", \"isAnimationActive\", \"label\", \"legendType\", \"xAxisId\", \"yAxisId\", \"id\"];\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = _objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nimport * as React from 'react';\nimport { Component, useCallback, useRef, useState } from 'react';\nimport { clsx } from 'clsx';\nimport { Curve } from '../shape/Curve';\nimport { Dot } from '../shape/Dot';\nimport { Layer } from '../container/Layer';\nimport { LabelList } from '../component/LabelList';\nimport { interpolate, isNullish } from '../util/DataUtils';\nimport { filterProps, isClipDot } from '../util/ReactUtils';\nimport { Global } from '../util/Global';\nimport { getCateCoordinateOfLine, getTooltipNameProp, getValueByDataKey } from '../util/ChartUtils';\nimport { ActivePoints } from '../component/ActivePoints';\nimport { SetTooltipEntrySettings } from '../state/SetTooltipEntrySettings';\nimport { SetErrorBarContext } from '../context/ErrorBarContext';\nimport { GraphicalItemClipPath, useNeedsClip } from './GraphicalItemClipPath';\nimport { useChartLayout } from '../context/chartLayoutContext';\nimport { useIsPanorama } from '../context/PanoramaContext';\nimport { selectLinePoints } from '../state/selectors/lineSelectors';\nimport { useAppSelector } from '../state/hooks';\nimport { SetLegendPayload } from '../state/SetLegendPayload';\nimport { useAnimationId } from '../util/useAnimationId';\nimport { resolveDefaultProps } from '../util/resolveDefaultProps';\nimport { usePlotArea } from '../hooks';\nimport { RegisterGraphicalItemId } from '../context/RegisterGraphicalItemId';\nimport { SetCartesianGraphicalItem } from '../state/SetGraphicalItem';\nimport { svgPropertiesNoEvents } from '../util/svgPropertiesNoEvents';\nimport { JavascriptAnimate } from '../animation/JavascriptAnimate';\n\n/**\n * Internal props, combination of external props + defaultProps + private Recharts state\n */\n\n/**\n * External props, intended for end users to fill in\n */\n\n/**\n * Because of naming conflict, we are forced to ignore certain (valid) SVG attributes.\n */\n\nvar computeLegendPayloadFromAreaData = props => {\n  var {\n    dataKey,\n    name,\n    stroke,\n    legendType,\n    hide\n  } = props;\n  return [{\n    inactive: hide,\n    dataKey,\n    type: legendType,\n    color: stroke,\n    value: getTooltipNameProp(name, dataKey),\n    payload: props\n  }];\n};\nfunction getTooltipEntrySettings(props) {\n  var {\n    dataKey,\n    data,\n    stroke,\n    strokeWidth,\n    fill,\n    name,\n    hide,\n    unit\n  } = props;\n  return {\n    dataDefinedOnItem: data,\n    positions: undefined,\n    settings: {\n      stroke,\n      strokeWidth,\n      fill,\n      dataKey,\n      nameKey: undefined,\n      name: getTooltipNameProp(name, dataKey),\n      hide,\n      type: props.tooltipType,\n      color: props.stroke,\n      unit\n    }\n  };\n}\nvar generateSimpleStrokeDasharray = (totalLength, length) => {\n  return \"\".concat(length, \"px \").concat(totalLength - length, \"px\");\n};\nfunction repeat(lines, count) {\n  var linesUnit = lines.length % 2 !== 0 ? [...lines, 0] : lines;\n  var result = [];\n  for (var i = 0; i < count; ++i) {\n    result = [...result, ...linesUnit];\n  }\n  return result;\n}\nvar getStrokeDasharray = (length, totalLength, lines) => {\n  var lineLength = lines.reduce((pre, next) => pre + next);\n\n  // if lineLength is 0 return the default when no strokeDasharray is provided\n  if (!lineLength) {\n    return generateSimpleStrokeDasharray(totalLength, length);\n  }\n  var count = Math.floor(length / lineLength);\n  var remainLength = length % lineLength;\n  var restLength = totalLength - length;\n  var remainLines = [];\n  for (var i = 0, sum = 0; i < lines.length; sum += lines[i], ++i) {\n    if (sum + lines[i] > remainLength) {\n      remainLines = [...lines.slice(0, i), remainLength - sum];\n      break;\n    }\n  }\n  var emptyLines = remainLines.length % 2 === 0 ? [0, restLength] : [restLength];\n  return [...repeat(lines, count), ...remainLines, ...emptyLines].map(line => \"\".concat(line, \"px\")).join(', ');\n};\nfunction renderDotItem(option, props) {\n  var dotItem;\n  if (/*#__PURE__*/React.isValidElement(option)) {\n    dotItem = /*#__PURE__*/React.cloneElement(option, props);\n  } else if (typeof option === 'function') {\n    dotItem = option(props);\n  } else {\n    var className = clsx('recharts-line-dot', typeof option !== 'boolean' ? option.className : '');\n    dotItem = /*#__PURE__*/React.createElement(Dot, _extends({}, props, {\n      className: className\n    }));\n  }\n  return dotItem;\n}\nfunction shouldRenderDots(points, dot) {\n  if (points == null) {\n    return false;\n  }\n  if (dot) {\n    return true;\n  }\n  return points.length === 1;\n}\nfunction Dots(_ref) {\n  var {\n    clipPathId,\n    points,\n    props\n  } = _ref;\n  var {\n    dot,\n    dataKey,\n    needClip\n  } = props;\n  if (!shouldRenderDots(points, dot)) {\n    return null;\n  }\n\n  /*\n   * Exclude ID from the props passed to the Dots component\n   * because then the ID would be applied to multiple dots and it would no longer be unique.\n   */\n  var {\n      id\n    } = props,\n    propsWithoutId = _objectWithoutProperties(props, _excluded);\n  var clipDot = isClipDot(dot);\n  var lineProps = svgPropertiesNoEvents(propsWithoutId);\n  var customDotProps = filterProps(dot, true);\n  var dots = points.map((entry, i) => {\n    var dotProps = _objectSpread(_objectSpread(_objectSpread({\n      key: \"dot-\".concat(i),\n      r: 3\n    }, lineProps), customDotProps), {}, {\n      index: i,\n      cx: entry.x,\n      cy: entry.y,\n      dataKey,\n      value: entry.value,\n      payload: entry.payload,\n      points\n    });\n    return renderDotItem(dot, dotProps);\n  });\n  var dotsProps = {\n    clipPath: needClip ? \"url(#clipPath-\".concat(clipDot ? '' : 'dots-').concat(clipPathId, \")\") : undefined\n  };\n  return /*#__PURE__*/React.createElement(Layer, _extends({\n    className: \"recharts-line-dots\",\n    key: \"dots\"\n  }, dotsProps), dots);\n}\nfunction StaticCurve(_ref2) {\n  var {\n    clipPathId,\n    pathRef,\n    points,\n    strokeDasharray,\n    props,\n    showLabels\n  } = _ref2;\n  var {\n      type,\n      layout,\n      connectNulls,\n      needClip\n    } = props,\n    others = _objectWithoutProperties(props, _excluded2);\n  var curveProps = _objectSpread(_objectSpread({}, filterProps(others, true)), {}, {\n    fill: 'none',\n    className: 'recharts-line-curve',\n    clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : undefined,\n    points,\n    type,\n    layout,\n    connectNulls,\n    strokeDasharray: strokeDasharray !== null && strokeDasharray !== void 0 ? strokeDasharray : props.strokeDasharray\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, (points === null || points === void 0 ? void 0 : points.length) > 1 && /*#__PURE__*/React.createElement(Curve, _extends({}, curveProps, {\n    pathRef: pathRef\n  })), /*#__PURE__*/React.createElement(Dots, {\n    points: points,\n    clipPathId: clipPathId,\n    props: props\n  }), showLabels && LabelList.renderCallByParent(props, points));\n}\nfunction getTotalLength(mainCurve) {\n  try {\n    return mainCurve && mainCurve.getTotalLength && mainCurve.getTotalLength() || 0;\n  } catch (_unused) {\n    return 0;\n  }\n}\nfunction CurveWithAnimation(_ref3) {\n  var {\n    clipPathId,\n    props,\n    pathRef,\n    previousPointsRef,\n    longestAnimatedLengthRef\n  } = _ref3;\n  var {\n    points,\n    strokeDasharray,\n    isAnimationActive,\n    animationBegin,\n    animationDuration,\n    animationEasing,\n    animateNewValues,\n    width,\n    height,\n    onAnimationEnd,\n    onAnimationStart\n  } = props;\n  var prevPoints = previousPointsRef.current;\n  var animationId = useAnimationId(props, 'recharts-line-');\n  var [isAnimating, setIsAnimating] = useState(false);\n  var handleAnimationEnd = useCallback(() => {\n    if (typeof onAnimationEnd === 'function') {\n      onAnimationEnd();\n    }\n    setIsAnimating(false);\n  }, [onAnimationEnd]);\n  var handleAnimationStart = useCallback(() => {\n    if (typeof onAnimationStart === 'function') {\n      onAnimationStart();\n    }\n    setIsAnimating(true);\n  }, [onAnimationStart]);\n  var totalLength = getTotalLength(pathRef.current);\n  /*\n   * Here we want to detect if the length animation has been interrupted.\n   * For that we keep a reference to the furthest length that has been animated.\n   *\n   * And then, to keep things smooth, we add to it the current length that is being animated right now.\n   *\n   * If we did Math.max then it makes the length animation \"pause\" but we want to keep it smooth\n   * so in case we have some \"leftover\" length from the previous animation we add it to the current length.\n   *\n   * This is not perfect because the animation changes speed due to easing. The default easing is 'ease' which is not linear\n   * and makes it stand out. But it's good enough I suppose.\n   * If we want to fix it then we need to keep track of multiple animations and their easing and timings.\n   *\n   * If you want to see this in action, try to change the dataKey of the line chart while the initial animation is running.\n   * The Line begins with zero length and slowly grows to the full length. While this growth is in progress,\n   * change the dataKey and the Line will continue growing from where it has grown so far.\n   */\n  var startingPoint = longestAnimatedLengthRef.current;\n  return /*#__PURE__*/React.createElement(JavascriptAnimate, {\n    begin: animationBegin,\n    duration: animationDuration,\n    isActive: isAnimationActive,\n    easing: animationEasing,\n    onAnimationEnd: handleAnimationEnd,\n    onAnimationStart: handleAnimationStart,\n    key: animationId\n  }, t => {\n    var lengthInterpolated = interpolate(startingPoint, totalLength + startingPoint, t);\n    var curLength = Math.min(lengthInterpolated, totalLength);\n    var currentStrokeDasharray;\n    if (strokeDasharray) {\n      var lines = \"\".concat(strokeDasharray).split(/[,\\s]+/gim).map(num => parseFloat(num));\n      currentStrokeDasharray = getStrokeDasharray(curLength, totalLength, lines);\n    } else {\n      currentStrokeDasharray = generateSimpleStrokeDasharray(totalLength, curLength);\n    }\n    if (prevPoints) {\n      var prevPointsDiffFactor = prevPoints.length / points.length;\n      var stepData = t === 1 ? points : points.map((entry, index) => {\n        var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n        if (prevPoints[prevPointIndex]) {\n          var prev = prevPoints[prevPointIndex];\n          return _objectSpread(_objectSpread({}, entry), {}, {\n            x: interpolate(prev.x, entry.x, t),\n            y: interpolate(prev.y, entry.y, t)\n          });\n        }\n\n        // magic number of faking previous x and y location\n        if (animateNewValues) {\n          return _objectSpread(_objectSpread({}, entry), {}, {\n            x: interpolate(width * 2, entry.x, t),\n            y: interpolate(height / 2, entry.y, t)\n          });\n        }\n        return _objectSpread(_objectSpread({}, entry), {}, {\n          x: entry.x,\n          y: entry.y\n        });\n      });\n      // eslint-disable-next-line no-param-reassign\n      previousPointsRef.current = stepData;\n      return /*#__PURE__*/React.createElement(StaticCurve, {\n        props: props,\n        points: stepData,\n        clipPathId: clipPathId,\n        pathRef: pathRef,\n        showLabels: !isAnimating,\n        strokeDasharray: currentStrokeDasharray\n      });\n    }\n\n    /*\n     * Here it is important to wait a little bit with updating the previousPointsRef\n     * before the animation has a time to initialize.\n     * If we set the previous pointsRef immediately, we set it before the Legend height it calculated\n     * and before pathRef is set.\n     * If that happens, the Line will re-render again after Legend had reported its height\n     * which will start a new animation with the previous points as the starting point\n     * which gives the effect of the Line animating slightly upwards (where the animation distance equals the Legend height).\n     * Waiting for t > 0 is indirect but good enough to ensure that the Legend height is calculated and animation works properly.\n     *\n     * Total length similarly is calculated from the pathRef. We should not update the previousPointsRef\n     * before the pathRef is set, otherwise we will have a wrong total length.\n     */\n    if (t > 0 && totalLength > 0) {\n      // eslint-disable-next-line no-param-reassign\n      previousPointsRef.current = points;\n      /*\n       * totalLength is set from a ref and is not updated in the first tick of the animation.\n       * It defaults to zero which is exactly what we want here because we want to grow from zero,\n       * however the same happens when the data change.\n       *\n       * In that case we want to remember the previous length and continue from there, and only animate the shape.\n       *\n       * Therefore the totalLength > 0 check.\n       *\n       * The Animate is about to fire handleAnimationStart which will update the state\n       * and cause a re-render and read a new proper totalLength which will be used in the next tick\n       * and update the longestAnimatedLengthRef.\n       */\n      // eslint-disable-next-line no-param-reassign\n      longestAnimatedLengthRef.current = curLength;\n    }\n    return /*#__PURE__*/React.createElement(StaticCurve, {\n      props: props,\n      points: points,\n      clipPathId: clipPathId,\n      pathRef: pathRef,\n      showLabels: !isAnimating,\n      strokeDasharray: currentStrokeDasharray\n    });\n  });\n}\nfunction RenderCurve(_ref4) {\n  var {\n    clipPathId,\n    props\n  } = _ref4;\n  var {\n    points,\n    isAnimationActive\n  } = props;\n  var previousPointsRef = useRef(null);\n  var longestAnimatedLengthRef = useRef(0);\n  var pathRef = useRef(null);\n  var prevPoints = previousPointsRef.current;\n  if (isAnimationActive && points && points.length && prevPoints !== points) {\n    return /*#__PURE__*/React.createElement(CurveWithAnimation, {\n      props: props,\n      clipPathId: clipPathId,\n      previousPointsRef: previousPointsRef,\n      longestAnimatedLengthRef: longestAnimatedLengthRef,\n      pathRef: pathRef\n    });\n  }\n  return /*#__PURE__*/React.createElement(StaticCurve, {\n    props: props,\n    points: points,\n    clipPathId: clipPathId,\n    pathRef: pathRef,\n    showLabels: true\n  });\n}\nvar errorBarDataPointFormatter = (dataPoint, dataKey) => {\n  return {\n    x: dataPoint.x,\n    y: dataPoint.y,\n    value: dataPoint.value,\n    // @ts-expect-error getValueByDataKey does not validate the output type\n    errorVal: getValueByDataKey(dataPoint.payload, dataKey)\n  };\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass LineWithState extends Component {\n  render() {\n    var _filterProps;\n    var {\n      hide,\n      dot,\n      points,\n      className,\n      xAxisId,\n      yAxisId,\n      top,\n      left,\n      width,\n      height,\n      id,\n      needClip\n    } = this.props;\n    if (hide) {\n      return null;\n    }\n    var layerClass = clsx('recharts-line', className);\n    var clipPathId = id;\n    var {\n      r = 3,\n      strokeWidth = 2\n    } = (_filterProps = filterProps(dot, false)) !== null && _filterProps !== void 0 ? _filterProps : {\n      r: 3,\n      strokeWidth: 2\n    };\n    var clipDot = isClipDot(dot);\n    var dotSize = r * 2 + strokeWidth;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Layer, {\n      className: layerClass\n    }, needClip && /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(GraphicalItemClipPath, {\n      clipPathId: clipPathId,\n      xAxisId: xAxisId,\n      yAxisId: yAxisId\n    }), !clipDot && /*#__PURE__*/React.createElement(\"clipPath\", {\n      id: \"clipPath-dots-\".concat(clipPathId)\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      x: left - dotSize / 2,\n      y: top - dotSize / 2,\n      width: width + dotSize,\n      height: height + dotSize\n    }))), /*#__PURE__*/React.createElement(RenderCurve, {\n      props: this.props,\n      clipPathId: clipPathId\n    }), /*#__PURE__*/React.createElement(SetErrorBarContext, {\n      xAxisId: xAxisId,\n      yAxisId: yAxisId,\n      data: points,\n      dataPointFormatter: errorBarDataPointFormatter,\n      errorBarOffset: 0\n    }, this.props.children)), /*#__PURE__*/React.createElement(ActivePoints, {\n      activeDot: this.props.activeDot,\n      points: points,\n      mainColor: this.props.stroke,\n      itemDataKey: this.props.dataKey\n    }));\n  }\n}\nvar defaultLineProps = {\n  activeDot: true,\n  animateNewValues: true,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: 'ease',\n  connectNulls: false,\n  dot: true,\n  fill: '#fff',\n  hide: false,\n  isAnimationActive: !Global.isSsr,\n  label: false,\n  legendType: 'line',\n  stroke: '#3182bd',\n  strokeWidth: 1,\n  xAxisId: 0,\n  yAxisId: 0\n};\nfunction LineImpl(props) {\n  var _resolveDefaultProps = resolveDefaultProps(props, defaultLineProps),\n    {\n      activeDot,\n      animateNewValues,\n      animationBegin,\n      animationDuration,\n      animationEasing,\n      connectNulls,\n      dot,\n      hide,\n      isAnimationActive,\n      label,\n      legendType,\n      xAxisId,\n      yAxisId,\n      id\n    } = _resolveDefaultProps,\n    everythingElse = _objectWithoutProperties(_resolveDefaultProps, _excluded3);\n  var {\n    needClip\n  } = useNeedsClip(xAxisId, yAxisId);\n  var plotArea = usePlotArea();\n  var layout = useChartLayout();\n  var isPanorama = useIsPanorama();\n  var points = useAppSelector(state => selectLinePoints(state, xAxisId, yAxisId, isPanorama, id));\n  if (layout !== 'horizontal' && layout !== 'vertical' || points == null || plotArea == null) {\n    // Cannot render Line in an unsupported layout\n    return null;\n  }\n  var {\n    height,\n    width,\n    x: left,\n    y: top\n  } = plotArea;\n  return /*#__PURE__*/React.createElement(LineWithState, _extends({}, everythingElse, {\n    id: id,\n    connectNulls: connectNulls,\n    dot: dot,\n    activeDot: activeDot,\n    animateNewValues: animateNewValues,\n    animationBegin: animationBegin,\n    animationDuration: animationDuration,\n    animationEasing: animationEasing,\n    isAnimationActive: isAnimationActive,\n    hide: hide,\n    label: label,\n    legendType: legendType,\n    xAxisId: xAxisId,\n    yAxisId: yAxisId,\n    points: points,\n    layout: layout,\n    height: height,\n    width: width,\n    left: left,\n    top: top,\n    needClip: needClip\n  }));\n}\nexport function computeLinePoints(_ref5) {\n  var {\n    layout,\n    xAxis,\n    yAxis,\n    xAxisTicks,\n    yAxisTicks,\n    dataKey,\n    bandSize,\n    displayedData\n  } = _ref5;\n  return displayedData.map((entry, index) => {\n    // @ts-expect-error getValueByDataKey does not validate the output type\n    var value = getValueByDataKey(entry, dataKey);\n    if (layout === 'horizontal') {\n      var _x = getCateCoordinateOfLine({\n        axis: xAxis,\n        ticks: xAxisTicks,\n        bandSize,\n        entry,\n        index\n      });\n      var _y = isNullish(value) ? null : yAxis.scale(value);\n      return {\n        x: _x,\n        y: _y,\n        value,\n        payload: entry\n      };\n    }\n    var x = isNullish(value) ? null : xAxis.scale(value);\n    var y = getCateCoordinateOfLine({\n      axis: yAxis,\n      ticks: yAxisTicks,\n      bandSize,\n      entry,\n      index\n    });\n    if (x == null || y == null) {\n      return null;\n    }\n    return {\n      x,\n      y,\n      value,\n      payload: entry\n    };\n  }).filter(Boolean);\n}\nexport function Line(outsideProps) {\n  var props = resolveDefaultProps(outsideProps, defaultLineProps);\n  var isPanorama = useIsPanorama();\n  return /*#__PURE__*/React.createElement(RegisterGraphicalItemId, {\n    id: props.id,\n    type: \"line\"\n  }, id => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SetLegendPayload, {\n    legendPayload: computeLegendPayloadFromAreaData(props)\n  }), /*#__PURE__*/React.createElement(SetTooltipEntrySettings, {\n    fn: getTooltipEntrySettings,\n    args: props\n  }), /*#__PURE__*/React.createElement(SetCartesianGraphicalItem, {\n    type: \"line\",\n    id: id,\n    data: props.data,\n    xAxisId: props.xAxisId,\n    yAxisId: props.yAxisId,\n    zAxisId: 0,\n    dataKey: props.dataKey,\n    hide: props.hide,\n    isPanorama: isPanorama\n  }), /*#__PURE__*/React.createElement(LineImpl, _extends({}, props, {\n    id: id\n  }))));\n}\nLine.displayName = 'Line';","map":{"version":3,"names":["_excluded","_excluded2","_excluded3","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","_objectWithoutProperties","_objectWithoutPropertiesLoose","n","indexOf","propertyIsEnumerable","hasOwnProperty","_extends","assign","bind","React","Component","useCallback","useRef","useState","clsx","Curve","Dot","Layer","LabelList","interpolate","isNullish","filterProps","isClipDot","Global","getCateCoordinateOfLine","getTooltipNameProp","getValueByDataKey","ActivePoints","SetTooltipEntrySettings","SetErrorBarContext","GraphicalItemClipPath","useNeedsClip","useChartLayout","useIsPanorama","selectLinePoints","useAppSelector","SetLegendPayload","useAnimationId","resolveDefaultProps","usePlotArea","RegisterGraphicalItemId","SetCartesianGraphicalItem","svgPropertiesNoEvents","JavascriptAnimate","computeLegendPayloadFromAreaData","props","dataKey","name","stroke","legendType","hide","inactive","type","color","payload","getTooltipEntrySettings","data","strokeWidth","fill","unit","dataDefinedOnItem","positions","undefined","settings","nameKey","tooltipType","generateSimpleStrokeDasharray","totalLength","concat","repeat","lines","count","linesUnit","result","getStrokeDasharray","lineLength","reduce","pre","next","Math","floor","remainLength","restLength","remainLines","sum","slice","emptyLines","map","line","join","renderDotItem","option","dotItem","isValidElement","cloneElement","className","createElement","shouldRenderDots","points","dot","Dots","_ref","clipPathId","needClip","id","propsWithoutId","clipDot","lineProps","customDotProps","dots","entry","dotProps","key","index","cx","x","cy","y","dotsProps","clipPath","StaticCurve","_ref2","pathRef","strokeDasharray","showLabels","layout","connectNulls","others","curveProps","Fragment","renderCallByParent","getTotalLength","mainCurve","_unused","CurveWithAnimation","_ref3","previousPointsRef","longestAnimatedLengthRef","isAnimationActive","animationBegin","animationDuration","animationEasing","animateNewValues","width","height","onAnimationEnd","onAnimationStart","prevPoints","current","animationId","isAnimating","setIsAnimating","handleAnimationEnd","handleAnimationStart","startingPoint","begin","duration","isActive","easing","lengthInterpolated","curLength","min","currentStrokeDasharray","split","num","parseFloat","prevPointsDiffFactor","stepData","prevPointIndex","prev","RenderCurve","_ref4","errorBarDataPointFormatter","dataPoint","errorVal","LineWithState","render","_filterProps","xAxisId","yAxisId","top","left","layerClass","dotSize","dataPointFormatter","errorBarOffset","children","activeDot","mainColor","itemDataKey","defaultLineProps","isSsr","label","LineImpl","_resolveDefaultProps","everythingElse","plotArea","isPanorama","state","computeLinePoints","_ref5","xAxis","yAxis","xAxisTicks","yAxisTicks","bandSize","displayedData","_x","axis","ticks","_y","scale","Boolean","Line","outsideProps","legendPayload","fn","args","zAxisId","displayName"],"sources":["/Users/amanrana/Desktop/sangeet_restaurant_website/node_modules/recharts/es6/cartesian/Line.js"],"sourcesContent":["var _excluded = [\"id\"],\n  _excluded2 = [\"type\", \"layout\", \"connectNulls\", \"needClip\"],\n  _excluded3 = [\"activeDot\", \"animateNewValues\", \"animationBegin\", \"animationDuration\", \"animationEasing\", \"connectNulls\", \"dot\", \"hide\", \"isAnimationActive\", \"label\", \"legendType\", \"xAxisId\", \"yAxisId\", \"id\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from 'react';\nimport { Component, useCallback, useRef, useState } from 'react';\nimport { clsx } from 'clsx';\nimport { Curve } from '../shape/Curve';\nimport { Dot } from '../shape/Dot';\nimport { Layer } from '../container/Layer';\nimport { LabelList } from '../component/LabelList';\nimport { interpolate, isNullish } from '../util/DataUtils';\nimport { filterProps, isClipDot } from '../util/ReactUtils';\nimport { Global } from '../util/Global';\nimport { getCateCoordinateOfLine, getTooltipNameProp, getValueByDataKey } from '../util/ChartUtils';\nimport { ActivePoints } from '../component/ActivePoints';\nimport { SetTooltipEntrySettings } from '../state/SetTooltipEntrySettings';\nimport { SetErrorBarContext } from '../context/ErrorBarContext';\nimport { GraphicalItemClipPath, useNeedsClip } from './GraphicalItemClipPath';\nimport { useChartLayout } from '../context/chartLayoutContext';\nimport { useIsPanorama } from '../context/PanoramaContext';\nimport { selectLinePoints } from '../state/selectors/lineSelectors';\nimport { useAppSelector } from '../state/hooks';\nimport { SetLegendPayload } from '../state/SetLegendPayload';\nimport { useAnimationId } from '../util/useAnimationId';\nimport { resolveDefaultProps } from '../util/resolveDefaultProps';\nimport { usePlotArea } from '../hooks';\nimport { RegisterGraphicalItemId } from '../context/RegisterGraphicalItemId';\nimport { SetCartesianGraphicalItem } from '../state/SetGraphicalItem';\nimport { svgPropertiesNoEvents } from '../util/svgPropertiesNoEvents';\nimport { JavascriptAnimate } from '../animation/JavascriptAnimate';\n\n/**\n * Internal props, combination of external props + defaultProps + private Recharts state\n */\n\n/**\n * External props, intended for end users to fill in\n */\n\n/**\n * Because of naming conflict, we are forced to ignore certain (valid) SVG attributes.\n */\n\nvar computeLegendPayloadFromAreaData = props => {\n  var {\n    dataKey,\n    name,\n    stroke,\n    legendType,\n    hide\n  } = props;\n  return [{\n    inactive: hide,\n    dataKey,\n    type: legendType,\n    color: stroke,\n    value: getTooltipNameProp(name, dataKey),\n    payload: props\n  }];\n};\nfunction getTooltipEntrySettings(props) {\n  var {\n    dataKey,\n    data,\n    stroke,\n    strokeWidth,\n    fill,\n    name,\n    hide,\n    unit\n  } = props;\n  return {\n    dataDefinedOnItem: data,\n    positions: undefined,\n    settings: {\n      stroke,\n      strokeWidth,\n      fill,\n      dataKey,\n      nameKey: undefined,\n      name: getTooltipNameProp(name, dataKey),\n      hide,\n      type: props.tooltipType,\n      color: props.stroke,\n      unit\n    }\n  };\n}\nvar generateSimpleStrokeDasharray = (totalLength, length) => {\n  return \"\".concat(length, \"px \").concat(totalLength - length, \"px\");\n};\nfunction repeat(lines, count) {\n  var linesUnit = lines.length % 2 !== 0 ? [...lines, 0] : lines;\n  var result = [];\n  for (var i = 0; i < count; ++i) {\n    result = [...result, ...linesUnit];\n  }\n  return result;\n}\nvar getStrokeDasharray = (length, totalLength, lines) => {\n  var lineLength = lines.reduce((pre, next) => pre + next);\n\n  // if lineLength is 0 return the default when no strokeDasharray is provided\n  if (!lineLength) {\n    return generateSimpleStrokeDasharray(totalLength, length);\n  }\n  var count = Math.floor(length / lineLength);\n  var remainLength = length % lineLength;\n  var restLength = totalLength - length;\n  var remainLines = [];\n  for (var i = 0, sum = 0; i < lines.length; sum += lines[i], ++i) {\n    if (sum + lines[i] > remainLength) {\n      remainLines = [...lines.slice(0, i), remainLength - sum];\n      break;\n    }\n  }\n  var emptyLines = remainLines.length % 2 === 0 ? [0, restLength] : [restLength];\n  return [...repeat(lines, count), ...remainLines, ...emptyLines].map(line => \"\".concat(line, \"px\")).join(', ');\n};\nfunction renderDotItem(option, props) {\n  var dotItem;\n  if (/*#__PURE__*/React.isValidElement(option)) {\n    dotItem = /*#__PURE__*/React.cloneElement(option, props);\n  } else if (typeof option === 'function') {\n    dotItem = option(props);\n  } else {\n    var className = clsx('recharts-line-dot', typeof option !== 'boolean' ? option.className : '');\n    dotItem = /*#__PURE__*/React.createElement(Dot, _extends({}, props, {\n      className: className\n    }));\n  }\n  return dotItem;\n}\nfunction shouldRenderDots(points, dot) {\n  if (points == null) {\n    return false;\n  }\n  if (dot) {\n    return true;\n  }\n  return points.length === 1;\n}\nfunction Dots(_ref) {\n  var {\n    clipPathId,\n    points,\n    props\n  } = _ref;\n  var {\n    dot,\n    dataKey,\n    needClip\n  } = props;\n  if (!shouldRenderDots(points, dot)) {\n    return null;\n  }\n\n  /*\n   * Exclude ID from the props passed to the Dots component\n   * because then the ID would be applied to multiple dots and it would no longer be unique.\n   */\n  var {\n      id\n    } = props,\n    propsWithoutId = _objectWithoutProperties(props, _excluded);\n  var clipDot = isClipDot(dot);\n  var lineProps = svgPropertiesNoEvents(propsWithoutId);\n  var customDotProps = filterProps(dot, true);\n  var dots = points.map((entry, i) => {\n    var dotProps = _objectSpread(_objectSpread(_objectSpread({\n      key: \"dot-\".concat(i),\n      r: 3\n    }, lineProps), customDotProps), {}, {\n      index: i,\n      cx: entry.x,\n      cy: entry.y,\n      dataKey,\n      value: entry.value,\n      payload: entry.payload,\n      points\n    });\n    return renderDotItem(dot, dotProps);\n  });\n  var dotsProps = {\n    clipPath: needClip ? \"url(#clipPath-\".concat(clipDot ? '' : 'dots-').concat(clipPathId, \")\") : undefined\n  };\n  return /*#__PURE__*/React.createElement(Layer, _extends({\n    className: \"recharts-line-dots\",\n    key: \"dots\"\n  }, dotsProps), dots);\n}\nfunction StaticCurve(_ref2) {\n  var {\n    clipPathId,\n    pathRef,\n    points,\n    strokeDasharray,\n    props,\n    showLabels\n  } = _ref2;\n  var {\n      type,\n      layout,\n      connectNulls,\n      needClip\n    } = props,\n    others = _objectWithoutProperties(props, _excluded2);\n  var curveProps = _objectSpread(_objectSpread({}, filterProps(others, true)), {}, {\n    fill: 'none',\n    className: 'recharts-line-curve',\n    clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : undefined,\n    points,\n    type,\n    layout,\n    connectNulls,\n    strokeDasharray: strokeDasharray !== null && strokeDasharray !== void 0 ? strokeDasharray : props.strokeDasharray\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, (points === null || points === void 0 ? void 0 : points.length) > 1 && /*#__PURE__*/React.createElement(Curve, _extends({}, curveProps, {\n    pathRef: pathRef\n  })), /*#__PURE__*/React.createElement(Dots, {\n    points: points,\n    clipPathId: clipPathId,\n    props: props\n  }), showLabels && LabelList.renderCallByParent(props, points));\n}\nfunction getTotalLength(mainCurve) {\n  try {\n    return mainCurve && mainCurve.getTotalLength && mainCurve.getTotalLength() || 0;\n  } catch (_unused) {\n    return 0;\n  }\n}\nfunction CurveWithAnimation(_ref3) {\n  var {\n    clipPathId,\n    props,\n    pathRef,\n    previousPointsRef,\n    longestAnimatedLengthRef\n  } = _ref3;\n  var {\n    points,\n    strokeDasharray,\n    isAnimationActive,\n    animationBegin,\n    animationDuration,\n    animationEasing,\n    animateNewValues,\n    width,\n    height,\n    onAnimationEnd,\n    onAnimationStart\n  } = props;\n  var prevPoints = previousPointsRef.current;\n  var animationId = useAnimationId(props, 'recharts-line-');\n  var [isAnimating, setIsAnimating] = useState(false);\n  var handleAnimationEnd = useCallback(() => {\n    if (typeof onAnimationEnd === 'function') {\n      onAnimationEnd();\n    }\n    setIsAnimating(false);\n  }, [onAnimationEnd]);\n  var handleAnimationStart = useCallback(() => {\n    if (typeof onAnimationStart === 'function') {\n      onAnimationStart();\n    }\n    setIsAnimating(true);\n  }, [onAnimationStart]);\n  var totalLength = getTotalLength(pathRef.current);\n  /*\n   * Here we want to detect if the length animation has been interrupted.\n   * For that we keep a reference to the furthest length that has been animated.\n   *\n   * And then, to keep things smooth, we add to it the current length that is being animated right now.\n   *\n   * If we did Math.max then it makes the length animation \"pause\" but we want to keep it smooth\n   * so in case we have some \"leftover\" length from the previous animation we add it to the current length.\n   *\n   * This is not perfect because the animation changes speed due to easing. The default easing is 'ease' which is not linear\n   * and makes it stand out. But it's good enough I suppose.\n   * If we want to fix it then we need to keep track of multiple animations and their easing and timings.\n   *\n   * If you want to see this in action, try to change the dataKey of the line chart while the initial animation is running.\n   * The Line begins with zero length and slowly grows to the full length. While this growth is in progress,\n   * change the dataKey and the Line will continue growing from where it has grown so far.\n   */\n  var startingPoint = longestAnimatedLengthRef.current;\n  return /*#__PURE__*/React.createElement(JavascriptAnimate, {\n    begin: animationBegin,\n    duration: animationDuration,\n    isActive: isAnimationActive,\n    easing: animationEasing,\n    onAnimationEnd: handleAnimationEnd,\n    onAnimationStart: handleAnimationStart,\n    key: animationId\n  }, t => {\n    var lengthInterpolated = interpolate(startingPoint, totalLength + startingPoint, t);\n    var curLength = Math.min(lengthInterpolated, totalLength);\n    var currentStrokeDasharray;\n    if (strokeDasharray) {\n      var lines = \"\".concat(strokeDasharray).split(/[,\\s]+/gim).map(num => parseFloat(num));\n      currentStrokeDasharray = getStrokeDasharray(curLength, totalLength, lines);\n    } else {\n      currentStrokeDasharray = generateSimpleStrokeDasharray(totalLength, curLength);\n    }\n    if (prevPoints) {\n      var prevPointsDiffFactor = prevPoints.length / points.length;\n      var stepData = t === 1 ? points : points.map((entry, index) => {\n        var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n        if (prevPoints[prevPointIndex]) {\n          var prev = prevPoints[prevPointIndex];\n          return _objectSpread(_objectSpread({}, entry), {}, {\n            x: interpolate(prev.x, entry.x, t),\n            y: interpolate(prev.y, entry.y, t)\n          });\n        }\n\n        // magic number of faking previous x and y location\n        if (animateNewValues) {\n          return _objectSpread(_objectSpread({}, entry), {}, {\n            x: interpolate(width * 2, entry.x, t),\n            y: interpolate(height / 2, entry.y, t)\n          });\n        }\n        return _objectSpread(_objectSpread({}, entry), {}, {\n          x: entry.x,\n          y: entry.y\n        });\n      });\n      // eslint-disable-next-line no-param-reassign\n      previousPointsRef.current = stepData;\n      return /*#__PURE__*/React.createElement(StaticCurve, {\n        props: props,\n        points: stepData,\n        clipPathId: clipPathId,\n        pathRef: pathRef,\n        showLabels: !isAnimating,\n        strokeDasharray: currentStrokeDasharray\n      });\n    }\n\n    /*\n     * Here it is important to wait a little bit with updating the previousPointsRef\n     * before the animation has a time to initialize.\n     * If we set the previous pointsRef immediately, we set it before the Legend height it calculated\n     * and before pathRef is set.\n     * If that happens, the Line will re-render again after Legend had reported its height\n     * which will start a new animation with the previous points as the starting point\n     * which gives the effect of the Line animating slightly upwards (where the animation distance equals the Legend height).\n     * Waiting for t > 0 is indirect but good enough to ensure that the Legend height is calculated and animation works properly.\n     *\n     * Total length similarly is calculated from the pathRef. We should not update the previousPointsRef\n     * before the pathRef is set, otherwise we will have a wrong total length.\n     */\n    if (t > 0 && totalLength > 0) {\n      // eslint-disable-next-line no-param-reassign\n      previousPointsRef.current = points;\n      /*\n       * totalLength is set from a ref and is not updated in the first tick of the animation.\n       * It defaults to zero which is exactly what we want here because we want to grow from zero,\n       * however the same happens when the data change.\n       *\n       * In that case we want to remember the previous length and continue from there, and only animate the shape.\n       *\n       * Therefore the totalLength > 0 check.\n       *\n       * The Animate is about to fire handleAnimationStart which will update the state\n       * and cause a re-render and read a new proper totalLength which will be used in the next tick\n       * and update the longestAnimatedLengthRef.\n       */\n      // eslint-disable-next-line no-param-reassign\n      longestAnimatedLengthRef.current = curLength;\n    }\n    return /*#__PURE__*/React.createElement(StaticCurve, {\n      props: props,\n      points: points,\n      clipPathId: clipPathId,\n      pathRef: pathRef,\n      showLabels: !isAnimating,\n      strokeDasharray: currentStrokeDasharray\n    });\n  });\n}\nfunction RenderCurve(_ref4) {\n  var {\n    clipPathId,\n    props\n  } = _ref4;\n  var {\n    points,\n    isAnimationActive\n  } = props;\n  var previousPointsRef = useRef(null);\n  var longestAnimatedLengthRef = useRef(0);\n  var pathRef = useRef(null);\n  var prevPoints = previousPointsRef.current;\n  if (isAnimationActive && points && points.length && prevPoints !== points) {\n    return /*#__PURE__*/React.createElement(CurveWithAnimation, {\n      props: props,\n      clipPathId: clipPathId,\n      previousPointsRef: previousPointsRef,\n      longestAnimatedLengthRef: longestAnimatedLengthRef,\n      pathRef: pathRef\n    });\n  }\n  return /*#__PURE__*/React.createElement(StaticCurve, {\n    props: props,\n    points: points,\n    clipPathId: clipPathId,\n    pathRef: pathRef,\n    showLabels: true\n  });\n}\nvar errorBarDataPointFormatter = (dataPoint, dataKey) => {\n  return {\n    x: dataPoint.x,\n    y: dataPoint.y,\n    value: dataPoint.value,\n    // @ts-expect-error getValueByDataKey does not validate the output type\n    errorVal: getValueByDataKey(dataPoint.payload, dataKey)\n  };\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass LineWithState extends Component {\n  render() {\n    var _filterProps;\n    var {\n      hide,\n      dot,\n      points,\n      className,\n      xAxisId,\n      yAxisId,\n      top,\n      left,\n      width,\n      height,\n      id,\n      needClip\n    } = this.props;\n    if (hide) {\n      return null;\n    }\n    var layerClass = clsx('recharts-line', className);\n    var clipPathId = id;\n    var {\n      r = 3,\n      strokeWidth = 2\n    } = (_filterProps = filterProps(dot, false)) !== null && _filterProps !== void 0 ? _filterProps : {\n      r: 3,\n      strokeWidth: 2\n    };\n    var clipDot = isClipDot(dot);\n    var dotSize = r * 2 + strokeWidth;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Layer, {\n      className: layerClass\n    }, needClip && /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(GraphicalItemClipPath, {\n      clipPathId: clipPathId,\n      xAxisId: xAxisId,\n      yAxisId: yAxisId\n    }), !clipDot && /*#__PURE__*/React.createElement(\"clipPath\", {\n      id: \"clipPath-dots-\".concat(clipPathId)\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      x: left - dotSize / 2,\n      y: top - dotSize / 2,\n      width: width + dotSize,\n      height: height + dotSize\n    }))), /*#__PURE__*/React.createElement(RenderCurve, {\n      props: this.props,\n      clipPathId: clipPathId\n    }), /*#__PURE__*/React.createElement(SetErrorBarContext, {\n      xAxisId: xAxisId,\n      yAxisId: yAxisId,\n      data: points,\n      dataPointFormatter: errorBarDataPointFormatter,\n      errorBarOffset: 0\n    }, this.props.children)), /*#__PURE__*/React.createElement(ActivePoints, {\n      activeDot: this.props.activeDot,\n      points: points,\n      mainColor: this.props.stroke,\n      itemDataKey: this.props.dataKey\n    }));\n  }\n}\nvar defaultLineProps = {\n  activeDot: true,\n  animateNewValues: true,\n  animationBegin: 0,\n  animationDuration: 1500,\n  animationEasing: 'ease',\n  connectNulls: false,\n  dot: true,\n  fill: '#fff',\n  hide: false,\n  isAnimationActive: !Global.isSsr,\n  label: false,\n  legendType: 'line',\n  stroke: '#3182bd',\n  strokeWidth: 1,\n  xAxisId: 0,\n  yAxisId: 0\n};\nfunction LineImpl(props) {\n  var _resolveDefaultProps = resolveDefaultProps(props, defaultLineProps),\n    {\n      activeDot,\n      animateNewValues,\n      animationBegin,\n      animationDuration,\n      animationEasing,\n      connectNulls,\n      dot,\n      hide,\n      isAnimationActive,\n      label,\n      legendType,\n      xAxisId,\n      yAxisId,\n      id\n    } = _resolveDefaultProps,\n    everythingElse = _objectWithoutProperties(_resolveDefaultProps, _excluded3);\n  var {\n    needClip\n  } = useNeedsClip(xAxisId, yAxisId);\n  var plotArea = usePlotArea();\n  var layout = useChartLayout();\n  var isPanorama = useIsPanorama();\n  var points = useAppSelector(state => selectLinePoints(state, xAxisId, yAxisId, isPanorama, id));\n  if (layout !== 'horizontal' && layout !== 'vertical' || points == null || plotArea == null) {\n    // Cannot render Line in an unsupported layout\n    return null;\n  }\n  var {\n    height,\n    width,\n    x: left,\n    y: top\n  } = plotArea;\n  return /*#__PURE__*/React.createElement(LineWithState, _extends({}, everythingElse, {\n    id: id,\n    connectNulls: connectNulls,\n    dot: dot,\n    activeDot: activeDot,\n    animateNewValues: animateNewValues,\n    animationBegin: animationBegin,\n    animationDuration: animationDuration,\n    animationEasing: animationEasing,\n    isAnimationActive: isAnimationActive,\n    hide: hide,\n    label: label,\n    legendType: legendType,\n    xAxisId: xAxisId,\n    yAxisId: yAxisId,\n    points: points,\n    layout: layout,\n    height: height,\n    width: width,\n    left: left,\n    top: top,\n    needClip: needClip\n  }));\n}\nexport function computeLinePoints(_ref5) {\n  var {\n    layout,\n    xAxis,\n    yAxis,\n    xAxisTicks,\n    yAxisTicks,\n    dataKey,\n    bandSize,\n    displayedData\n  } = _ref5;\n  return displayedData.map((entry, index) => {\n    // @ts-expect-error getValueByDataKey does not validate the output type\n    var value = getValueByDataKey(entry, dataKey);\n    if (layout === 'horizontal') {\n      var _x = getCateCoordinateOfLine({\n        axis: xAxis,\n        ticks: xAxisTicks,\n        bandSize,\n        entry,\n        index\n      });\n      var _y = isNullish(value) ? null : yAxis.scale(value);\n      return {\n        x: _x,\n        y: _y,\n        value,\n        payload: entry\n      };\n    }\n    var x = isNullish(value) ? null : xAxis.scale(value);\n    var y = getCateCoordinateOfLine({\n      axis: yAxis,\n      ticks: yAxisTicks,\n      bandSize,\n      entry,\n      index\n    });\n    if (x == null || y == null) {\n      return null;\n    }\n    return {\n      x,\n      y,\n      value,\n      payload: entry\n    };\n  }).filter(Boolean);\n}\nexport function Line(outsideProps) {\n  var props = resolveDefaultProps(outsideProps, defaultLineProps);\n  var isPanorama = useIsPanorama();\n  return /*#__PURE__*/React.createElement(RegisterGraphicalItemId, {\n    id: props.id,\n    type: \"line\"\n  }, id => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SetLegendPayload, {\n    legendPayload: computeLegendPayloadFromAreaData(props)\n  }), /*#__PURE__*/React.createElement(SetTooltipEntrySettings, {\n    fn: getTooltipEntrySettings,\n    args: props\n  }), /*#__PURE__*/React.createElement(SetCartesianGraphicalItem, {\n    type: \"line\",\n    id: id,\n    data: props.data,\n    xAxisId: props.xAxisId,\n    yAxisId: props.yAxisId,\n    zAxisId: 0,\n    dataKey: props.dataKey,\n    hide: props.hide,\n    isPanorama: isPanorama\n  }), /*#__PURE__*/React.createElement(LineImpl, _extends({}, props, {\n    id: id\n  }))));\n}\nLine.displayName = 'Line';"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}